[{"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\signup-form-bloodBank.component.js":"1","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\signup-form-Donor.component.js":"2","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Donor\\DonorDonations.component.js":"3","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankProfile.component.js":"4","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankRequest.component.js":"5","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Donor\\DonorMakeDonations.component.js":"6","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Admin\\AdminManageUsers.component.js":"7","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Admin\\AdminStocks.component.js":"8","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Admin\\updateProfilesAdmin.js":"9","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankHome.component.js":"10","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Admin\\AdminAlerts.component.js":"11","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\misc\\ErrorNotice.js":"12","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\SidebarDataBloodBank.js":"13","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\SidebarDataDonor.js":"14","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\SidebarDataAdmin.js":"15","E:\\Study\\ReactLearn\\blood-bank-system\\src\\App.js":"16","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\signup-form-Recipient.component.js":"17","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\OurVision.component.js":"18","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\Footer.component.js":"19","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\Navbar.js":"20","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankReciever.component.js":"21","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Donor\\DonorProfile.component.js":"22","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Recipient\\ViewRequest.component.js":"23","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Recipient\\RecipientProfile.component.js":"24","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\Header.component.js":"25","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\authButtonOptions.js":"26","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\SidebarDataRecipient.js":"27","E:\\Study\\ReactLearn\\blood-bank-system\\src\\index.js":"28","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankDonor.component.js":"29","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Admin\\updateProfileUsersAdmin.js":"30","E:\\Study\\ReactLearn\\blood-bank-system\\src\\context\\BloodGroupsList.js":"31","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\Sidebar.component.js":"32","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Admin\\AdminManageDonation.component.js":"33","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Admin\\AdminRequests.component.js":"34","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankStock.component.js":"35","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Recipient\\SearchDonor.component.js":"36","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Donor\\DonorRequests.component.js":"37"},{"size":6967,"mtime":1610111934776,"results":"38","hashOfConfig":"39"},{"size":9526,"mtime":1611514515388,"results":"40","hashOfConfig":"39"},{"size":4208,"mtime":1614795060771,"results":"41","hashOfConfig":"39"},{"size":10797,"mtime":1611401719739,"results":"42","hashOfConfig":"39"},{"size":6023,"mtime":1613253378812,"results":"43","hashOfConfig":"39"},{"size":4473,"mtime":1610825569829,"results":"44","hashOfConfig":"39"},{"size":11052,"mtime":1611689634354,"results":"45","hashOfConfig":"39"},{"size":5420,"mtime":1614794272677,"results":"46","hashOfConfig":"39"},{"size":6534,"mtime":1611683035899,"results":"47","hashOfConfig":"39"},{"size":4787,"mtime":1611735754881,"results":"48","hashOfConfig":"39"},{"size":5174,"mtime":1614794248884,"results":"49","hashOfConfig":"39"},{"size":894,"mtime":1610059042726,"results":"50","hashOfConfig":"39"},{"size":1131,"mtime":1611401719738,"results":"51","hashOfConfig":"39"},{"size":830,"mtime":1610387672742,"results":"52","hashOfConfig":"39"},{"size":1246,"mtime":1611737611244,"results":"53","hashOfConfig":"39"},{"size":7304,"mtime":1611736109085,"results":"54","hashOfConfig":"39"},{"size":9493,"mtime":1611507960581,"results":"55","hashOfConfig":"39"},{"size":2196,"mtime":1610742548164,"results":"56","hashOfConfig":"39"},{"size":2613,"mtime":1610465721522,"results":"57","hashOfConfig":"39"},{"size":940,"mtime":1610043390166,"results":"58","hashOfConfig":"39"},{"size":5968,"mtime":1611361653667,"results":"59","hashOfConfig":"39"},{"size":12329,"mtime":1614795023880,"results":"60","hashOfConfig":"39"},{"size":4368,"mtime":1614794862977,"results":"61","hashOfConfig":"39"},{"size":12353,"mtime":1611355919557,"results":"62","hashOfConfig":"39"},{"size":1900,"mtime":1610387672585,"results":"63","hashOfConfig":"39"},{"size":1177,"mtime":1610113393110,"results":"64","hashOfConfig":"39"},{"size":981,"mtime":1611682778910,"results":"65","hashOfConfig":"39"},{"size":170,"mtime":1609836443361,"results":"66","hashOfConfig":"39"},{"size":5852,"mtime":1611361301310,"results":"67","hashOfConfig":"39"},{"size":8241,"mtime":1611688569820,"results":"68","hashOfConfig":"39"},{"size":75,"mtime":1610656724647,"results":"69","hashOfConfig":"39"},{"size":3443,"mtime":1611606253700,"results":"70","hashOfConfig":"39"},{"size":5291,"mtime":1614794257965,"results":"71","hashOfConfig":"39"},{"size":5262,"mtime":1614794265246,"results":"72","hashOfConfig":"39"},{"size":5425,"mtime":1614794580338,"results":"73","hashOfConfig":"39"},{"size":5324,"mtime":1614794855530,"results":"74","hashOfConfig":"39"},{"size":4167,"mtime":1614795045986,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1ngak6v",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\signup-form-bloodBank.component.js",[],["160","161"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\signup-form-Donor.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Donor\\DonorDonations.component.js",["162","163"],"import React, { Component } from 'react';\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../../context/userDetailContext';\r\nimport Axios from \"axios\";\r\n\r\nfunction DonorDonations() {\r\n  const { userLoginData } = useContext(UserContext)\r\n  const [isLoading, setLoading] = useState(true);\r\n  const history = useHistory();\r\n  const [data, setData] = useState([]);\r\n  const [bloodBank, setBloodBank] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!userLoginData.userData)\r\n      history.push('/')\r\n    try {\r\n      if (userLoginData.userData.type !== \"Donor\")\r\n        history.push(`/${userLoginData.userData.type}`)\r\n\r\n\r\n      Axios.get(`http://localhost:5000/donation/blood/${userLoginData.userData.bloodBank_id}`)\r\n        .then((response) => {\r\n          setBloodBank(response.data);\r\n        })\r\n\r\n      Axios.get(`http://localhost:5000/donation/${userLoginData.userData.user_id}`)\r\n        .then((response) => {\r\n          setData(response.data);\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error)\r\n        })\r\n\r\n    }\r\n    catch {\r\n      history.push('/')\r\n    }\r\n\r\n  }, [userLoginData])\r\n\r\n  if (isLoading) {\r\n    return (\r\n\r\n      <DonorDonationsContainer>\r\n        <div class=\"box\">\r\n          <div class=\"loader\">\r\n            <span class=\"back\">\r\n              <span>L</span>\r\n              <span>O</span>\r\n              <span>A</span>\r\n              <span>D</span>\r\n              <span>I</span>\r\n              <span>N</span>\r\n              <span>G</span>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </DonorDonationsContainer>\r\n\r\n    )\r\n  }\r\n  return (\r\n    <DonorDonationsContainer>\r\n      <div class=\"body\">\r\n        <h1>Your Donations</h1>\r\n\r\n        <table class=\"table table-striped\">\r\n          <thead class=\"thead\">\r\n            <tr>\r\n              <th scope=\"col\">ID</th>\r\n              <th scope=\"col\">BANK</th>\r\n              <th scope=\"col\">DATE</th>\r\n              <th scope=\"col\">QUANTITY</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.banks.map((result, index) => {\r\n\r\n              return (\r\n\r\n                <tr>\r\n                  <td>{index + 1}</td>\r\n                  <td>{bloodBank.bank}</td>\r\n                  <td>{(new Date(result.created_at)).toLocaleString().split(',')[0]}</td>\r\n                  <td>{result.quantity}</td>\r\n                </tr>\r\n\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n\r\n      </div>\r\n\r\n\r\n    </DonorDonationsContainer>\r\n  )\r\n}\r\nexport default DonorDonations;\r\nconst DonorDonationsContainer = styled.div`\r\n\r\n.spinnerl{\r\n  padding-top:150px;\r\n  padding-bottom:150px;\r\n  \r\n}\r\n\r\n.thead{\r\n    background-color:Black;\r\n    color:white;\r\n    font-weight:bold;\r\n    font-size:15px;\r\n    width:50%;\r\n}\r\n.table table-striped{\r\n    width:50%;\r\n}\r\n.body{\r\n    padding-left:20%;\r\n    padding-right:10%;\r\n    padding-top:3%;\r\n}\r\n\r\n\r\n@import url(https://fonts.googleapis.com/css?family=Roboto:300);\r\n\r\n \r\n.box{\r\n    background: none;\r\n    margin-top: 200px;\r\n\tpadding-top:300px;\r\n}\r\n\r\n.loader{\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    -webkit-transform: translate(-50%, -50%);\r\n    transform: translate(-50%, -50%);\r\n}​\r\n\t.back {\r\n\t\tmargin:1em auto;\r\n\t}\r\n\t.back span {\r\n\t\tfont-size:3em;\r\n\t\tcolor:#F2C640;;\r\n\t\tbackground: #e02525;\r\n\t\tdisplay:table-cell;\r\n\t\tbox-shadow:inset 0 0 5px rgba(0,0,0,0.3), 0 5px 0 #ccc;\r\n\t\tpadding: 0 15px;\r\n\t\tline-height: 100px;\r\n\t\tanimation:jumb 2s infinite;\r\n\t}\r\n\t@keyframes jumb {\r\n\t\t0% {\r\n\t\t\ttransform:translateY(0px)\r\n\t\t}\r\n\t\t50% {\r\n\t\t\ttransform:translateY(-30px);\r\n\t\t\tbox-shadow:0 15px 0 #F2C640;\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform:translateY(0px)\t\r\n\t\t}\r\n\t}\r\n\t.back span:nth-child(1) {\r\n\t\tanimation-delay:0s;\r\n\t}\r\n\t.back span:nth-child(2) {\r\n\t\tanimation-delay:.1s;\t\r\n\t}\r\n\t.back span:nth-child(3) {\r\n\t\tanimation-delay:.2s;\r\n\t}\r\n\t.back span:nth-child(4) {\r\n\t\tanimation-delay:.3s;\t\r\n\t}\r\n\t.back span:nth-child(5) {\r\n\t\tanimation-delay:.4s;\r\n\t}\r\n\t.back span:nth-child(6) {\r\n\t\tanimation-delay:.5s;\t\r\n\t}\r\n\t.back span:nth-child(7) {\r\n\t\tanimation-delay:.6s;\r\n\t}\r\n\r\n`;","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankProfile.component.js",["164","165","166"],"import React, { useEffect, useContext, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../../context/userDetailContext'\r\nimport Axios from 'axios'\r\nimport ErrorNotice from '../../misc/ErrorNotice';\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\n\r\nfunction BankProfile() {\r\n\r\n    const [name, setName] = useState();\r\n    const [address, setAddress] = useState();\r\n    const [contact, setContact] = useState();\r\n    const [username, setUserName] = useState();\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n\r\n    //for error\r\n    const [error, setError] = useState();\r\n\r\n\r\n     const { userLoginData, setUserLoginData } = useContext(UserContext)\r\n     const history = useHistory();\r\n\r\n    const [isLoading, setLoading] = useState(true);  //for 1st loading data\r\n    let [profileData, setProfileData] = useState();\r\n\r\n     useEffect(() => {\r\n         if (!userLoginData.userData)\r\n            history.push('/')\r\n      try {\r\n           if (userLoginData.userData.type !== \"BloodBank\")\r\n                history.push(`/${userLoginData.userData.type}`)\r\n\r\n            const getData = async () => {\r\n                const userResponse = await Axios.get(\"http://localhost:5000/login/profile\", {\r\n                    headers: { \"auth-token\": userLoginData.token }\r\n                });\r\n                setProfileData(userResponse.data)\r\n                setName(userResponse.data.name);\r\n                setAddress(userResponse.data.address)\r\n                setContact(userResponse.data.contact)\r\n                setEmail(userResponse.data.email)\r\n                setUserName(userResponse.data.username)\r\n\r\n                setLoading(false);\r\n            }\r\n            getData();\r\n\r\n        }\r\n        catch {\r\n            history.push('/')\r\n        }\r\n\r\n    }, [userLoginData])\r\n\r\n\r\n    const update = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n\r\n            const updatedUser = { name, address, contact,email };\r\n            await Axios.post(`http://localhost:5000/user/update/${userLoginData.userData.user_id}`, updatedUser);  //user and its login data in diff tables\r\n            const UpdatedLogin = { username, password }\r\n            await Axios.post(`http://localhost:5000/login/update/${userLoginData.userData.id}`, UpdatedLogin);  //user and its login data in diff tables\r\n\r\n            Swal.fire(\r\n                'Good job!',\r\n                'Your Profile Updated Successfully',\r\n                'success'\r\n            ) //user and its login data in diff tables\r\n\r\n\r\n\r\n        } catch (err) {\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n    };\r\n\r\n\r\n    const unregister = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n                await Axios.delete(` http://localhost:5000/login/delete`,\r\n                {\r\n                    headers: { \"auth-token\": userLoginData.token }\r\n                });  //user and its login data in diff tables\r\n\r\n            Swal.fire(\r\n                'Deleted',\r\n                'Awww! Sad to See You Go.',\r\n                'success'\r\n            ) //user and its login data in diff tables\r\n\r\n            setUserLoginData({\r\n                token: undefined,\r\n                userData: undefined,\r\n            });\r\n            localStorage.setItem(\"auth-token\", \"\");\r\n            history.push(\"/\")\r\n\r\n        } catch (err) {\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <BankProfileContainer>\r\n                <div class=\"box\">\r\n                    <div class=\"loader\">\r\n                        <span class=\"back\">\r\n                            <span>L</span>\r\n                            <span>O</span>\r\n                            <span>A</span>\r\n                            <span>D</span>\r\n                            <span>I</span>\r\n                            <span>N</span>\r\n                            <span>G</span>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </BankProfileContainer>\r\n\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <BankProfileContainer>\r\n            <div>\r\n                <h1 className=\"heading\">Update Profile:</h1>\r\n                <div className=\"container container-fluid\">\r\n                    <div className=\"d-flex justify-content-center h-100\">\r\n                        <div class=\"card signupCard\">\r\n                            <div className=\"card-body\">\r\n                                <h3>Profile</h3>\r\n                                {error && (\r\n                                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\r\n                                )}\r\n                                <form>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"bloodBankName\" >Name: </label>\r\n                                        <input id=\"bloodBankName\" type=\"text\" value={name} className=\"form-control\"\r\n                                          onChange={(e) => setName(e.target.value)}    />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankAddress\" >Address: </label>\r\n                                        <input id=\"BloodBankAddress\"  value={address}  type=\"text\" className=\"form-control\"\r\n                                           onChange={(e) => setAddress(e.target.value)}  />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankContact\" >Contact No: </label>\r\n                                        <input id=\"BloodBankContact\"  value={contact}  type=\"text\" className=\"form-control\"\r\n                                          onChange={(e) => setContact(e.target.value)}   />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankUsername\" >Username: </label>\r\n                                        <input id=\"BloodBankUsername\"  value={username}  type=\"text\" className=\"form-control\"\r\n                                          onChange={(e) => setUserName(e.target.value)}  />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankEmail\" >Email: </label>\r\n                                        <input id=\"BloodBankEmail\"  value={email}  type=\"text\" className=\"form-control\"\r\n                                         onChange={(e) => setEmail(e.target.value)}    />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankPassword\" >Password: </label>\r\n                                        <input id=\"BloodBankPassword\"  type=\"password\" className=\"form-control\"\r\n                                         onChange={(e) => setPassword(e.target.value)}   />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"submit\" value=\"Unregister\" className=\"btn float-right unregister_btn\" onClick={unregister} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn float-right update_btn\" onClick={update}  />\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </BankProfileContainer>\r\n    )\r\n\r\n}\r\n\r\nexport default BankProfile;\r\n\r\nconst BankProfileContainer = styled.div`\r\n\r\n@import url('https://fonts.googleapis.com/css2?family=Righteous&display=swap');\r\n\r\nhtml,body{\r\nheight: 100%;\r\n}\r\n\r\n.spinnerl{\r\n    padding-top:150px;\r\n    padding-bottom:150px;\r\n    \r\n}\r\n\r\nlabel {\r\npadding-right: 20px;\r\n}\r\n.container{\r\nheight: 100%;\r\nalign-content: center;\r\npadding-top: 50px;\r\nfont-family: 'Righteous', cursive;\r\n}\r\n\r\n.signupCard{\r\nheight: 500px;\r\nalign-content: center;\r\nmargin: auto;\r\nwidth: 500px;\r\nbackground-color: rgba(15, 74, 92, 0.473) ;\r\n}\r\n\r\n.card-header {\r\nbackground-color: white;\r\n}\r\n.card-body h3{\r\ncolor: white;\r\ntext-align:center;\r\npadding-bottom:5px;\r\n}\r\n#blood{\r\n    width:75%;\r\n    border:none;\r\n}\r\n\r\n.update_btn{\r\ncolor: black;\r\nbackground-color: #FFC312;\r\nwidth: 100px;\r\nmargin: 0 40px;\r\n}\r\n\r\n.update_btn:hover{\r\ncolor: black;\r\nbackground-color: white;\r\n}\r\n\r\n.unregister_btn{\r\n    color: white;\r\n    background-color: #e02525;\r\n    width: 100px;\r\n    margin: 0 40px;\r\n}\r\n    \r\n.unregister_btn:hover{\r\ncolor: black;\r\nbackground-color: white;\r\n}\r\n\r\n.ButtonGroup {\r\n    margin: auto;\r\n    justify-content: center;\r\n}\r\n.heading{\r\n    padding-top:5%;\r\n    padding-left:30%\r\n}\r\n\r\n@import url(https://fonts.googleapis.com/css?family=Roboto:300);\r\n\r\n \r\n.box{\r\n    background: none;\r\n    margin-top: 200px;\r\n\tpadding-top:300px;\r\n}\r\n\r\n.loader{\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    -webkit-transform: translate(-50%, -50%);\r\n    transform: translate(-50%, -50%);\r\n}​\r\n\t.back {\r\n\t\tmargin:1em auto;\r\n\t}\r\n\t.back span {\r\n\t\tfont-size:3em;\r\n\t\tcolor:#F2C640;;\r\n\t\tbackground: #e02525;\r\n\t\tdisplay:table-cell;\r\n\t\tbox-shadow:inset 0 0 5px rgba(0,0,0,0.3), 0 5px 0 #ccc;\r\n\t\tpadding: 0 15px;\r\n\t\tline-height: 100px;\r\n\t\tanimation:jumb 2s infinite;\r\n\t}\r\n\t@keyframes jumb {\r\n\t\t0% {\r\n\t\t\ttransform:translateY(0px)\r\n\t\t}\r\n\t\t50% {\r\n\t\t\ttransform:translateY(-30px);\r\n\t\t\tbox-shadow:0 15px 0 #F2C640;\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform:translateY(0px)\t\r\n\t\t}\r\n\t}\r\n\t.back span:nth-child(1) {\r\n\t\tanimation-delay:0s;\r\n\t}\r\n\t.back span:nth-child(2) {\r\n\t\tanimation-delay:.1s;\t\r\n\t}\r\n\t.back span:nth-child(3) {\r\n\t\tanimation-delay:.2s;\r\n\t}\r\n\t.back span:nth-child(4) {\r\n\t\tanimation-delay:.3s;\t\r\n\t}\r\n\t.back span:nth-child(5) {\r\n\t\tanimation-delay:.4s;\r\n\t}\r\n\t.back span:nth-child(6) {\r\n\t\tanimation-delay:.5s;\t\r\n\t}\r\n\t.back span:nth-child(7) {\r\n\t\tanimation-delay:.6s;\r\n\t}\r\n\r\n`\r\n\r\n{/* <DonorProfileContainer>\r\n<div class=\"d-flex justify-content-center\">\r\n    <div className=\"spinnerl\">\r\n        <div class=\"spinner-border text-danger\" role=\"status\" >\r\n            <span class=\"sr-only\">Loading...</span>\r\n        </div>\r\n    </div>\r\n</div>\r\n</DonorProfileContainer> */}\r\n\r\n","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankRequest.component.js",["167"],"import React, { useEffect, useContext, useState } from \"react\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../../context/userDetailContext';\r\nimport Axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport ErrorNotice from '../../misc/ErrorNotice';\r\n\r\n\r\n\r\nfunction RenderButtons(props) {\r\n  if (props.status === 'Active') {\r\n    return (\r\n      <td>\r\n        <button type=\"button\" class=\"btn btn-success\" onClick={props.Donate}>Donate</button>\r\n      </td>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <td>\r\n    </td>\r\n  )\r\n}\r\n\r\n\r\nfunction RequestRow(props) {\r\n  const { userLoginData } = useContext(UserContext);\r\n\r\n  const Donate = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await Axios.post(`http://localhost:5000/bloodBag/CompleteDonation/${userLoginData.userData.user_id}`, {\r\n        id: props.request_id,\r\n        bloodGroup: props.request.bloodGroup,\r\n        quantity: props.request.quantity\r\n      });\r\n      Swal.fire(\r\n        'Completed',\r\n        'yayy! Successfully Donated',\r\n        'success'\r\n      )\r\n    } catch (err) {\r\n      err.response.data.msg && props.setError(err.response.data.msg);\r\n    }\r\n    props.update();\r\n  }\r\n\r\n  return (\r\n    <tr>\r\n      <th scope=\"row\">{props.index}</th>\r\n      <td>{props.request.recipient_name}</td>\r\n      <td>{props.request.age} </td>\r\n      <td>{props.request.bloodGroup}</td>\r\n      <td>{props.request.address}</td>\r\n      <td>{props.request.contact}</td>\r\n      <td>{props.request.quantity}</td>\r\n      <td>{props.request.status}</td>\r\n      <RenderButtons status={props.request.status} Donate={Donate} />\r\n    </tr>\r\n  )\r\n}\r\n\r\n\r\nfunction BankRequests() {\r\n  //to prevent from loading if user is log out\r\n  const { userLoginData } = useContext(UserContext)\r\n  const history = useHistory();\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const [error, setErr] = useState();\r\n\r\n\r\n  useEffect(() => {\r\n    if (!userLoginData.userData)\r\n      history.push('/')\r\n    try {\r\n      if (userLoginData.userData.type !== \"BloodBank\")  //to prevent accessing any other type\r\n        history.push(`/${userLoginData.userData.type}`)\r\n\r\n\r\n      //get data\r\n      const getData = async () => {\r\n        const requestResponse = await Axios.get(`http://localhost:5000/bloodRequest/getAllRequests/${userLoginData.userData.user_id}`);\r\n        setData(requestResponse.data);\r\n        setLoading(false);\r\n      }\r\n      getData();\r\n\r\n    }\r\n    catch {\r\n      history.push('/')\r\n    }\r\n\r\n\r\n  }, [userLoginData])\r\n\r\n\r\n  const setError = (err) => {\r\n    setErr(err);\r\n  }\r\n\r\n  //after deleting data not updating thats why\r\n  const updateState = async () => {\r\n    const requestResponse = await Axios.get(`http://localhost:5000/bloodRequest/getAllRequests/${userLoginData.userData.user_id}`);\r\n    setData(requestResponse.data)\r\n  }\r\n\r\n  const showRequests = () => {\r\n    return (\r\n      data.map((currentRequest, index) => {\r\n        //this is returning single donor row\r\n        return <RequestRow request={currentRequest} request_id={currentRequest._id} index={index + 1} update={updateState} setError={setError} />\r\n      })\r\n    )\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <BankContainer>\r\n        <div class=\"box\">\r\n          <div class=\"loader\">\r\n            <span class=\"back\">\r\n              <span>L</span>\r\n              <span>O</span>\r\n              <span>A</span>\r\n              <span>D</span>\r\n              <span>I</span>\r\n              <span>N</span>\r\n              <span>G</span>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </BankContainer>\r\n\r\n    )\r\n  }\r\n\r\n  return (\r\n    <BankContainer>\r\n      <div class=\"body\">\r\n        <h1>Patient Requests</h1>\r\n        {error && (\r\n          <ErrorNotice message={error} clearError={() => setError(undefined)} />\r\n        )}\r\n        <table class=\"table table-striped\">\r\n          <thead class=\"thead\">\r\n            <tr>\r\n              <th scope=\"col\">ID</th>\r\n              <th scope=\"col\">RECIPIENT NAME</th>\r\n              <th scope=\"col\">AGE</th>\r\n              <th scope=\"col\">BLOOD GROUP</th>\r\n              <th scope=\"col\">ADDRESS</th>\r\n              <th scope=\"col\">CONTACT NO</th>\r\n              <th scope=\"col\">QUANTITY</th>\r\n              <th scope=\"col\">STATUS</th>\r\n              <th scope=\"col\">ACTION</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {showRequests()}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </BankContainer>\r\n  )\r\n}\r\n\r\nexport default BankRequests;\r\n\r\nconst BankContainer = styled.div`\r\n.thead{\r\n    background-color:Black;\r\n    color:white;\r\n    font-weight:bold;\r\n    font-size:15px;\r\n    width:50%;\r\n}\r\n.table table-striped{\r\n    width:50%;\r\n}\r\n.body{\r\n    padding-left:20%;\r\n    padding-right:10%;\r\n    padding-top:3%;\r\n}\r\n\r\n\r\n\r\n@import url(https://fonts.googleapis.com/css?family=Roboto:300);\r\n\r\n \r\n.box{\r\n    background: none;\r\n    margin-top: 200px;\r\n\tpadding-top:300px;\r\n}\r\n\r\n.loader{\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    -webkit-transform: translate(-50%, -50%);\r\n    transform: translate(-50%, -50%);\r\n}​\r\n\t.back {\r\n\t\tmargin:1em auto;\r\n\t}\r\n\t.back span {\r\n\t\tfont-size:3em;\r\n\t\tcolor:#F2C640;;\r\n\t\tbackground: #e02525;\r\n\t\tdisplay:table-cell;\r\n\t\tbox-shadow:inset 0 0 5px rgba(0,0,0,0.3), 0 5px 0 #ccc;\r\n\t\tpadding: 0 15px;\r\n\t\tline-height: 100px;\r\n\t\tanimation:jumb 2s infinite;\r\n\t}\r\n\t@keyframes jumb {\r\n\t\t0% {\r\n\t\t\ttransform:translateY(0px)\r\n\t\t}\r\n\t\t50% {\r\n\t\t\ttransform:translateY(-30px);\r\n\t\t\tbox-shadow:0 15px 0 #F2C640;\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform:translateY(0px)\t\r\n\t\t}\r\n\t}\r\n\t.back span:nth-child(1) {\r\n\t\tanimation-delay:0s;\r\n\t}\r\n\t.back span:nth-child(2) {\r\n\t\tanimation-delay:.1s;\t\r\n\t}\r\n\t.back span:nth-child(3) {\r\n\t\tanimation-delay:.2s;\r\n\t}\r\n\t.back span:nth-child(4) {\r\n\t\tanimation-delay:.3s;\t\r\n\t}\r\n\t.back span:nth-child(5) {\r\n\t\tanimation-delay:.4s;\r\n\t}\r\n\t.back span:nth-child(6) {\r\n\t\tanimation-delay:.5s;\t\r\n\t}\r\n\t.back span:nth-child(7) {\r\n\t\tanimation-delay:.6s;\r\n\t}\r\n\r\n\r\n`;",["168","169"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Donor\\DonorMakeDonations.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Admin\\AdminManageUsers.component.js",["170","171"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Admin\\AdminStocks.component.js",["172","173","174"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../../context/userDetailContext'\r\nimport Axios from 'axios';\r\nimport { bloodGroups } from '../../../context/BloodGroupsList';\r\n\r\nfunction AdminStock() {\r\n  //to prevent from loading if user is log out\r\n  const { userLoginData } = useContext(UserContext)\r\n  const history = useHistory();\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n\r\n  function countQuantity() {\r\n    var c = 0;\r\n    for (var i = 0; i < data.length; i++) {\r\n      c = c + data[i].quantity;\r\n    }\r\n    return c;\r\n  }\r\n  function countAll() {\r\n    var c = 0;\r\n    for (var i = 0; i < data.length; i++) {\r\n      if (search == '') {\r\n        c = 0;\r\n      }\r\n      if (data[i].bloodGroup == search) { c = c + data[i].quantity; }\r\n    }\r\n    return c;\r\n  }\r\n  useEffect(() => {\r\n    if (!userLoginData.userData)\r\n      history.push('/')\r\n    try {\r\n      // if (userLoginData.userData.type !== \"BloodBank\")  //to prevent accessing any other type\r\n      // history.push(`/${userLoginData.userData.type}`)\r\n      history.push(\"/Admin/Stock\");\r\n      Axios.get(\"http://localhost:5000/bloodBag/getAdminBags\")\r\n        .then((response) => {\r\n          setData(response.data);\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error)\r\n        })\r\n    }\r\n    catch {\r\n      history.push('/')\r\n    }\r\n  }, [userLoginData])\r\n\r\n  if (isLoading) {\r\n    return (\r\n\r\n      <AdminContainer>\r\n        <div class=\"box\">\r\n          <div class=\"loader\">\r\n            <span class=\"back\">\r\n              <span>L</span>\r\n              <span>O</span>\r\n              <span>A</span>\r\n              <span>D</span>\r\n              <span>I</span>\r\n              <span>N</span>\r\n              <span>G</span>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </AdminContainer>\r\n\r\n    )\r\n  }\r\n  return (\r\n    <AdminContainer>\r\n      <div class=\"body\">\r\n        <h1>Blood Stock</h1>\r\n\r\n\r\n        <table class=\"table table-striped\">\r\n          <thead class=\"thead\">\r\n            <tr>\r\n              <th scope=\"col\">ID</th>\r\n              <th scope=\"col\">BLOOD GROUP</th>\r\n              <th scope=\"col\">DATE DONATED</th>\r\n              <th scope=\"col\">BLOOD BANK</th>\r\n              <th scope=\"col\">QUANTITY</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map((result, index) => {\r\n              return (\r\n                <tr>\r\n                  <td>{index + 1}</td>\r\n                  <td>{result.bloodGroup}</td>\r\n                  <td>{(new Date(result.dateDonated).toLocaleString().split(',')[0])}</td>\r\n                  <td>{result.name}</td>\r\n                  <td>{result.quantity}</td>\r\n                </tr>\r\n\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n        <h6>Total Quantity:  <input type=\"text\" id=\"myText\" value={countQuantity()} /></h6>\r\n        <h2>Blood Quantity</h2>\r\n        <div className=\"Bottom\">\r\n          <h5>Select Blood Group:</h5>\r\n          <select id=\"blood\" className=\"selectB\" name=\"bloodGroup\" onChange={(event) => { setSearch(event.target.value) }}>\r\n            <option> </option>\r\n            {bloodGroups.map(item => {\r\n              return (\r\n                <option value={item}>{item}</option>\r\n              )\r\n            })}\r\n          </select>\r\n          <br />\r\n          <input type=\"text\"\r\n            id=\"myText\"\r\n            value={countAll()} />\r\n        </div>\r\n      </div>\r\n    </AdminContainer>\r\n  )\r\n}\r\n\r\nexport default AdminStock;\r\n\r\nconst AdminContainer = styled.div`\r\n.spinnerl{\r\n  padding-top:150px;\r\n  padding-bottom:150px; \r\n}\r\n.thead{\r\n    background-color:Black;\r\n    color:white;\r\n    font-weight:bold;\r\n    font-size:15px;\r\n    width:50%;\r\n}\r\n.table table-striped{\r\n    width:50%;\r\n}\r\n.body{\r\n    padding-left:20%;\r\n    padding-right:10%;\r\n    padding-top:3%;\r\n}\r\n\r\n.Bottom{\r\n  padding-left:70%;  \r\n}\r\nh2{\r\n    color:#6B1A08;\r\n    padding-left:65%;\r\n    font-weight:bold;\r\n}\r\nh6{\r\n    padding-left:60%;   \r\n}\r\ninput{\r\n    text-align:center;\r\n    width:40%;\r\n}\r\n\r\n@import url(https://fonts.googleapis.com/css?family=Roboto:300);\r\n\r\n \r\n.box{\r\n    background: none;\r\n    margin-top: 200px;\r\n\tpadding-top:300px;\r\n}\r\n\r\n.loader{\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    -webkit-transform: translate(-50%, -50%);\r\n    transform: translate(-50%, -50%);\r\n}​\r\n\t.back {\r\n\t\tmargin:1em auto;\r\n\t}\r\n\t.back span {\r\n\t\tfont-size:3em;\r\n\t\tcolor:#F2C640;;\r\n\t\tbackground: #e02525;\r\n\t\tdisplay:table-cell;\r\n\t\tbox-shadow:inset 0 0 5px rgba(0,0,0,0.3), 0 5px 0 #ccc;\r\n\t\tpadding: 0 15px;\r\n\t\tline-height: 100px;\r\n\t\tanimation:jumb 2s infinite;\r\n\t}\r\n\t@keyframes jumb {\r\n\t\t0% {\r\n\t\t\ttransform:translateY(0px)\r\n\t\t}\r\n\t\t50% {\r\n\t\t\ttransform:translateY(-30px);\r\n\t\t\tbox-shadow:0 15px 0 #F2C640;\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform:translateY(0px)\t\r\n\t\t}\r\n\t}\r\n\t.back span:nth-child(1) {\r\n\t\tanimation-delay:0s;\r\n\t}\r\n\t.back span:nth-child(2) {\r\n\t\tanimation-delay:.1s;\t\r\n\t}\r\n\t.back span:nth-child(3) {\r\n\t\tanimation-delay:.2s;\r\n\t}\r\n\t.back span:nth-child(4) {\r\n\t\tanimation-delay:.3s;\t\r\n\t}\r\n\t.back span:nth-child(5) {\r\n\t\tanimation-delay:.4s;\r\n\t}\r\n\t.back span:nth-child(6) {\r\n\t\tanimation-delay:.5s;\t\r\n\t}\r\n\t.back span:nth-child(7) {\r\n\t\tanimation-delay:.6s;\r\n\t}\r\n`;","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Admin\\updateProfilesAdmin.js",["175","176"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankHome.component.js",["177"],"import React, { useEffect, useContext, useState } from \"react\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../../context/userDetailContext';\r\nimport Axios from 'axios';\r\n\r\nfunction BankHome() {\r\n\r\n  //to prevent from loading if user is log out\r\n  const { userLoginData } = useContext(UserContext)\r\n  const [isLoading, setLoading] = useState(true);\r\n  const history = useHistory();\r\n  const [data, setData] = useState([]);\r\n  const [alert, setAlert] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (!userLoginData.userData)\r\n      history.push('/')\r\n    try {\r\n      if (userLoginData.userData.type !== \"BloodBank\")  //to prevent accessing any other type\r\n        history.push(`/${userLoginData.userData.type}`)\r\n\r\n      const getData = async () => {\r\n        await Axios.get(\"http://localhost:5000/bloodBag/getBags\")\r\n          .then((response) => {\r\n            setData(response.data);\r\n            console.log(response.data);\r\n          })\r\n        await Axios.get(`http://localhost:5000/bloodBag/Alerts/${userLoginData.userData.user_id}`)\r\n          .then((response) => {\r\n            setAlert(response.data);\r\n\r\n            setLoading(false);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error)\r\n          })\r\n      }\r\n\r\n      getData();\r\n\r\n    }\r\n    catch {\r\n      history.push('/')\r\n      //get data\r\n      //     const getData = async () => {\r\n      //     const requestResponse = await \r\n      //   }\r\n      //   getData();\r\n      // }\r\n    }\r\n  }, [userLoginData])\r\n\r\n\r\n  const alerts = () => {\r\n    return (\r\n      alert.map((item) => {\r\n        return (\r\n          <p class=\"alerts\" >No Stock of {item} is present</p>\r\n        )\r\n      })\r\n    )\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <HomeContainer>\r\n        <div class=\"box\">\r\n          <div class=\"loader\">\r\n            <span class=\"back\">\r\n              <span>L</span>\r\n              <span>O</span>\r\n              <span>A</span>\r\n              <span>D</span>\r\n              <span>I</span>\r\n              <span>N</span>\r\n              <span>G</span>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </HomeContainer>\r\n\r\n    )\r\n  }\r\n  return (\r\n    <HomeContainer>\r\n      <div class=\"body\">\r\n        <h1>Alerts</h1>\r\n        {alerts()}\r\n        <table class=\"table table-striped\">\r\n          <thead class=\"thead\">\r\n            <tr>\r\n              <th scope=\"col\">ID</th>\r\n              <th scope=\"col\">BLOOD GROUP</th>\r\n              <th scope=\"col\">DATE DONATED</th>\r\n              <th scope=\"col\">DATE EXPIRED</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.bag.map((result, index) => {\r\n              return (\r\n                <tr>\r\n                  <td>{index + 1}</td>\r\n                  <td>{result.bloodGroup}</td>\r\n                  <td>{(new Date(result.created_at).toLocaleString().split(',')[0])}</td>\r\n                  <td>{(new Date(result.expiry_date).toLocaleString().split(',')[0])}</td>\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </HomeContainer>\r\n  )\r\n}\r\nexport default BankHome;\r\n\r\nconst HomeContainer = styled.div`\r\n.thead{\r\n    background-color:Black;\r\n    color:white;\r\n    font-weight:bold;\r\n    font-size:15px;\r\n    width:50%;\r\n}\r\n.table table-striped{\r\n    width:50%;\r\n}\r\n.body{\r\n    padding-left:20%;\r\n    padding-right:10%;\r\n    padding-top:3%;\r\n}\r\n\r\n\r\n@import url(https://fonts.googleapis.com/css?family=Roboto:300);\r\n\r\n\r\n.alerts{\r\n    font-size:18px;\r\n    font-style:italic;\r\n    color:red;\r\n    font-weight:bold;\r\n    margin-bottom: 15px;\r\n    padding:3px;\r\n\r\n}\r\n.box{\r\n    background: none;\r\n    margin-top: 200px;\r\n\tpadding-top:300px;\r\n}\r\n\r\n.loader{\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    -webkit-transform: translate(-50%, -50%);\r\n    transform: translate(-50%, -50%);\r\n}​\r\n\r\n\r\n\t.back {\r\n\t\tmargin:1em auto;\r\n\t}\r\n\t.back span {\r\n\t\tfont-size:3em;\r\n\t\tcolor:#F2C640;;\r\n\t\tbackground: #e02525;\r\n\t\tdisplay:table-cell;\r\n\t\tbox-shadow:inset 0 0 5px rgba(0,0,0,0.3), 0 5px 0 #ccc;\r\n\t\tpadding: 0 15px;\r\n\t\tline-height: 100px;\r\n\t\tanimation:jumb 2s infinite;\r\n\t}\r\n\t@keyframes jumb {\r\n\t\t0% {\r\n\t\t\ttransform:translateY(0px)\r\n\t\t}\r\n\t\t50% {\r\n\t\t\ttransform:translateY(-30px);\r\n\t\t\tbox-shadow:0 15px 0 #F2C640;\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform:translateY(0px)\t\r\n\t\t}\r\n\t}\r\n\t.back span:nth-child(1) {\r\n\t\tanimation-delay:0s;\r\n\t}\r\n\t.back span:nth-child(2) {\r\n\t\tanimation-delay:.1s;\t\r\n\t}\r\n\t.back span:nth-child(3) {\r\n\t\tanimation-delay:.2s;\r\n\t}\r\n\t.back span:nth-child(4) {\r\n\t\tanimation-delay:.3s;\t\r\n\t}\r\n\t.back span:nth-child(5) {\r\n\t\tanimation-delay:.4s;\r\n\t}\r\n\t.back span:nth-child(6) {\r\n\t\tanimation-delay:.5s;\t\r\n\t}\r\n\t.back span:nth-child(7) {\r\n\t\tanimation-delay:.6s;\r\n\t}\r\n\r\n\r\n`;","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Admin\\AdminAlerts.component.js",["178"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\misc\\ErrorNotice.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\SidebarDataBloodBank.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\SidebarDataDonor.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\SidebarDataAdmin.js",["179"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\App.js",["180"],"import React, { useState, useEffect } from 'react';  //useEffect will run exactly 1 time \n//when component loaded or each time component has been switched \n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Axios from 'axios';\n\n//Blood Bank\nimport BankHome from './Components/pages/BloodBank/BankHome.component';\nimport BankDonor from './Components/pages/BloodBank/BankDonor.component';\nimport BankReciever from './Components/pages/BloodBank/BankReciever.component';\nimport BankRequest from './Components/pages/BloodBank/BankRequest.component';\nimport BankStock from './Components/pages/BloodBank/BankStock.component';\nimport UpdateProfile from './Components/pages/BloodBank/updateProfile';\nimport BankProfile from './Components/pages/BloodBank/BankProfile.component';\n\n\nimport Login from './Components/auth/login-form.component';\nimport LoginAdmin from './Components/auth/login-form-admin.component';\nimport SignupBloodBank from './Components/auth/signup-form-bloodBank.component';\nimport {SignupDonor} from './Components/auth/signup-form-Donor.component';\nimport {SignupRecipinet} from './Components/auth/signup-form-Recipient.component';\n\n//import Navbar from './Components/navbar.component';\nimport Header from './Components/layout/Header.component';\nimport Footer from './Components/layout/Footer.component';\nimport Navbar from './Components/layout/Navbar'\nimport AboutUs from './Components/layout/OurVision.component';\n\n//extras\nimport UserContext from './context/userDetailContext';\n\n//Donor\n\nimport DonorDonations from './Components/pages/Donor/DonorDonations.component';\nimport DonorRequests from './Components/pages/Donor/DonorRequests.component';\nimport DonorMakeDonations from './Components/pages/Donor/DonorMakeDonations.component';\nimport DonorProfile from './Components/pages/Donor/DonorProfile.component';\n\n\n//Recipient\n\n\nimport RecipientSendRequest from './Components/pages/Recipient/SendRequest.component';\nimport SearchDonor  from './Components/pages/Recipient/SearchDonor.component';\nimport RecipientRequests from './Components/pages/Recipient/ViewRequest.component';\nimport RecipientProfile from './Components/pages/Recipient/RecipientProfile.component';\n\n//Admin\nimport AdminStock from './Components/pages/Admin/AdminStocks.component';\nimport AdminRequest from './Components/pages/Admin/AdminRequests.component';\nimport AdminAlert from './Components/pages/Admin/AdminAlerts.component';\nimport AdminManageDonation from './Components/pages/Admin/AdminManageDonation.component';\nimport AdminBloodBanks from './Components/pages/Admin/AdminManageBloodBanks.component';\nimport UpdateBloodBankAdmin from './Components/pages/Admin/updateProfilesAdmin';\nimport {AdminDonor, AdminRecipient} from './Components/pages/Admin/AdminManageUsers.component';\nimport UpdateUsersProfileAdmin from './Components/pages/Admin/updateProfileUsersAdmin';\n\n\nfunction App() {\n\n  const [userLoginData, setUserLoginData] = useState({  //this state will store the user data needed in all app like id\n    token: undefined,\n    userData: undefined\n  });\n\n  //now we need to get the token from the session if any and check if its valid or not to login the user\n  useEffect(() => {  //useEffect needs arrow func which can't be async \n    const checkUserLogin = async () => {  //data is required to be accssed from backend so async thats why another fun is created in usecase arroe func\n      let sessionToken = localStorage.getItem(\"auth-token\"); //if no key with this name w'll get a null in session token\n         console.log(sessionToken);\n      if (sessionToken === null) {  //a null session token can erase error at the backend \n        localStorage.setItem(\"auth-token\", \"\")  //adding key in local storage & value will be given later\n        sessionToken = \"\"   //so assigning it the empty string\n      }\n      //now checkiing if user is logged in by giving a post request to if token is valid\n      const tokenResponse = await Axios.post(\n        \"http://localhost:5000/login/IsValidToken\",\n        null,\n        {\n          headers: { \"auth-token\": sessionToken }\n        });  //data is null but it has a header which will have a token\n\n      if (tokenResponse.data) {  //true if user logged in\n        const userResponse = await Axios.get(\"http://localhost:5000/login/\", {\n          headers: { \"auth-token\": sessionToken }\n        });\n\n        setUserLoginData({\n          token: sessionToken,\n          userData: userResponse.data\n        });\n      }\n    }\n    checkUserLogin();\n  }, []) \n\n  return (\n    <>\n      <Header />\n      <UserContext.Provider value={{ userLoginData, setUserLoginData }}>\n        <Router>\n          <Navbar />\n          <Route path=\"/\" exact component={AboutUs} />\n          <Route path=\"/signup\" exact component={SignupBloodBank} />\n\n          <Route path=\"/AdminLogin\" exact component={LoginAdmin} />\n          <Route path=\"/signin\" exact component={Login} />\n          <Route path=\"/signup-donor\" exact component = {SignupDonor} />\n          <Route path=\"/signup-recipient\" exact component = {SignupRecipinet}/>\n          <Route path=\"/BloodBank\" exact component={BankHome} />\n          <Route path=\"/BloodBank/Donor\" exact component={BankDonor} />\n          <Route path=\"/BloodBank/ProfileEdit/:id\" exact component = {UpdateProfile} />\n          <Route path=\"/BloodBank/Reciever\" exact component={BankReciever} />\n          <Route path=\"/BloodBank/Request\" exact component={BankRequest} />\n          <Route path=\"/BloodBank/Stock\" exact component={BankStock} />\n          <Route path=\"/BloodBank/Profile\" exact component={BankProfile} />\n\n    \n          <Route path=\"/Donor\" exact component={DonorDonations} />\n          <Route path=\"/Donor/Requests\" exact component={DonorRequests} />\n          <Route path=\"/Donor/MakeDonations\" exact component={DonorMakeDonations} />\n          <Route path=\"/Donor/Profile\" exact component={DonorProfile} />\n\n          <Route path=\"/Recipient\" exact component={RecipientSendRequest} />\n          <Route path=\"/Recipient/SendRequest\" exact component={RecipientSendRequest} />\n          <Route path=\"/Recipient/Request\" exact component={RecipientRequests} />\n          <Route path=\"/Recipient/SearchDonor\" exact component={SearchDonor} />\n          <Route path=\"/Recipient/Profile\" exact component={RecipientProfile} />\n\n          <Route path=\"/Admin/Stock\" exact component={AdminStock} />\n          <Route path=\"/Admin/Request\" exact component={AdminRequest} />\n           <Route path=\"/Admin\" exact component={AdminAlert} />\n           <Route path=\"/Admin/Donation\" exact component={AdminManageDonation} />\n       \n          <Route path=\"/Admin/BloodBank\" exact component={AdminBloodBanks} />\n          <Route path=\"/Admin/User\" exact component={AdminDonor} />\n          <Route path=\"/Admin/Recipient\" exact component={AdminRecipient} />\n          <Route path=\"/Admin/BloodBank/ProfileEdit/:id\" exact component = {UpdateBloodBankAdmin} />\n          <Route path=\"/Admin/Users/ProfileEdit/:id\" exact component = {UpdateUsersProfileAdmin} />\n\n\n        </Router>\n        <Footer />\n      </UserContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n\n//        \n\n\n//import './App.css';\n\n\n\n/*\n <Navbar />\n      <SignupBloodBank />\n      <Login/>\n      <LoginAdmin />\n*/","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\signup-form-Recipient.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\OurVision.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\Footer.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\Navbar.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankReciever.component.js",["181"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Donor\\DonorProfile.component.js",["182"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Recipient\\ViewRequest.component.js",["183"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Recipient\\RecipientProfile.component.js",["184"],"import React, { useEffect, useContext, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../../context/userDetailContext'\r\nimport Axios from 'axios'\r\nimport { bloodGroups } from '../../../context/BloodGroupsList';\r\nimport ErrorNotice from '../../misc/ErrorNotice';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n\r\nfunction RecipientProfile() {\r\n\r\n    const [name, setName] = useState();\r\n    const [address, setAddress] = useState();\r\n    const [contact, setContact] = useState();\r\n    const [age, setAge] = useState();\r\n    const [bloodGroup, setBloodGroup] = useState();\r\n    const [username, setUserName] = useState();\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n\r\n    //for error\r\n    const [error, setError] = useState();\r\n\r\n\r\n    const { userLoginData, setUserLoginData } = useContext(UserContext)\r\n    const history = useHistory();\r\n\r\n    const [isLoading, setLoading] = useState(true);  //for 1st loading data\r\n    let [profileData, setProfileData] = useState();\r\n\r\n    useEffect(() => {\r\n        if (!userLoginData.userData)\r\n            history.push('/')\r\n        try {\r\n            if (userLoginData.userData.type !== \"Recipient\")\r\n                history.push(`/${userLoginData.userData.type}`)\r\n\r\n            const getData = async () => {\r\n                const userResponse = await Axios.get(\"http://localhost:5000/login/profile\", {\r\n                    headers: { \"auth-token\": userLoginData.token }\r\n                });\r\n                setProfileData(userResponse.data)\r\n                setName(userResponse.data.name);\r\n                setAddress(userResponse.data.address)\r\n                setContact(userResponse.data.contact)\r\n                setAge(userResponse.data.age)\r\n                setBloodGroup(userResponse.data.bloodGroup)\r\n                setEmail(userResponse.data.email)\r\n                setUserName(userResponse.data.username)\r\n\r\n                setLoading(false);\r\n            }\r\n            getData();\r\n\r\n        }\r\n        catch {\r\n            history.push('/')\r\n        }\r\n\r\n    }, [userLoginData])\r\n\r\n\r\n    const update = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n\r\n            const updatedUser = { name, address, contact, age, bloodGroup, email };\r\n            await Axios.post(`http://localhost:5000/user/update/${userLoginData.userData.user_id}`, updatedUser);  //user and its login data in diff tables\r\n            const UpdatedLogin = { username, password }\r\n            await Axios.post(`http://localhost:5000/login/update/${userLoginData.userData.id}`, UpdatedLogin);  //user and its login data in diff tables\r\n\r\n            Swal.fire(\r\n                'Good job!',\r\n                'Your Profile Updated Successfully',\r\n                'success'\r\n            ) //user and its login data in diff tables\r\n\r\n\r\n\r\n        } catch (err) {\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n    };\r\n\r\n\r\n    const unregister = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await Axios.delete(`http://localhost:5000/login/delete`,\r\n                {\r\n                    headers: { \"auth-token\": userLoginData.token }\r\n                });  //user and its login data in diff tables\r\n\r\n            Swal.fire(\r\n                'Deleted',\r\n                'Awww! Sad to See You Go.',\r\n                'success'\r\n            ) //user and its login data in diff tables\r\n\r\n            setUserLoginData({\r\n                token: undefined,\r\n                userData: undefined,\r\n            });\r\n            localStorage.setItem(\"auth-token\", \"\");\r\n            history.push(\"/\")\r\n\r\n        } catch (err) {\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <RecipientProfileContainer>\r\n                <div class=\"box\">\r\n                    <div class=\"loader\">\r\n                        <span class=\"back\">\r\n                            <span>L</span>\r\n                            <span>O</span>\r\n                            <span>A</span>\r\n                            <span>D</span>\r\n                            <span>I</span>\r\n                            <span>N</span>\r\n                            <span>G</span>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </RecipientProfileContainer>\r\n\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <RecipientProfileContainer>\r\n            <div>\r\n                <h1 className=\"heading\">Update Profile:</h1>\r\n                <div className=\"container container-fluid\">\r\n                    <div className=\"d-flex justify-content-center h-100\">\r\n                        <div class=\"card signupCard\">\r\n                            <div className=\"card-body\">\r\n                                <h3>Profile</h3>\r\n                                {error && (\r\n                                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\r\n                                )}\r\n                                <form>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"bloodBankName\" >Name: </label>\r\n                                        <input id=\"bloodBankName\" type=\"text\" value={name} className=\"form-control\"\r\n                                            onChange={(e) => setName(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"bloodGroup\" >Blood Group: </label>\r\n                                        <select value={bloodGroup} id=\"bloodGroup\" className=\"form-control\" onChange={(e) => setBloodGroup(e.target.value)}>\r\n                                            {bloodGroups.map(item => {\r\n                                                return (\r\n                                                    <option value={item}> {item} </option>\r\n                                                )\r\n                                            })}\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankAddress\" >Address: </label>\r\n                                        <input id=\"BloodBankAddress\" value={address} type=\"text\" className=\"form-control\"\r\n                                            onChange={(e) => setAddress(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankContact\" >Contact No: </label>\r\n                                        <input id=\"BloodBankContact\" type=\"text\" className=\"form-control\"\r\n                                            value={contact} onChange={(e) => setContact(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"age\" >Age: </label>\r\n                                        <input id=\"age\" type=\"text\" className=\"form-control\"\r\n                                            value={age} onChange={(e) => setAge(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankUsername\" >Username: </label>\r\n                                        <input id=\"BloodBankUsername\" type=\"text\" className=\"form-control\"\r\n                                            value={username} onChange={(e) => setUserName(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankEmail\" >Email: </label>\r\n                                        <input id=\"BloodBankEmail\" type=\"text\" className=\"form-control\"\r\n                                            value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankPassword\" >Blood Bank: </label>\r\n                                        <input id=\"BloodBankPassword\" type=\"text\" className=\"form-control\"\r\n                                            value={profileData.bloodBank} readonly />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankPassword\" >Password: </label>\r\n                                        <input id=\"BloodBankPassword\" type=\"password\" className=\"form-control\"\r\n                                            onChange={(e) => setPassword(e.target.value)} />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"submit\" value=\"Unregister\" className=\"btn float-right unregister_btn\" onClick={unregister} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn float-right update_btn\" onClick={update} />\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </RecipientProfileContainer>\r\n    )\r\n\r\n}\r\n\r\nexport default RecipientProfile;\r\n\r\nconst RecipientProfileContainer = styled.div`\r\n\r\n@import url('https://fonts.googleapis.com/css2?family=Righteous&display=swap');\r\n\r\nhtml,body{\r\nheight: 100%;\r\n}\r\n\r\n.spinnerl{\r\n    padding-top:150px;\r\n    padding-bottom:150px;\r\n    \r\n}\r\n\r\nlabel {\r\npadding-right: 20px;\r\n}\r\n.container{\r\nheight: 100%;\r\nalign-content: center;\r\npadding-top: 50px;\r\nfont-family: 'Righteous', cursive;\r\n}\r\n\r\n.signupCard{\r\nheight: 650px;\r\nalign-content: center;\r\nmargin: auto;\r\nwidth: 500px;\r\nbackground-color: rgba(15, 74, 92, 0.473) ;\r\n}\r\n\r\n.card-header {\r\nbackground-color: white;\r\n}\r\n.card-body h3{\r\ncolor: white;\r\ntext-align:center;\r\npadding-bottom:5px;\r\n}\r\n#blood{\r\n    width:75%;\r\n    border:none;\r\n}\r\n\r\n.update_btn{\r\ncolor: black;\r\nbackground-color: #FFC312;\r\nwidth: 100px;\r\nmargin: 0 40px;\r\n}\r\n\r\n.update_btn:hover{\r\ncolor: black;\r\nbackground-color: white;\r\n}\r\n\r\n.unregister_btn{\r\n    color: white;\r\n    background-color: #e02525;\r\n    width: 100px;\r\n    margin: 0 40px;\r\n}\r\n    \r\n.unregister_btn:hover{\r\ncolor: black;\r\nbackground-color: white;\r\n}\r\n\r\n.ButtonGroup {\r\n    margin: auto;\r\n    justify-content: center;\r\n}\r\n.heading{\r\n    padding-top:5%;\r\n    padding-left:30%\r\n}\r\n\r\n@import url(https://fonts.googleapis.com/css?family=Roboto:300);\r\n\r\n \r\n.box{\r\n    background: none;\r\n    margin-top: 200px;\r\n\tpadding-top:300px;\r\n}\r\n\r\n.loader{\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    -webkit-transform: translate(-50%, -50%);\r\n    transform: translate(-50%, -50%);\r\n}​\r\n\t.back {\r\n\t\tmargin:1em auto;\r\n\t}\r\n\t.back span {\r\n\t\tfont-size:3em;\r\n\t\tcolor:#F2C640;;\r\n\t\tbackground: #e02525;\r\n\t\tdisplay:table-cell;\r\n\t\tbox-shadow:inset 0 0 5px rgba(0,0,0,0.3), 0 5px 0 #ccc;\r\n\t\tpadding: 0 15px;\r\n\t\tline-height: 100px;\r\n\t\tanimation:jumb 2s infinite;\r\n\t}\r\n\t@keyframes jumb {\r\n\t\t0% {\r\n\t\t\ttransform:translateY(0px)\r\n\t\t}\r\n\t\t50% {\r\n\t\t\ttransform:translateY(-30px);\r\n\t\t\tbox-shadow:0 15px 0 #F2C640;\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform:translateY(0px)\t\r\n\t\t}\r\n\t}\r\n\t.back span:nth-child(1) {\r\n\t\tanimation-delay:0s;\r\n\t}\r\n\t.back span:nth-child(2) {\r\n\t\tanimation-delay:.1s;\t\r\n\t}\r\n\t.back span:nth-child(3) {\r\n\t\tanimation-delay:.2s;\r\n\t}\r\n\t.back span:nth-child(4) {\r\n\t\tanimation-delay:.3s;\t\r\n\t}\r\n\t.back span:nth-child(5) {\r\n\t\tanimation-delay:.4s;\r\n\t}\r\n\t.back span:nth-child(6) {\r\n\t\tanimation-delay:.5s;\t\r\n\t}\r\n\t.back span:nth-child(7) {\r\n\t\tanimation-delay:.6s;\r\n\t}\r\n\r\n`\r\n\r\n","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\Header.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\authButtonOptions.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\SidebarDataRecipient.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\index.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankDonor.component.js",["185"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Admin\\updateProfileUsersAdmin.js",["186"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\context\\BloodGroupsList.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\Sidebar.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Admin\\AdminManageDonation.component.js",["187","188","189"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Admin\\AdminRequests.component.js",["190","191","192","193"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankStock.component.js",["194","195","196"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Recipient\\SearchDonor.component.js",["197","198"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Donor\\DonorRequests.component.js",["199","200"],"import React, { Component } from 'react';\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../../context/userDetailContext'\r\nimport Axios from 'axios';\r\nfunction DonorRequests() {\r\n\r\n  const { userLoginData } = useContext(UserContext)\r\n  const history = useHistory();\r\n  const [data, setData] = useState([]);\r\n  const [isLoading, setLoading] = useState(true);\r\n  //  let recData=[];\r\n  useEffect(() => {\r\n    if (!userLoginData.userData)\r\n      history.push('/')\r\n    try {\r\n      if (userLoginData.userData.type !== \"Donor\")\r\n        history.push(`/${userLoginData.userData.type}`)\r\n      Axios.get(`http://localhost:5000/bloodRequest/getAllRec/${userLoginData.userData.user_id}`)\r\n        .then((response) => {\r\n          setData(response.data);\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error)\r\n        })\r\n    }\r\n    catch {\r\n      history.push('/')\r\n    }\r\n\r\n  }, [userLoginData])\r\n  if (isLoading) {\r\n    return (\r\n      <DonorRequestsContainer>\r\n        <div class=\"box\">\r\n          <div class=\"loader\">\r\n            <span class=\"back\">\r\n              <span>L</span>\r\n              <span>O</span>\r\n              <span>A</span>\r\n              <span>D</span>\r\n              <span>I</span>\r\n              <span>N</span>\r\n              <span>G</span>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </DonorRequestsContainer>\r\n    )\r\n  }\r\n  return (\r\n    <DonorRequestsContainer>\r\n      <div class=\"body\">\r\n        <h1>Requests</h1>\r\n        <table class=\"table table-striped\">\r\n          <thead class=\"thead\">\r\n            <tr>\r\n              <th scope=\"col\">ID</th>\r\n              <th scope=\"col\">RECIPIENT NAME</th>\r\n              <th scope=\"col\">BLOOD GROUP</th>\r\n              <th scope=\"col\">DUE DATE</th>\r\n              <th scope=\"col\">CONTACT NO</th>\r\n              <th scope=\"col\">QUANTITY</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map((result, index) => {\r\n              return (\r\n                <tr>\r\n                  <td>{index + 1}</td>\r\n                  <td>{result.name}</td>\r\n                  <td>{result.bloodGroup}</td>\r\n                  <td>{(new Date(result.dueDate)).toLocaleString().split(',')[0]}</td>\r\n                  <td>{result.contact}</td>\r\n                  <td>{result.quantity}</td>\r\n                </tr>\r\n\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </DonorRequestsContainer>\r\n  )\r\n}\r\nexport default DonorRequests;\r\n\r\nconst DonorRequestsContainer = styled.div`\r\n\r\n.spinnerl{\r\n  padding-top:150px;\r\n  padding-bottom:150px;\r\n  \r\n}\r\n\r\n.thead{\r\n    background-color:Black;\r\n    color:white;\r\n    font-weight:bold;\r\n    font-size:15px;\r\n    width:50%;\r\n}\r\n.table table-striped{\r\n    width:50%;\r\n}\r\n.body{\r\n    padding-left:20%;\r\n    padding-right:10%;\r\n    padding-top:3%;\r\n}\r\n\r\n\r\n@import url(https://fonts.googleapis.com/css?family=Roboto:300);\r\n\r\n \r\n.box{\r\n    background: none;\r\n    margin-top: 200px;\r\n\tpadding-top:300px;\r\n}\r\n\r\n.loader{\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    -webkit-transform: translate(-50%, -50%);\r\n    transform: translate(-50%, -50%);\r\n}​\r\n\t.back {\r\n\t\tmargin:1em auto;\r\n\t}\r\n\t.back span {\r\n\t\tfont-size:3em;\r\n\t\tcolor:#F2C640;;\r\n\t\tbackground: #e02525;\r\n\t\tdisplay:table-cell;\r\n\t\tbox-shadow:inset 0 0 5px rgba(0,0,0,0.3), 0 5px 0 #ccc;\r\n\t\tpadding: 0 15px;\r\n\t\tline-height: 100px;\r\n\t\tanimation:jumb 2s infinite;\r\n\t}\r\n\t@keyframes jumb {\r\n\t\t0% {\r\n\t\t\ttransform:translateY(0px)\r\n\t\t}\r\n\t\t50% {\r\n\t\t\ttransform:translateY(-30px);\r\n\t\t\tbox-shadow:0 15px 0 #F2C640;\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform:translateY(0px)\t\r\n\t\t}\r\n\t}\r\n\t.back span:nth-child(1) {\r\n\t\tanimation-delay:0s;\r\n\t}\r\n\t.back span:nth-child(2) {\r\n\t\tanimation-delay:.1s;\t\r\n\t}\r\n\t.back span:nth-child(3) {\r\n\t\tanimation-delay:.2s;\r\n\t}\r\n\t.back span:nth-child(4) {\r\n\t\tanimation-delay:.3s;\t\r\n\t}\r\n\t.back span:nth-child(5) {\r\n\t\tanimation-delay:.4s;\r\n\t}\r\n\t.back span:nth-child(6) {\r\n\t\tanimation-delay:.5s;\t\r\n\t}\r\n\t.back span:nth-child(7) {\r\n\t\tanimation-delay:.6s;\r\n\t}\r\n\r\n\r\n`;",{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","severity":1,"message":"206","line":1,"column":17,"nodeType":"207","messageId":"208","endLine":1,"endColumn":26},{"ruleId":"209","severity":1,"message":"210","line":42,"column":6,"nodeType":"211","endLine":42,"endColumn":21,"suggestions":"212"},{"ruleId":"205","severity":1,"message":"213","line":28,"column":10,"nodeType":"207","messageId":"208","endLine":28,"endColumn":21},{"ruleId":"209","severity":1,"message":"210","line":57,"column":8,"nodeType":"211","endLine":57,"endColumn":23,"suggestions":"214"},{"ruleId":"215","severity":1,"message":"216","line":336,"column":1,"nodeType":"217","messageId":"218","endLine":344,"endColumn":29},{"ruleId":"209","severity":1,"message":"210","line":96,"column":6,"nodeType":"211","endLine":96,"endColumn":21,"suggestions":"219"},{"ruleId":"201","replacedBy":"220"},{"ruleId":"203","replacedBy":"221"},{"ruleId":"209","severity":1,"message":"210","line":92,"column":8,"nodeType":"211","endLine":92,"endColumn":23,"suggestions":"222"},{"ruleId":"209","severity":1,"message":"210","line":202,"column":8,"nodeType":"211","endLine":202,"endColumn":23,"suggestions":"223"},{"ruleId":"224","severity":1,"message":"225","line":26,"column":18,"nodeType":"226","messageId":"227","endLine":26,"endColumn":20},{"ruleId":"224","severity":1,"message":"225","line":29,"column":30,"nodeType":"226","messageId":"227","endLine":29,"endColumn":32},{"ruleId":"209","severity":1,"message":"210","line":52,"column":6,"nodeType":"211","endLine":52,"endColumn":21,"suggestions":"228"},{"ruleId":"205","severity":1,"message":"229","line":17,"column":12,"nodeType":"207","messageId":"208","endLine":17,"endColumn":16},{"ruleId":"209","severity":1,"message":"230","line":49,"column":8,"nodeType":"211","endLine":49,"endColumn":23,"suggestions":"231"},{"ruleId":"209","severity":1,"message":"210","line":53,"column":6,"nodeType":"211","endLine":53,"endColumn":21,"suggestions":"232"},{"ruleId":"209","severity":1,"message":"210","line":56,"column":6,"nodeType":"211","endLine":56,"endColumn":21,"suggestions":"233"},{"ruleId":"205","severity":1,"message":"234","line":6,"column":10,"nodeType":"207","messageId":"208","endLine":6,"endColumn":23},{"ruleId":"205","severity":1,"message":"235","line":4,"column":35,"nodeType":"207","messageId":"208","endLine":4,"endColumn":41},{"ruleId":"209","severity":1,"message":"210","line":92,"column":6,"nodeType":"211","endLine":92,"endColumn":21,"suggestions":"236"},{"ruleId":"209","severity":1,"message":"210","line":62,"column":8,"nodeType":"211","endLine":62,"endColumn":23,"suggestions":"237"},{"ruleId":"209","severity":1,"message":"210","line":33,"column":6,"nodeType":"211","endLine":33,"endColumn":21,"suggestions":"238"},{"ruleId":"209","severity":1,"message":"210","line":62,"column":8,"nodeType":"211","endLine":62,"endColumn":23,"suggestions":"239"},{"ruleId":"209","severity":1,"message":"210","line":92,"column":6,"nodeType":"211","endLine":92,"endColumn":21,"suggestions":"240"},{"ruleId":"209","severity":1,"message":"230","line":57,"column":8,"nodeType":"211","endLine":57,"endColumn":23,"suggestions":"241"},{"ruleId":"205","severity":1,"message":"242","line":6,"column":8,"nodeType":"207","messageId":"208","endLine":6,"endColumn":12},{"ruleId":"205","severity":1,"message":"243","line":9,"column":10,"nodeType":"207","messageId":"208","endLine":9,"endColumn":23},{"ruleId":"209","severity":1,"message":"210","line":49,"column":6,"nodeType":"211","endLine":49,"endColumn":21,"suggestions":"244"},{"ruleId":"205","severity":1,"message":"245","line":6,"column":10,"nodeType":"207","messageId":"208","endLine":6,"endColumn":21},{"ruleId":"205","severity":1,"message":"246","line":15,"column":10,"nodeType":"207","messageId":"208","endLine":15,"endColumn":16},{"ruleId":"205","severity":1,"message":"247","line":15,"column":18,"nodeType":"207","messageId":"208","endLine":15,"endColumn":27},{"ruleId":"209","severity":1,"message":"210","line":36,"column":6,"nodeType":"211","endLine":36,"endColumn":21,"suggestions":"248"},{"ruleId":"224","severity":1,"message":"225","line":28,"column":17,"nodeType":"226","messageId":"227","endLine":28,"endColumn":19},{"ruleId":"224","severity":1,"message":"225","line":32,"column":34,"nodeType":"226","messageId":"227","endLine":32,"endColumn":36},{"ruleId":"209","severity":1,"message":"210","line":56,"column":6,"nodeType":"211","endLine":56,"endColumn":21,"suggestions":"249"},{"ruleId":"209","severity":1,"message":"210","line":35,"column":6,"nodeType":"211","endLine":35,"endColumn":21,"suggestions":"250"},{"ruleId":"251","severity":1,"message":"252","line":89,"column":38,"nodeType":"253","messageId":"254","endLine":89,"endColumn":40},{"ruleId":"205","severity":1,"message":"206","line":1,"column":17,"nodeType":"207","messageId":"208","endLine":1,"endColumn":26},{"ruleId":"209","severity":1,"message":"210","line":33,"column":6,"nodeType":"211","endLine":33,"endColumn":21,"suggestions":"255"},"no-native-reassign",["256"],"no-negated-in-lhs",["257"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["258"],"'profileData' is assigned a value but never used.",["259"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["260"],["256"],["257"],["261"],["262"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["263"],"'type' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'props.match.params.id'. Either include them or remove the dependency array.",["264"],["265"],["266"],"'GrUserManager' is defined but never used.","'Switch' is defined but never used.",["267"],["268"],["269"],["270"],["271"],["272"],"'Swal' is defined but never used.","'RenderButtons' is defined but never used.",["273"],"'bloodGroups' is defined but never used.","'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.",["274"],["275"],["276"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["277"],"no-global-assign","no-unsafe-negation",{"desc":"278","fix":"279"},{"desc":"278","fix":"280"},{"desc":"278","fix":"281"},{"desc":"278","fix":"282"},{"desc":"278","fix":"283"},{"desc":"278","fix":"284"},{"desc":"285","fix":"286"},{"desc":"278","fix":"287"},{"desc":"278","fix":"288"},{"desc":"278","fix":"289"},{"desc":"278","fix":"290"},{"desc":"278","fix":"291"},{"desc":"278","fix":"292"},{"desc":"278","fix":"293"},{"desc":"285","fix":"294"},{"desc":"278","fix":"295"},{"desc":"278","fix":"296"},{"desc":"278","fix":"297"},{"desc":"278","fix":"298"},{"desc":"278","fix":"299"},"Update the dependencies array to be: [history, userLoginData]",{"range":"300","text":"301"},{"range":"302","text":"301"},{"range":"303","text":"301"},{"range":"304","text":"301"},{"range":"305","text":"301"},{"range":"306","text":"301"},"Update the dependencies array to be: [history, props.match.params.id, userLoginData]",{"range":"307","text":"308"},{"range":"309","text":"301"},{"range":"310","text":"301"},{"range":"311","text":"301"},{"range":"312","text":"301"},{"range":"313","text":"301"},{"range":"314","text":"301"},{"range":"315","text":"301"},{"range":"316","text":"308"},{"range":"317","text":"301"},{"range":"318","text":"301"},{"range":"319","text":"301"},{"range":"320","text":"301"},{"range":"321","text":"301"},[1253,1268],"[history, userLoginData]",[1885,1900],[2564,2579],[2668,2683],[6343,6358],[1579,1594],[1574,1589],"[history, props.match.params.id, userLoginData]",[1558,1573],[1555,1570],[2457,2472],[2146,2161],[1003,1018],[2155,2170],[2390,2405],[2039,2054],[1463,1478],[1234,1249],[1588,1603],[1109,1124],[1048,1063]]