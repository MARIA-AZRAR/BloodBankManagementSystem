[{"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\index.js":"1","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\App.js":"2","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\context\\userDetailContext.js":"3","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\auth\\login-form-admin.component.js":"4","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\auth\\signup-form-bloodBank.component.js":"5","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\auth\\login-form.component.js":"6","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\layout\\Footer.component.js":"7","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\layout\\Navbar.js":"8","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\layout\\Header.component.js":"9","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\BloodBank\\BankReciever.component.js":"10","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\BloodBank\\BankHome.component.js":"11","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\layout\\OurVision.component.js":"12","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\BloodBank\\BankProfile.component.js":"13","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\BloodBank\\BankStock.component.js":"14","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\BloodBank\\BankDonor.component.js":"15","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\Donor\\DonorDonations.component.js":"16","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\BloodBank\\BankRequest.component.js":"17","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\Donor\\DonorRequests.component.js":"18","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\BloodBank\\updateProfile.js":"19","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\Donor\\DonorProfile.component.js":"20","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\Recipient\\SendRequest.component.js":"21","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\Recipient\\ViewRequest.component.js":"22","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\Recipient\\RecipientProfile.component.js":"23","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\auth\\signup-form-Donor.component.js":"24","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\Recipient\\SearchDonor.component.js":"25","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\auth\\signup-form-Recipient.component.js":"26","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\Admin\\AdminStocks.component.js":"27","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\Admin\\AdminManageDonation.component.js":"28","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\Admin\\AdminManageBloodBanks.component.js":"29","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\Donor\\DonorMakeDonations.component.js":"30","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\Admin\\AdminAlerts.component.js":"31","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\Admin\\AdminRequests.component.js":"32","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\Admin\\updateProfileUsersAdmin.js":"33","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\Admin\\updateProfilesAdmin.js":"34","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\Admin\\AdminManageUsers.component.js":"35","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\context\\BloodGroupsList.js":"36","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\auth\\authButtonOptions.js":"37","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\misc\\ErrorNotice.js":"38","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\misc\\AlertNotice.js":"39","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\layout\\Sidebar.component.js":"40","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\layout\\SidebarDataRecipient.js":"41","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\layout\\SidebarDataAdmin.js":"42","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\layout\\SidebarDataBloodBank.js":"43","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\layout\\SidebarDataDonor.js":"44"},{"size":170,"mtime":1615107774023,"results":"45","hashOfConfig":"46"},{"size":7304,"mtime":1615107773849,"results":"47","hashOfConfig":"46"},{"size":204,"mtime":1615107774022,"results":"48","hashOfConfig":"46"},{"size":3771,"mtime":1615272548447,"results":"49","hashOfConfig":"46"},{"size":6967,"mtime":1615107773857,"results":"50","hashOfConfig":"46"},{"size":4075,"mtime":1615107773854,"results":"51","hashOfConfig":"46"},{"size":2613,"mtime":1615107773859,"results":"52","hashOfConfig":"46"},{"size":940,"mtime":1615107773861,"results":"53","hashOfConfig":"46"},{"size":1900,"mtime":1615107773860,"results":"54","hashOfConfig":"46"},{"size":6221,"mtime":1615288254940,"results":"55","hashOfConfig":"46"},{"size":4865,"mtime":1615288475680,"results":"56","hashOfConfig":"46"},{"size":2196,"mtime":1615107773862,"results":"57","hashOfConfig":"46"},{"size":10349,"mtime":1615288281435,"results":"58","hashOfConfig":"46"},{"size":5600,"mtime":1615288003524,"results":"59","hashOfConfig":"46"},{"size":6123,"mtime":1615288152826,"results":"60","hashOfConfig":"46"},{"size":4501,"mtime":1615289164014,"results":"61","hashOfConfig":"46"},{"size":6286,"mtime":1615288057916,"results":"62","hashOfConfig":"46"},{"size":4468,"mtime":1615289371491,"results":"63","hashOfConfig":"46"},{"size":8191,"mtime":1615107773933,"results":"64","hashOfConfig":"46"},{"size":12328,"mtime":1615289484132,"results":"65","hashOfConfig":"46"},{"size":5419,"mtime":1615107774017,"results":"66","hashOfConfig":"46"},{"size":4685,"mtime":1615275654390,"results":"67","hashOfConfig":"46"},{"size":12352,"mtime":1615275846218,"results":"68","hashOfConfig":"46"},{"size":9526,"mtime":1615107773856,"results":"69","hashOfConfig":"46"},{"size":5652,"mtime":1615276087764,"results":"70","hashOfConfig":"46"},{"size":9493,"mtime":1615107773856,"results":"71","hashOfConfig":"46"},{"size":5585,"mtime":1615288609353,"results":"72","hashOfConfig":"46"},{"size":5456,"mtime":1615288688173,"results":"73","hashOfConfig":"46"},{"size":6028,"mtime":1615288825543,"results":"74","hashOfConfig":"46"},{"size":4473,"mtime":1615107773941,"results":"75","hashOfConfig":"46"},{"size":5369,"mtime":1615288452455,"results":"76","hashOfConfig":"46"},{"size":5549,"mtime":1615288643761,"results":"77","hashOfConfig":"46"},{"size":8240,"mtime":1615289014772,"results":"78","hashOfConfig":"46"},{"size":6534,"mtime":1615107773914,"results":"79","hashOfConfig":"46"},{"size":11525,"mtime":1615288765797,"results":"80","hashOfConfig":"46"},{"size":75,"mtime":1615107774020,"results":"81","hashOfConfig":"46"},{"size":1177,"mtime":1615107773852,"results":"82","hashOfConfig":"46"},{"size":894,"mtime":1615107773887,"results":"83","hashOfConfig":"46"},{"size":682,"mtime":1615107773869,"results":"84","hashOfConfig":"46"},{"size":3443,"mtime":1615107773864,"results":"85","hashOfConfig":"46"},{"size":851,"mtime":1615287935679,"results":"86","hashOfConfig":"46"},{"size":1234,"mtime":1615288556323,"results":"87","hashOfConfig":"46"},{"size":1120,"mtime":1615287889928,"results":"88","hashOfConfig":"46"},{"size":830,"mtime":1615107773867,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"gb3pwh",{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"92"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"92"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"92"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"92"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"92"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\index.js",[],["185","186"],"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\App.js",["187"],"import React, { useState, useEffect } from 'react';  //useEffect will run exactly 1 time \n//when component loaded or each time component has been switched \n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Axios from 'axios';\n\n//Blood Bank\nimport BankHome from './Components/pages/BloodBank/BankHome.component';\nimport BankDonor from './Components/pages/BloodBank/BankDonor.component';\nimport BankReciever from './Components/pages/BloodBank/BankReciever.component';\nimport BankRequest from './Components/pages/BloodBank/BankRequest.component';\nimport BankStock from './Components/pages/BloodBank/BankStock.component';\nimport UpdateProfile from './Components/pages/BloodBank/updateProfile';\nimport BankProfile from './Components/pages/BloodBank/BankProfile.component';\n\n\nimport Login from './Components/auth/login-form.component';\nimport LoginAdmin from './Components/auth/login-form-admin.component';\nimport SignupBloodBank from './Components/auth/signup-form-bloodBank.component';\nimport {SignupDonor} from './Components/auth/signup-form-Donor.component';\nimport {SignupRecipinet} from './Components/auth/signup-form-Recipient.component';\n\n//import Navbar from './Components/navbar.component';\nimport Header from './Components/layout/Header.component';\nimport Footer from './Components/layout/Footer.component';\nimport Navbar from './Components/layout/Navbar'\nimport AboutUs from './Components/layout/OurVision.component';\n\n//extras\nimport UserContext from './context/userDetailContext';\n\n//Donor\n\nimport DonorDonations from './Components/pages/Donor/DonorDonations.component';\nimport DonorRequests from './Components/pages/Donor/DonorRequests.component';\nimport DonorMakeDonations from './Components/pages/Donor/DonorMakeDonations.component';\nimport DonorProfile from './Components/pages/Donor/DonorProfile.component';\n\n\n//Recipient\n\n\nimport RecipientSendRequest from './Components/pages/Recipient/SendRequest.component';\nimport SearchDonor  from './Components/pages/Recipient/SearchDonor.component';\nimport RecipientRequests from './Components/pages/Recipient/ViewRequest.component';\nimport RecipientProfile from './Components/pages/Recipient/RecipientProfile.component';\n\n//Admin\nimport AdminStock from './Components/pages/Admin/AdminStocks.component';\nimport AdminRequest from './Components/pages/Admin/AdminRequests.component';\nimport AdminAlert from './Components/pages/Admin/AdminAlerts.component';\nimport AdminManageDonation from './Components/pages/Admin/AdminManageDonation.component';\nimport AdminBloodBanks from './Components/pages/Admin/AdminManageBloodBanks.component';\nimport UpdateBloodBankAdmin from './Components/pages/Admin/updateProfilesAdmin';\nimport {AdminDonor, AdminRecipient} from './Components/pages/Admin/AdminManageUsers.component';\nimport UpdateUsersProfileAdmin from './Components/pages/Admin/updateProfileUsersAdmin';\n\n\nfunction App() {\n\n  const [userLoginData, setUserLoginData] = useState({  //this state will store the user data needed in all app like id\n    token: undefined,\n    userData: undefined\n  });\n\n  //now we need to get the token from the session if any and check if its valid or not to login the user\n  useEffect(() => {  //useEffect needs arrow func which can't be async \n    const checkUserLogin = async () => {  //data is required to be accssed from backend so async thats why another fun is created in usecase arroe func\n      let sessionToken = localStorage.getItem(\"auth-token\"); //if no key with this name w'll get a null in session token\n         console.log(sessionToken);\n      if (sessionToken === null) {  //a null session token can erase error at the backend \n        localStorage.setItem(\"auth-token\", \"\")  //adding key in local storage & value will be given later\n        sessionToken = \"\"   //so assigning it the empty string\n      }\n      //now checkiing if user is logged in by giving a post request to if token is valid\n      const tokenResponse = await Axios.post(\n        \"http://localhost:5000/login/IsValidToken\",\n        null,\n        {\n          headers: { \"auth-token\": sessionToken }\n        });  //data is null but it has a header which will have a token\n\n      if (tokenResponse.data) {  //true if user logged in\n        const userResponse = await Axios.get(\"http://localhost:5000/login/\", {\n          headers: { \"auth-token\": sessionToken }\n        });\n\n        setUserLoginData({\n          token: sessionToken,\n          userData: userResponse.data\n        });\n      }\n    }\n    checkUserLogin();\n  }, []) \n\n  return (\n    <>\n      <Header />\n      <UserContext.Provider value={{ userLoginData, setUserLoginData }}>\n        <Router>\n          <Navbar />\n          <Route path=\"/\" exact component={AboutUs} />\n          <Route path=\"/signup\" exact component={SignupBloodBank} />\n\n          <Route path=\"/AdminLogin\" exact component={LoginAdmin} />\n          <Route path=\"/signin\" exact component={Login} />\n          <Route path=\"/signup-donor\" exact component = {SignupDonor} />\n          <Route path=\"/signup-recipient\" exact component = {SignupRecipinet}/>\n          <Route path=\"/BloodBank\" exact component={BankHome} />\n          <Route path=\"/BloodBank/Donor\" exact component={BankDonor} />\n          <Route path=\"/BloodBank/ProfileEdit/:id\" exact component = {UpdateProfile} />\n          <Route path=\"/BloodBank/Reciever\" exact component={BankReciever} />\n          <Route path=\"/BloodBank/Request\" exact component={BankRequest} />\n          <Route path=\"/BloodBank/Stock\" exact component={BankStock} />\n          <Route path=\"/BloodBank/Profile\" exact component={BankProfile} />\n\n    \n          <Route path=\"/Donor\" exact component={DonorDonations} />\n          <Route path=\"/Donor/Requests\" exact component={DonorRequests} />\n          <Route path=\"/Donor/MakeDonations\" exact component={DonorMakeDonations} />\n          <Route path=\"/Donor/Profile\" exact component={DonorProfile} />\n\n          <Route path=\"/Recipient\" exact component={RecipientSendRequest} />\n          <Route path=\"/Recipient/SendRequest\" exact component={RecipientSendRequest} />\n          <Route path=\"/Recipient/Request\" exact component={RecipientRequests} />\n          <Route path=\"/Recipient/SearchDonor\" exact component={SearchDonor} />\n          <Route path=\"/Recipient/Profile\" exact component={RecipientProfile} />\n\n          <Route path=\"/Admin/Stock\" exact component={AdminStock} />\n          <Route path=\"/Admin/Request\" exact component={AdminRequest} />\n           <Route path=\"/Admin\" exact component={AdminAlert} />\n           <Route path=\"/Admin/Donation\" exact component={AdminManageDonation} />\n       \n          <Route path=\"/Admin/BloodBank\" exact component={AdminBloodBanks} />\n          <Route path=\"/Admin/User\" exact component={AdminDonor} />\n          <Route path=\"/Admin/Recipient\" exact component={AdminRecipient} />\n          <Route path=\"/Admin/BloodBank/ProfileEdit/:id\" exact component = {UpdateBloodBankAdmin} />\n          <Route path=\"/Admin/Users/ProfileEdit/:id\" exact component = {UpdateUsersProfileAdmin} />\n\n\n        </Router>\n        <Footer />\n      </UserContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n\n//        \n\n\n//import './App.css';\n\n\n\n/*\n <Navbar />\n      <SignupBloodBank />\n      <Login/>\n      <LoginAdmin />\n*/","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\context\\userDetailContext.js",[],"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\auth\\login-form-admin.component.js",["188"],"\r\nimport React, { useState, useContext } from 'react';\r\nimport { useHistory } from \"react-router-dom\";   //after login we need to change the page\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../context/userDetailContext';  //to save data after registering\r\nimport ErrorNotice from '../misc/ErrorNotice'\r\n\r\nimport Axios from \"axios\"\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n\r\nexport default function LoginAdmin() {\r\n\r\n    const [username, setUserName] = useState();\r\n    const [password, setPassword] = useState();\r\n\r\n    //for error\r\n    const [error, setError] = useState();\r\n\r\n    const { userLoginData,setUserLoginData } = useContext(UserContext);  //to save user_id for later use\r\n    const history = useHistory();  //to store history\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const loggedUser = { username, password };\r\n            //to login\r\n            const loginRes = await Axios.post(\"http://localhost:5000/login/AdminLogin\", loggedUser);\r\n\r\n            setUserLoginData({\r\n                token: loginRes.data.token,\r\n                userData: loginRes.data.user,\r\n            });\r\n\r\n            localStorage.setItem(\"auth-token\", loginRes.data.token);\r\n            const type = loginRes.data.user.type;\r\n            history.push(`/${type}`);\r\n\r\n        } catch (err) {\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <AdminLoginContainer>\r\n            <div>\r\n                <div className=\"container container-fluid\">\r\n                    <div className=\"d-flex justify-content-center h-100\">\r\n                        <div class=\"card loginCard\">\r\n                            <div className=\"card-body\">\r\n                                <h3>Sign In</h3>\r\n                                {error && (\r\n                                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\r\n                                )}\r\n                                <form>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"username\" onChange={(e) => { setUserName(e.target.value) }} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <input type=\"password\" className=\"form-control\" placeholder=\"password\" onChange={(e) => setPassword(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"submit\" value=\"Login\" className=\"btn float-right login_btn\" onClick={submit} />\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </AdminLoginContainer>\r\n    )\r\n}\r\n\r\nconst AdminLoginContainer = styled.div`\r\n\r\n@import url('https://fonts.googleapis.com/css2?family=Righteous&display=swap');\r\n\r\nhtml,body{\r\nheight: 100%;\r\n}\r\n\r\n\r\n.container{\r\nheight: 100%;\r\nalign-content: center;\r\npadding-top: 150px;\r\nfont-family: 'Righteous', cursive;\r\n}\r\n\r\n.loginCard{\r\nheight: 330px;\r\nalign-content: center;\r\nmargin: auto;\r\nwidth: 370px;\r\nbackground-color: rgba(15, 74, 92, 0.473) ;\r\n}\r\n\r\n\r\n.card-body h3{\r\ncolor: white;\r\n}\r\n\r\n\r\n.login_btn{\r\ncolor: black;\r\nbackground-color: #FFC312;\r\nwidth: 100px;\r\n}\r\n\r\n.login_btn:hover{\r\ncolor: black;\r\nbackground-color: white;\r\n}\r\n\r\n.Signup a{\r\ncolor: darkblue;\r\nmargin-left: 5px;\r\n}\r\n\r\n.Signup {\r\n    color: white;\r\n}\r\n\r\n\r\n\r\n`","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\auth\\signup-form-bloodBank.component.js",[],"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\auth\\login-form.component.js",["189"],"\r\nimport React, { useState, useContext } from 'react';\r\nimport { useHistory } from \"react-router-dom\";   //after login we need to change the page\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../context/userDetailContext';  //to save data after registering\r\nimport ErrorNotice from '../misc/ErrorNotice'\r\n\r\nimport Axios from \"axios\"\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n\r\nexport default function Login() {\r\n\r\n    const [username, setUserName] = useState();\r\n    const [password, setPassword] = useState();\r\n\r\n    //for error\r\n    const [error, setError] = useState();\r\n\r\n    const { userLoginData,setUserLoginData } = useContext(UserContext);  //to save user_id for later use\r\n    const history = useHistory();  //to store history\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const loggedUser = { username, password };\r\n            //to login\r\n            const loginRes = await Axios.post(\"http://localhost:5000/login/accountLogin\", loggedUser);\r\n\r\n            setUserLoginData({\r\n                token: loginRes.data.token,\r\n                userData: loginRes.data.user,\r\n            });\r\n\r\n            localStorage.setItem(\"auth-token\", loginRes.data.token);\r\n            const type = loginRes.data.user.type;\r\n            history.push(`/${type}`);\r\n        } catch (err) {\r\n\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <UserLoginContainer>\r\n            <div>\r\n                <div className=\"container container-fluid\">\r\n                    <div className=\"d-flex justify-content-center h-100\">\r\n                        <div class=\"card loginCard\">\r\n                            <div className=\"card-body\">\r\n                                <h3>Sign In</h3>\r\n                                {error && (\r\n                                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\r\n                                )}\r\n                                <form>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"username\" onChange={(e) => { setUserName(e.target.value) }} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <input type=\"password\" className=\"form-control\" placeholder=\"password\" onChange={(e) => setPassword(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"submit\" value=\"Login\" className=\"btn float-right login_btn\" onClick={submit} />\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"card-footer\">\r\n                                <div className=\"d-flex justify-content-center Signup\">\r\n                                    Don't have an account?<a href=\"/signup\">Sign Up</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </UserLoginContainer>\r\n    )\r\n}\r\n\r\nconst UserLoginContainer = styled.div`\r\n\r\n@import url('https://fonts.googleapis.com/css2?family=Righteous&display=swap');\r\n\r\nhtml,body{\r\nheight: 100%;\r\n}\r\n\r\n.container{\r\nheight: 100%;\r\nalign-content: center;\r\npadding-top: 150px;\r\nfont-family: 'Righteous', cursive;\r\n}\r\n\r\n.loginCard{\r\nheight: 330px;\r\nalign-content: center;\r\nmargin: auto;\r\nwidth: 370px;\r\nbackground-color: rgba(15, 74, 92, 0.473) ;\r\n}\r\n\r\n\r\n.card-body h3{\r\ncolor: white;\r\n}\r\n\r\n\r\n.login_btn{\r\ncolor: black;\r\nbackground-color: #FFC312;\r\nwidth: 100px;\r\n}\r\n\r\n.login_btn:hover{\r\ncolor: black;\r\nbackground-color: white;\r\n}\r\n\r\n.Signup a{\r\ncolor: darkblue;\r\nmargin-left: 5px;\r\n}\r\n\r\n.Signup {\r\n    color: white;\r\n}\r\n\r\n\r\n\r\n`","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\layout\\Footer.component.js",[],"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\layout\\Navbar.js",[],"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\layout\\Header.component.js",[],"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\BloodBank\\BankReciever.component.js",["190"],"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\BloodBank\\BankHome.component.js",["191"],"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\layout\\OurVision.component.js",[],"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\BloodBank\\BankProfile.component.js",["192","193","194","195"],"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\BloodBank\\BankStock.component.js",["196","197","198"],"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\BloodBank\\BankDonor.component.js",["199"],"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\Donor\\DonorDonations.component.js",["200","201"],"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\BloodBank\\BankRequest.component.js",["202"],"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\Donor\\DonorRequests.component.js",["203","204"],"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\BloodBank\\updateProfile.js",["205"],"import React, { useEffect, useContext, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../../context/userDetailContext'\r\nimport Axios from 'axios'\r\nimport { bloodGroups } from '../../../context/BloodGroupsList';\r\nimport ErrorNotice from '../../misc/ErrorNotice';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n\r\nfunction UpdateProfile(props) {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const [contact, setContact] = useState(\"\");\r\n    const [age, setAge] = useState(\"\");\r\n    const [bloodGroup, setBloodGroup] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [type, setType] = useState(\"\")\r\n\r\n    //for error\r\n    const [error, setError] = useState();\r\n\r\n\r\n    const { userLoginData } = useContext(UserContext)\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (!userLoginData.userData)\r\n            history.push('/')\r\n        try {\r\n            if (userLoginData.userData.type !== \"BloodBank\")\r\n                history.push(`/${userLoginData.userData.type}`)\r\n\r\n            const getData = async () => {\r\n               await Axios.get('http://localhost:5000/user/' + props.match.params.id)\r\n                    .then(response => {\r\n\r\n                        setName(response.data.name);\r\n                        setAddress(response.data.address);\r\n                        setEmail(response.data.email);\r\n                        setBloodGroup(response.data.bloodGroup);\r\n                        setAge(response.data.age);\r\n                        setContact(response.data.contact);\r\n                        setType(response.data.type)\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error);\r\n                    })        \r\n            }\r\n            getData();\r\n\r\n        }\r\n        catch {\r\n            history.push('/')\r\n        }\r\n    }, [userLoginData])\r\n\r\n\r\n    const back = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (type === \"Donor\")\r\n            history.push('/BloodBank/Donor')\r\n        else\r\n            history.push('/BloodBank/Reciever')\r\n    }\r\n\r\n    const update = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n\r\n            const updatedUser = { name, address, contact, age, bloodGroup, email };\r\n            await Axios.post(`http://localhost:5000/user/update/${props.match.params.id}`, updatedUser);  //user and its login data in diff tables\r\n\r\n            Swal.fire(\r\n                'Good job!',\r\n                'Profile Updated Successfully',\r\n                'success'\r\n            )\r\n\r\n        } catch (err) {\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <RecipientProfileContainer>\r\n            <div>\r\n                <h1 className=\"heading\">Update Profile:</h1>\r\n                <div className=\"container container-fluid\">\r\n                    <div className=\"d-flex justify-content-center h-100\">\r\n                        <div class=\"card signupCard\">\r\n                            <div className=\"card-body\">\r\n                                <h3>Profile</h3>\r\n                                {error && (\r\n                                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\r\n                                )}\r\n                                <form>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"bloodBankName\" >Name: </label>\r\n                                        <input id=\"bloodBankName\" type=\"text\" value={name} className=\"form-control\"\r\n                                            onChange={(e) => setName(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"bloodGroup\" >Blood Group: </label>\r\n                                        <select value={bloodGroup} id=\"bloodGroup\" className=\"form-control\" onChange={(e) => setBloodGroup(e.target.value)}>\r\n                                            {bloodGroups.map(item => {\r\n                                                return (\r\n                                                    <option value={item}> {item} </option>\r\n                                                )\r\n                                            })}\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankAddress\" >Address: </label>\r\n                                        <input id=\"BloodBankAddress\" value={address} type=\"text\" className=\"form-control\"\r\n                                            onChange={(e) => setAddress(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankContact\" >Contact No: </label>\r\n                                        <input id=\"BloodBankContact\" type=\"text\" className=\"form-control\"\r\n                                            value={contact} onChange={(e) => setContact(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"age\" >Age: </label>\r\n                                        <input id=\"age\" type=\"text\" className=\"form-control\"\r\n                                            value={age} onChange={(e) => setAge(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankEmail\" >Email: </label>\r\n                                        <input id=\"BloodBankEmail\" type=\"text\" className=\"form-control\"\r\n                                            value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"submit\" value=\"Back\" className=\"btn float-right back_btn\" onClick={back} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn float-right update_btn\" onClick={update} />\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </RecipientProfileContainer>\r\n    )\r\n\r\n}\r\n\r\nexport default UpdateProfile;\r\n\r\nconst RecipientProfileContainer = styled.div`\r\n\r\n@import url('https://fonts.googleapis.com/css2?family=Righteous&display=swap');\r\n\r\nhtml,body{\r\nheight: 100%;\r\n}\r\n\r\n.spinnerl{\r\n    padding-top:150px;\r\n    padding-bottom:150px;\r\n    \r\n}\r\n\r\nlabel {\r\npadding-right: 20px;\r\n}\r\n.container{\r\nheight: 100%;\r\nalign-content: center;\r\npadding-top: 50px;\r\nfont-family: 'Righteous', cursive;\r\n}\r\n\r\n.signupCard{\r\nheight: 650px;\r\nalign-content: center;\r\nmargin: auto;\r\nwidth: 500px;\r\nbackground-color: rgba(15, 74, 92, 0.473) ;\r\n}\r\n\r\n.card-header {\r\nbackground-color: white;\r\n}\r\n.card-body h3{\r\ncolor: white;\r\ntext-align:center;\r\npadding-bottom:5px;\r\n}\r\n#blood{\r\n    width:75%;\r\n    border:none;\r\n}\r\n\r\n.update_btn{\r\ncolor: black;\r\nbackground-color: #FFC312;\r\nwidth: 100px;\r\nmargin: 0 40px;\r\n}\r\n\r\n.update_btn:hover{\r\ncolor: black;\r\nbackground-color: white;\r\n}\r\n\r\n.back_btn{\r\n    color: white;\r\n    background-color: #e02525;\r\n    width: 100px;\r\n    margin: 0 40px;\r\n}\r\n    \r\n.back_btn:hover{\r\ncolor: black;\r\nbackground-color: white;\r\n}\r\n\r\n.ButtonGroup {\r\n    margin: auto;\r\n    justify-content: center;\r\n}\r\n.heading{\r\n    padding-top:5%;\r\n    padding-left:30%\r\n}\r\n`\r\n\r\n","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\Donor\\DonorProfile.component.js",["206"],"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\Recipient\\SendRequest.component.js",["207","208"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { bloodGroups } from '../../../context/BloodGroupsList';\r\nimport UserContext from '../../../context/userDetailContext'\r\nimport Axios from 'axios';\r\nimport ErrorNotice from '../../misc/ErrorNotice';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport default function RecipientSendRequest() {\r\n    const [date, setDate] = useState();\r\n    const [address, setAddress] = useState();\r\n    const [quantity, setQuantity] = useState();\r\n    const [bloodGroup, setBloodGroup] = useState();\r\n\r\n    const { userLoginData} = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    const [user_id , setUserId] = useState(userLoginData.userData.user_id)\r\n    const [error, setError] = useState();\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userLoginData.userData)\r\n            history.push('/')\r\n        try {\r\n            if (userLoginData.userData.type !== \"Recipient\")\r\n                history.push(`/${userLoginData.userData.type}`)\r\n\r\n        }\r\n        catch {\r\n            history.push('/')\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n\r\n            const newRequest = { date, address, quantity, bloodGroup , user_id };\r\n            await Axios.post(\"http://localhost:5000/bloodRequest/addBloodRequest\" , newRequest);  //user and its login data in diff tables\r\n\r\n            Swal.fire(\r\n                'Good job!',\r\n                'Your Request have been posted',\r\n                'success'\r\n            ) \r\n\r\n        } catch (err) {\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <RecipientRequestContainer>\r\n            <div>\r\n                <div className=\"container container-fluid\">\r\n                    <div className=\"d-flex justify-content-center h-100\">\r\n                        <div class=\"card signupCard\">\r\n\r\n                            <div className=\"card-body\">\r\n                                <h3>Request For Blood</h3>\r\n                                {error && (\r\n                                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\r\n                                )}\r\n                                <form>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"bloodBankName\" >Blood Group: </label>\r\n                                        <select id=\"blood\" name=\"bloodGroup\" onChange={(e) => { setBloodGroup(e.target.value) }}>\r\n                                            {bloodGroups.map(item => {\r\n                                                return (\r\n                                                    <option value={item}> {item} </option>\r\n                                                )\r\n                                            })}\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankAddress\" >Due Date: </label>\r\n                                        <input id=\"BloodBankAddress\" type=\"date\" className=\"form-control\" onChange={(e) => { setDate(e.target.value) }} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankContact\" >Address: </label>\r\n                                        <input id=\"BloodBankContact\" type=\"text\" className=\"form-control\" onChange={(e) => { setAddress(e.target.value) }} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankUsername\" >Quantity: </label>\r\n                                        <input id=\"BloodBankUsername\" type=\"text\" className=\"form-control\" onChange={(e) => { setQuantity(e.target.value) }} />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"submit\" value=\"Request\" className=\"btn float-right login_btn\" onClick={submit} />\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </RecipientRequestContainer>\r\n    )\r\n}\r\n\r\nconst RecipientRequestContainer = styled.div`\r\n\r\n@import url('https://fonts.googleapis.com/css2?family=Righteous&display=swap');\r\n\r\nhtml,body{\r\nheight: 100%;\r\n}\r\n\r\nlabel {\r\npadding-right: 20px;\r\n}\r\n\r\n.container{\r\nheight: 100%;\r\nalign-content: center;\r\npadding-top: 40px;\r\nfont-family: 'Righteous', cursive;\r\n}\r\n\r\n.signupCard{\r\nheight: 370px;\r\nalign-content: center;\r\nmargin: auto;\r\nwidth: 500px;\r\nbackground-color: rgba(15, 74, 92, 0.473) ;\r\n}\r\n\r\n.card-body h3{\r\ncolor: white;\r\n}\r\n\r\n#blood{\r\n    width:75%;\r\n    border:none;\r\n}\r\n\r\n\r\n.login_btn{\r\ncolor: black;\r\nbackground-color: #FFC312;\r\nwidth: 100px;\r\n}\r\n\r\n.login_btn:hover{\r\ncolor: black;\r\nbackground-color: white;\r\n}\r\n\r\n.ButtonGroup {\r\n    margin: auto;\r\n    justify-content: center;\r\n}\r\n\r\n\r\n`","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\Recipient\\ViewRequest.component.js",["209"],"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\Recipient\\RecipientProfile.component.js",["210"],"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\auth\\signup-form-Donor.component.js",[],"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\Recipient\\SearchDonor.component.js",["211","212"],"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\auth\\signup-form-Recipient.component.js",[],"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\Admin\\AdminStocks.component.js",["213","214","215"],"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\Admin\\AdminManageDonation.component.js",["216","217","218"],"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\Admin\\AdminManageBloodBanks.component.js",["219"],"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\Donor\\DonorMakeDonations.component.js",[],"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\Admin\\AdminAlerts.component.js",["220"],"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\Admin\\AdminRequests.component.js",["221","222","223","224"],"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\Admin\\updateProfileUsersAdmin.js",["225"],"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\Admin\\updateProfilesAdmin.js",["226","227"],"import React, { useEffect, useContext, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../../context/userDetailContext'\r\nimport Axios from 'axios'\r\nimport ErrorNotice from '../../misc/ErrorNotice';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n\r\nfunction UpdateBloodBankAdmin(props) {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const [contact, setContact] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [type, setType] = useState(\"\")\r\n\r\n    //for error\r\n    const [error, setError] = useState();\r\n\r\n\r\n    const { userLoginData } = useContext(UserContext)\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (!userLoginData.userData)\r\n            history.push('/')\r\n        try {\r\n            if (userLoginData.userData.type !== \"Admin\")\r\n                history.push(`/${userLoginData.userData.type}`)\r\n\r\n            Axios.get('http://localhost:5000/user/' + props.match.params.id)\r\n                .then(response => {\r\n\r\n                    setName(response.data.name);\r\n                    setAddress(response.data.address);\r\n                    setEmail(response.data.email);\r\n                    setContact(response.data.contact);\r\n                    setType(response.data.type)\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n        }\r\n        catch {\r\n            history.push('/')\r\n        }\r\n    }, [userLoginData])\r\n\r\n\r\n    const back = async (e) => {\r\n        e.preventDefault();\r\n        history.push('/Admin/BloodBank')\r\n    }\r\n\r\n    const update = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n\r\n            const updatedUser = { name, address, contact, email };\r\n            await Axios.post(`http://localhost:5000/user/update/${props.match.params.id}`, updatedUser);  //user and its login data in diff tables\r\n\r\n            Swal.fire(\r\n                'Good job!',\r\n                'Profile Updated Successfully',\r\n                'success'\r\n            )\r\n\r\n        } catch (err) {\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <BloodBankProfileContainer>\r\n            <div>\r\n                <h1 className=\"heading\">Update BloodBank</h1>\r\n                <div className=\"container container-fluid\">\r\n                    <div className=\"d-flex justify-content-center h-100\">\r\n                        <div class=\"card signupCard\">\r\n                            <div className=\"card-body\">\r\n                                <h3>Profile</h3>\r\n                                {error && (\r\n                                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\r\n                                )}\r\n                                <form>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"bloodBankName\" >Name: </label>\r\n                                        <input id=\"bloodBankName\" type=\"text\" value={name} className=\"form-control\"\r\n                                            onChange={(e) => setName(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankAddress\" >Address: </label>\r\n                                        <input id=\"BloodBankAddress\" value={address} type=\"text\" className=\"form-control\"\r\n                                            onChange={(e) => setAddress(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankContact\" >Contact No: </label>\r\n                                        <input id=\"BloodBankContact\" type=\"text\" className=\"form-control\"\r\n                                            value={contact} onChange={(e) => setContact(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankEmail\" >Email: </label>\r\n                                        <input id=\"BloodBankEmail\" type=\"text\" className=\"form-control\"\r\n                                            value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"submit\" value=\"Back\" className=\"btn float-right back_btn\" onClick={back} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn float-right update_btn\" onClick={update} />\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </BloodBankProfileContainer>\r\n    )\r\n\r\n}\r\n\r\nexport default UpdateBloodBankAdmin;\r\n\r\nconst BloodBankProfileContainer = styled.div`\r\n\r\n@import url('https://fonts.googleapis.com/css2?family=Righteous&display=swap');\r\n\r\nhtml,body{\r\nheight: 100%;\r\n}\r\n\r\n.spinnerl{\r\n    padding-top:150px;\r\n    padding-bottom:150px;\r\n    \r\n}\r\n\r\nlabel {\r\npadding-right: 20px;\r\n}\r\n.container{\r\nheight: 100%;\r\nalign-content: center;\r\npadding-top: 50px;\r\nfont-family: 'Righteous', cursive;\r\n}\r\n\r\n.signupCard{\r\nheight: 410px;\r\nalign-content: center;\r\nmargin: auto;\r\nwidth: 500px;\r\nbackground-color: rgba(15, 74, 92, 0.473) ;\r\n}\r\n\r\n.card-header {\r\nbackground-color: white;\r\n}\r\n.card-body h3{\r\ncolor: white;\r\ntext-align:center;\r\npadding-bottom:5px;\r\n}\r\n#blood{\r\n    width:75%;\r\n    border:none;\r\n}\r\n\r\n.update_btn{\r\ncolor: black;\r\nbackground-color: #FFC312;\r\nwidth: 100px;\r\nmargin: 0 40px;\r\n}\r\n\r\n.update_btn:hover{\r\ncolor: black;\r\nbackground-color: white;\r\n}\r\n\r\n.back_btn{\r\n    color: white;\r\n    background-color: #e02525;\r\n    width: 100px;\r\n    margin: 0 40px;\r\n}\r\n    \r\n.back_btn:hover{\r\ncolor: black;\r\nbackground-color: white;\r\n}\r\n\r\n.ButtonGroup {\r\n    margin: auto;\r\n    justify-content: center;\r\n}\r\n.heading{\r\n    padding-top:5%;\r\n    padding-left:30%\r\n}\r\n`\r\n\r\n","C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\pages\\Admin\\AdminManageUsers.component.js",["228","229"],"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\context\\BloodGroupsList.js",[],"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\auth\\authButtonOptions.js",[],"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\misc\\ErrorNotice.js",[],"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\misc\\AlertNotice.js",[],"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\layout\\Sidebar.component.js",[],"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\layout\\SidebarDataRecipient.js",[],"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\layout\\SidebarDataAdmin.js",["230"],"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\layout\\SidebarDataBloodBank.js",[],"C:\\Users\\Sidra khan\\Desktop\\BloodBankManagementSystem\\src\\Components\\layout\\SidebarDataDonor.js",[],{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","severity":1,"message":"236","line":4,"column":35,"nodeType":"237","messageId":"238","endLine":4,"endColumn":41},{"ruleId":"235","severity":1,"message":"239","line":21,"column":13,"nodeType":"237","messageId":"238","endLine":21,"endColumn":26},{"ruleId":"235","severity":1,"message":"239","line":21,"column":13,"nodeType":"237","messageId":"238","endLine":21,"endColumn":26},{"ruleId":"240","severity":1,"message":"241","line":92,"column":6,"nodeType":"242","endLine":92,"endColumn":21,"suggestions":"243"},{"ruleId":"240","severity":1,"message":"241","line":48,"column":6,"nodeType":"242","endLine":48,"endColumn":21,"suggestions":"244"},{"ruleId":"235","severity":1,"message":"245","line":28,"column":10,"nodeType":"237","messageId":"238","endLine":28,"endColumn":21},{"ruleId":"240","severity":1,"message":"241","line":57,"column":8,"nodeType":"242","endLine":57,"endColumn":23,"suggestions":"246"},{"ruleId":"235","severity":1,"message":"247","line":83,"column":11,"nodeType":"237","messageId":"238","endLine":83,"endColumn":21},{"ruleId":"248","severity":1,"message":"249","line":321,"column":1,"nodeType":"250","messageId":"251","endLine":329,"endColumn":29},{"ruleId":"252","severity":1,"message":"253","line":26,"column":18,"nodeType":"254","messageId":"255","endLine":26,"endColumn":20},{"ruleId":"252","severity":1,"message":"253","line":29,"column":35,"nodeType":"254","messageId":"255","endLine":29,"endColumn":37},{"ruleId":"240","severity":1,"message":"241","line":52,"column":6,"nodeType":"242","endLine":52,"endColumn":21,"suggestions":"256"},{"ruleId":"240","severity":1,"message":"241","line":92,"column":6,"nodeType":"242","endLine":92,"endColumn":21,"suggestions":"257"},{"ruleId":"235","severity":1,"message":"258","line":1,"column":17,"nodeType":"237","messageId":"238","endLine":1,"endColumn":26},{"ruleId":"240","severity":1,"message":"241","line":42,"column":6,"nodeType":"242","endLine":42,"endColumn":21,"suggestions":"259"},{"ruleId":"240","severity":1,"message":"241","line":96,"column":6,"nodeType":"242","endLine":96,"endColumn":21,"suggestions":"260"},{"ruleId":"235","severity":1,"message":"258","line":1,"column":17,"nodeType":"237","messageId":"238","endLine":1,"endColumn":26},{"ruleId":"240","severity":1,"message":"241","line":33,"column":6,"nodeType":"242","endLine":33,"endColumn":21,"suggestions":"261"},{"ruleId":"240","severity":1,"message":"262","line":58,"column":8,"nodeType":"242","endLine":58,"endColumn":23,"suggestions":"263"},{"ruleId":"240","severity":1,"message":"241","line":62,"column":8,"nodeType":"242","endLine":62,"endColumn":23,"suggestions":"264"},{"ruleId":"235","severity":1,"message":"265","line":19,"column":22,"nodeType":"237","messageId":"238","endLine":19,"endColumn":31},{"ruleId":"240","severity":1,"message":"266","line":35,"column":8,"nodeType":"242","endLine":35,"endColumn":10,"suggestions":"267"},{"ruleId":"240","severity":1,"message":"241","line":33,"column":6,"nodeType":"242","endLine":33,"endColumn":21,"suggestions":"268"},{"ruleId":"240","severity":1,"message":"241","line":62,"column":8,"nodeType":"242","endLine":62,"endColumn":23,"suggestions":"269"},{"ruleId":"240","severity":1,"message":"241","line":35,"column":6,"nodeType":"242","endLine":35,"endColumn":21,"suggestions":"270"},{"ruleId":"271","severity":1,"message":"272","line":90,"column":40,"nodeType":"273","messageId":"274","endLine":90,"endColumn":42},{"ruleId":"252","severity":1,"message":"253","line":26,"column":18,"nodeType":"254","messageId":"255","endLine":26,"endColumn":20},{"ruleId":"252","severity":1,"message":"253","line":29,"column":30,"nodeType":"254","messageId":"255","endLine":29,"endColumn":32},{"ruleId":"240","severity":1,"message":"241","line":52,"column":6,"nodeType":"242","endLine":52,"endColumn":21,"suggestions":"275"},{"ruleId":"235","severity":1,"message":"276","line":6,"column":8,"nodeType":"237","messageId":"238","endLine":6,"endColumn":12},{"ruleId":"235","severity":1,"message":"277","line":9,"column":10,"nodeType":"237","messageId":"238","endLine":9,"endColumn":23},{"ruleId":"240","severity":1,"message":"241","line":49,"column":6,"nodeType":"242","endLine":49,"endColumn":21,"suggestions":"278"},{"ruleId":"240","severity":1,"message":"241","line":74,"column":8,"nodeType":"242","endLine":74,"endColumn":23,"suggestions":"279"},{"ruleId":"240","severity":1,"message":"241","line":57,"column":6,"nodeType":"242","endLine":57,"endColumn":21,"suggestions":"280"},{"ruleId":"235","severity":1,"message":"281","line":6,"column":10,"nodeType":"237","messageId":"238","endLine":6,"endColumn":21},{"ruleId":"235","severity":1,"message":"282","line":15,"column":10,"nodeType":"237","messageId":"238","endLine":15,"endColumn":16},{"ruleId":"235","severity":1,"message":"283","line":15,"column":18,"nodeType":"237","messageId":"238","endLine":15,"endColumn":27},{"ruleId":"240","severity":1,"message":"241","line":36,"column":6,"nodeType":"242","endLine":36,"endColumn":21,"suggestions":"284"},{"ruleId":"240","severity":1,"message":"262","line":57,"column":8,"nodeType":"242","endLine":57,"endColumn":23,"suggestions":"285"},{"ruleId":"235","severity":1,"message":"286","line":17,"column":12,"nodeType":"237","messageId":"238","endLine":17,"endColumn":16},{"ruleId":"240","severity":1,"message":"262","line":49,"column":8,"nodeType":"242","endLine":49,"endColumn":23,"suggestions":"287"},{"ruleId":"240","severity":1,"message":"241","line":92,"column":8,"nodeType":"242","endLine":92,"endColumn":23,"suggestions":"288"},{"ruleId":"240","severity":1,"message":"241","line":204,"column":8,"nodeType":"242","endLine":204,"endColumn":23,"suggestions":"289"},{"ruleId":"235","severity":1,"message":"290","line":6,"column":10,"nodeType":"237","messageId":"238","endLine":6,"endColumn":23},"no-native-reassign",["291"],"no-negated-in-lhs",["292"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'userLoginData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["293"],["294"],"'profileData' is assigned a value but never used.",["295"],"'unregister' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["296"],["297"],"'Component' is defined but never used.",["298"],["299"],["300"],"React Hook useEffect has missing dependencies: 'history' and 'props.match.params.id'. Either include them or remove the dependency array.",["301"],["302"],"'setUserId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'userLoginData.userData'. Either include them or remove the dependency array.",["303"],["304"],["305"],["306"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["307"],"'Swal' is defined but never used.","'RenderButtons' is defined but never used.",["308"],["309"],["310"],"'bloodGroups' is defined but never used.","'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.",["311"],["312"],"'type' is assigned a value but never used.",["313"],["314"],["315"],"'GrUserManager' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"316","fix":"317"},{"desc":"316","fix":"318"},{"desc":"316","fix":"319"},{"desc":"316","fix":"320"},{"desc":"316","fix":"321"},{"desc":"316","fix":"322"},{"desc":"316","fix":"323"},{"desc":"316","fix":"324"},{"desc":"325","fix":"326"},{"desc":"316","fix":"327"},{"desc":"328","fix":"329"},{"desc":"316","fix":"330"},{"desc":"316","fix":"331"},{"desc":"316","fix":"332"},{"desc":"316","fix":"333"},{"desc":"316","fix":"334"},{"desc":"316","fix":"335"},{"desc":"316","fix":"336"},{"desc":"316","fix":"337"},{"desc":"325","fix":"338"},{"desc":"325","fix":"339"},{"desc":"316","fix":"340"},{"desc":"316","fix":"341"},"Update the dependencies array to be: [history, userLoginData]",{"range":"342","text":"343"},{"range":"344","text":"343"},{"range":"345","text":"343"},{"range":"346","text":"343"},{"range":"347","text":"343"},{"range":"348","text":"343"},{"range":"349","text":"343"},{"range":"350","text":"343"},"Update the dependencies array to be: [history, props.match.params.id, userLoginData]",{"range":"351","text":"352"},{"range":"353","text":"343"},"Update the dependencies array to be: [history, userLoginData.userData]",{"range":"354","text":"355"},{"range":"356","text":"343"},{"range":"357","text":"343"},{"range":"358","text":"343"},{"range":"359","text":"343"},{"range":"360","text":"343"},{"range":"361","text":"343"},{"range":"362","text":"343"},{"range":"363","text":"343"},{"range":"364","text":"352"},{"range":"365","text":"352"},{"range":"366","text":"343"},{"range":"367","text":"343"},[2450,2465],"[history, userLoginData]",[1453,1468],[1885,1900],[1608,1623],[2383,2398],[1253,1268],[2564,2579],[1048,1063],[1991,2006],"[history, props.match.params.id, userLoginData]",[2146,2161],[1167,1169],"[history, userLoginData.userData]",[1003,1018],[2155,2170],[1109,1124],[1579,1594],[1463,1478],[2032,2047],[1606,1621],[1234,1249],[2039,2054],[1574,1589],[2668,2683],[6495,6510]]