[{"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Donor\\DonorRequests.component.js":"1","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Donor\\DonorDonations.component.js":"2","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Donor\\DonorProfile.component.js":"3","E:\\Study\\ReactLearn\\blood-bank-system\\src\\App.js":"4","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\login-form-admin.component.js":"5","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\Header.component.js":"6","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankHome.component.js":"7","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\login-form.component.js":"8","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Recipient\\RecipientProfile.component.js":"9","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\SidebarDataDonor.js":"10","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\signup-form-bloodBank.component.js":"11","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankRequest.component.js":"12","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Recipient\\SendRequest.component.js":"13","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Recipient\\ViewRequest.component.js":"14","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\misc\\ErrorNotice.js":"15","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\SidebarDataBloodBank.js":"16"},{"size":2951,"mtime":1610913946499,"results":"17","hashOfConfig":"18"},{"size":2953,"mtime":1610914004284,"results":"19","hashOfConfig":"18"},{"size":12637,"mtime":1610980744801,"results":"20","hashOfConfig":"18"},{"size":5587,"mtime":1610910396160,"results":"21","hashOfConfig":"18"},{"size":2446,"mtime":1610111827645,"results":"22","hashOfConfig":"18"},{"size":1900,"mtime":1610387672585,"results":"23","hashOfConfig":"18"},{"size":2576,"mtime":1610388898908,"results":"24","hashOfConfig":"18"},{"size":4086,"mtime":1610803640036,"results":"25","hashOfConfig":"18"},{"size":5217,"mtime":1610387672815,"results":"26","hashOfConfig":"18"},{"size":830,"mtime":1610387672742,"results":"27","hashOfConfig":"18"},{"size":6967,"mtime":1610111934776,"results":"28","hashOfConfig":"18"},{"size":3942,"mtime":1610388863203,"results":"29","hashOfConfig":"18"},{"size":3517,"mtime":1610387672849,"results":"30","hashOfConfig":"18"},{"size":3026,"mtime":1610387672853,"results":"31","hashOfConfig":"18"},{"size":894,"mtime":1610059042726,"results":"32","hashOfConfig":"18"},{"size":987,"mtime":1610112399892,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"1ngak6v",{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"47"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Donor\\DonorRequests.component.js",["73","74"],"import React, { Component } from 'react';\r\nimport { useState,useEffect, useContext } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../../context/userDetailContext'\r\nimport Axios from 'axios';\r\nfunction DonorRequests() {\r\n\r\n  const { userLoginData } = useContext(UserContext)\r\n  const history = useHistory();\r\n  const[data,setData]=useState([]);\r\n  const [isLoading,setLoading]=useState(true);\r\n//  let recData=[];\r\n  useEffect(() => {\r\n    if (!userLoginData.userData)\r\n      history.push('/')\r\n    try {\r\n      if (userLoginData.userData.type !== \"Donor\")\r\n        history.push(`/${userLoginData.userData.type}`)\r\n      Axios.get(\"http://localhost:5000/bloodRequest/getAllRec\")\r\n        .then((response) => {\r\n          setData(response.data);\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error)\r\n        })\r\n    }\r\n    catch {\r\n      history.push('/')\r\n    }\r\n\r\n  }, [userLoginData])\r\n  if(isLoading){\r\n    return (\r\n      <DonorRequestsContainer>\r\n      <div class=\"d-flex justify-content-center\">\r\n        <div className=\"spinnerl\">\r\n          <div class=\"spinner-border text-danger\" role=\"status\" >\r\n            <span class=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </DonorRequestsContainer>\r\n  )\r\n  }\r\n    return (\r\n      <DonorRequestsContainer>\r\n        <div class=\"body\">\r\n          <h1>Requests</h1>\r\n          <table class=\"table table-striped\">\r\n            <thead class=\"thead\">\r\n              <tr>\r\n                <th scope=\"col\">ID</th>\r\n                <th scope=\"col\">RECIPIENT NAME</th>\r\n                <th scope=\"col\">BLOOD GROUP</th>\r\n                <th scope=\"col\">DUE DATE</th>\r\n                <th scope=\"col\">CONTACT NO</th>\r\n                <th scope=\"col\">QUANTITY</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n            {data.request.map((result,index) => {\r\n            return (\r\n             \r\n                 <tr>\r\n                   <td>{index+1}</td>\r\n                   <td>{data.recipient[index].name}</td>\r\n                  <td>{result.bloodGroup}</td>\r\n                  <td>{(new Date(result.due_date)).toLocaleString().split(',')[0]}</td>\r\n                  <td>{data.recipient[index].contact}</td>\r\n                  <td>{result.quantity}</td>\r\n                </tr>\r\n               \r\n            )\r\n          })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </DonorRequestsContainer>\r\n    )\r\n}\r\nexport default DonorRequests;\r\n\r\nconst DonorRequestsContainer = styled.div`\r\n\r\n.spinnerl{\r\n  padding-top:150px;\r\n  padding-bottom:150px;\r\n  \r\n}\r\n\r\n.thead{\r\n    background-color:Black;\r\n    color:white;\r\n    font-weight:bold;\r\n    font-size:15px;\r\n    width:50%;\r\n}\r\n.table table-striped{\r\n    width:50%;\r\n}\r\n.body{\r\n    padding-left:20%;\r\n    padding-right:10%;\r\n    padding-top:3%;\r\n}\r\n\r\n`;",["75","76"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Donor\\DonorDonations.component.js",["77","78"],"import React, { Component } from 'react';\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../../context/userDetailContext';\r\nimport Axios from \"axios\";\r\n\r\nfunction DonorDonations() {\r\n  const { userLoginData } = useContext(UserContext)\r\n  const [isLoading, setLoading] = useState(true);\r\n  const history = useHistory();\r\n  const [data, setData] = useState([]);\r\n  const [bloodBank, setBloodBank] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!userLoginData.userData)\r\n      history.push('/')\r\n    try {\r\n      if (userLoginData.userData.type !== \"Donor\")\r\n        history.push(`/${userLoginData.userData.type}`)\r\n\r\n\r\n      Axios.get(`http://localhost:5000/donation/blood/${userLoginData.userData.bloodBank_id}`)\r\n        .then((response) => {\r\n          setBloodBank(response.data);\r\n        })\r\n\r\n      Axios.get(`http://localhost:5000/donation/${userLoginData.userData.user_id}`)\r\n        .then((response) => {\r\n          setData(response.data);\r\n\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error)\r\n        })\r\n\r\n    }\r\n    catch {\r\n      history.push('/')\r\n    }\r\n\r\n  }, [userLoginData])\r\n\r\n  if (isLoading) {\r\n    return (\r\n\r\n      <DonorDonationsContainer>\r\n        <div class=\"d-flex justify-content-center\">\r\n          <div className=\"spinnerl\">\r\n            <div class=\"spinner-border text-danger\" role=\"status\" >\r\n              <span class=\"sr-only\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </DonorDonationsContainer>\r\n\r\n    )\r\n  }\r\n  return (\r\n    <DonorDonationsContainer>\r\n      <div class=\"body\">\r\n        <h1>Your Donations</h1>\r\n\r\n        <table class=\"table table-striped\">\r\n          <thead class=\"thead\">\r\n            <tr>\r\n              <th scope=\"col\">ID</th>\r\n              <th scope=\"col\">BANK</th>\r\n              <th scope=\"col\">DATE</th>\r\n              <th scope=\"col\">QUANTITY</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.banks.map((result, index) => {\r\n\r\n              return (\r\n\r\n                <tr>\r\n                  <td>{index + 1}</td>\r\n                  <td>{bloodBank.bank}</td>\r\n                  <td>{(new Date(result.created_at)).toLocaleString().split(',')[0]}</td>\r\n                  <td>{result.quantity}</td>\r\n                </tr>\r\n\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n\r\n      </div>\r\n\r\n\r\n    </DonorDonationsContainer>\r\n  )\r\n}\r\nexport default DonorDonations;\r\nconst DonorDonationsContainer = styled.div`\r\n\r\n.spinnerl{\r\n  padding-top:150px;\r\n  padding-bottom:150px;\r\n  \r\n}\r\n\r\n.thead{\r\n    background-color:Black;\r\n    color:white;\r\n    font-weight:bold;\r\n    font-size:15px;\r\n    width:50%;\r\n}\r\n.table table-striped{\r\n    width:50%;\r\n}\r\n.body{\r\n    padding-left:20%;\r\n    padding-right:10%;\r\n    padding-top:3%;\r\n}\r\n`;","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Donor\\DonorProfile.component.js",["79","80","81","82"],"import React, { useEffect, useContext, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../../context/userDetailContext'\r\nimport Axios from 'axios'\r\nimport { bloodGroups } from '../../../context/BloodGroupsList';\r\nimport ErrorNotice from '../../misc/ErrorNotice';\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\n\r\nfunction DonorProfile() {\r\n\r\n    const [name, setName] = useState();\r\n    const [address, setAddress] = useState();\r\n    const [contact, setContact] = useState();\r\n    const [age, setAge] = useState();\r\n    const [bloodGroup, setBloodGroup] = useState();\r\n    const [username, setUserName] = useState();\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n\r\n    //for error\r\n    const [error, setError] = useState();\r\n\r\n\r\n    const { userLoginData, setUserLoginData } = useContext(UserContext)\r\n    const history = useHistory();\r\n\r\n    const [isLoading, setLoading] = useState(true);  //for 1st loading data\r\n    let [profileData, setProfileData] = useState();\r\n\r\n    useEffect(() => {\r\n        if (!userLoginData.userData)\r\n            history.push('/')\r\n        try {\r\n            if (userLoginData.userData.type !== \"Donor\")\r\n                history.push(`/${userLoginData.userData.type}`)\r\n\r\n            const getData = async () => {\r\n                const userResponse = await Axios.get(\"http://localhost:5000/login/profile\", {\r\n                    headers: { \"auth-token\": userLoginData.token }\r\n                });\r\n                setProfileData(userResponse.data)\r\n                setName(userResponse.data.name);\r\n                setAddress(userResponse.data.address)\r\n                setContact(userResponse.data.contact)\r\n                setAge(userResponse.data.age)\r\n                setBloodGroup(userResponse.data.bloodGroup)\r\n                setEmail(userResponse.data.email)\r\n                setUserName(userResponse.data.username)\r\n\r\n                setLoading(false);\r\n            }\r\n            getData();\r\n\r\n        }\r\n        catch {\r\n            history.push('/')\r\n        }\r\n\r\n    }, [userLoginData])\r\n\r\n\r\n    const update = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n\r\n            const updatedUser = { name, address, contact, age, bloodGroup, email };\r\n            await Axios.post(`http://localhost:5000/user/update/${userLoginData.userData.user_id}`, updatedUser);  //user and its login data in diff tables\r\n            const UpdatedLogin = { username, password }\r\n            const res = await Axios.post(`http://localhost:5000/login/update/${userLoginData.userData.id}`, UpdatedLogin);  //user and its login data in diff tables\r\n\r\n            Swal.fire(\r\n                'Good job!',\r\n                'Your Profile Updated Successfully',\r\n                'success'\r\n            ) //user and its login data in diff tables\r\n\r\n\r\n\r\n        } catch (err) {\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n    };\r\n\r\n\r\n    const unregister = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const res = await Axios.delete(` http://localhost:5000/login/delete`,\r\n                {\r\n                    headers: { \"auth-token\": userLoginData.token }\r\n                });  //user and its login data in diff tables\r\n\r\n            Swal.fire(\r\n                'Deleted',\r\n                'Awww! Sad to See You Go.',\r\n                'success'\r\n            ) //user and its login data in diff tables\r\n\r\n            setUserLoginData({\r\n                token: undefined,\r\n                userData: undefined,\r\n            });\r\n            localStorage.setItem(\"auth-token\", \"\");\r\n            history.push(\"/\")\r\n\r\n        } catch (err) {\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <DonorProfileContainer>\r\n                <div class=\"box\">\r\n                    <div class=\"loader\">\r\n                        <span class=\"back\">\r\n                            <span>L</span>\r\n                            <span>O</span>\r\n                            <span>A</span>\r\n                            <span>D</span>\r\n                            <span>I</span>\r\n                            <span>N</span>\r\n                            <span>G</span>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </DonorProfileContainer>\r\n\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <DonorProfileContainer>\r\n            <div>\r\n                <h1 className=\"heading\">Update Profile:</h1>\r\n                <div className=\"container container-fluid\">\r\n                    <div className=\"d-flex justify-content-center h-100\">\r\n                        <div class=\"card signupCard\">\r\n                            <div className=\"card-body\">\r\n                                <h3>Profile</h3>\r\n                                {error && (\r\n                                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\r\n                                )}\r\n                                <form>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"bloodBankName\" >Name: </label>\r\n                                        <input id=\"bloodBankName\" type=\"text\" value={name} className=\"form-control\"\r\n                                            onChange={(e) => setName(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"bloodGroup\" >Blood Group: </label>\r\n                                        <select value={bloodGroup} id=\"bloodGroup\" className=\"form-control\" onChange={(e) => setBloodGroup(e.target.value)}>\r\n                                            {bloodGroups.map(item => {\r\n                                                return (\r\n                                                    <option value={item}> {item} </option>\r\n                                                )\r\n                                            })}\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankAddress\" >Address: </label>\r\n                                        <input id=\"BloodBankAddress\" value={address} type=\"text\" className=\"form-control\"\r\n                                            onChange={(e) => setAddress(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankContact\" >Contact No: </label>\r\n                                        <input id=\"BloodBankContact\" type=\"text\" className=\"form-control\"\r\n                                            value={contact} onChange={(e) => setContact(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"age\" >Age: </label>\r\n                                        <input id=\"age\" type=\"text\" className=\"form-control\"\r\n                                            value={age} onChange={(e) => setAge(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankUsername\" >Username: </label>\r\n                                        <input id=\"BloodBankUsername\" type=\"text\" className=\"form-control\"\r\n                                            value={username} onChange={(e) => setUserName(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankEmail\" >Email: </label>\r\n                                        <input id=\"BloodBankEmail\" type=\"text\" className=\"form-control\"\r\n                                            value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankPassword\" >Blood Bank: </label>\r\n                                        <input id=\"BloodBankPassword\" type=\"text\" className=\"form-control\"\r\n                                            value={profileData.bloodBank} readonly />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankPassword\" >Password: </label>\r\n                                        <input id=\"BloodBankPassword\" type=\"password\" className=\"form-control\"\r\n                                            onChange={(e) => setPassword(e.target.value)} />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"submit\" value=\"Unregister\" className=\"btn float-right unregister_btn\" onClick={unregister} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn float-right update_btn\" onClick={update} />\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </DonorProfileContainer>\r\n    )\r\n\r\n}\r\n\r\nexport default DonorProfile;\r\n\r\nconst DonorProfileContainer = styled.div`\r\n\r\n@import url('https://fonts.googleapis.com/css2?family=Righteous&display=swap');\r\n\r\nhtml,body{\r\nheight: 100%;\r\n}\r\n\r\n.spinnerl{\r\n    padding-top:150px;\r\n    padding-bottom:150px;\r\n    \r\n}\r\n\r\nlabel {\r\npadding-right: 20px;\r\n}\r\n.container{\r\nheight: 100%;\r\nalign-content: center;\r\npadding-top: 50px;\r\nfont-family: 'Righteous', cursive;\r\n}\r\n\r\n.signupCard{\r\nheight: 650px;\r\nalign-content: center;\r\nmargin: auto;\r\nwidth: 500px;\r\nbackground-color: rgba(15, 74, 92, 0.473) ;\r\n}\r\n\r\n.card-header {\r\nbackground-color: white;\r\n}\r\n.card-body h3{\r\ncolor: white;\r\ntext-align:center;\r\npadding-bottom:5px;\r\n}\r\n#blood{\r\n    width:75%;\r\n    border:none;\r\n}\r\n\r\n.update_btn{\r\ncolor: black;\r\nbackground-color: #FFC312;\r\nwidth: 100px;\r\nmargin: 0 40px;\r\n}\r\n\r\n.update_btn:hover{\r\ncolor: black;\r\nbackground-color: white;\r\n}\r\n\r\n.unregister_btn{\r\n    color: white;\r\n    background-color: #e02525;\r\n    width: 100px;\r\n    margin: 0 40px;\r\n}\r\n    \r\n.unregister_btn:hover{\r\ncolor: black;\r\nbackground-color: white;\r\n}\r\n\r\n.ButtonGroup {\r\n    margin: auto;\r\n    justify-content: center;\r\n}\r\n.heading{\r\n    padding-top:5%;\r\n    padding-left:30%\r\n}\r\n\r\n@import url(https://fonts.googleapis.com/css?family=Roboto:300);\r\n\r\n \r\n.box{\r\n    background: none;\r\n    margin-top: 200px;\r\n\tpadding-top:300px;\r\n}\r\n\r\n.loader{\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    -webkit-transform: translate(-50%, -50%);\r\n    transform: translate(-50%, -50%);\r\n}​\r\n\t.back {\r\n\t\tmargin:1em auto;\r\n\t}\r\n\t.back span {\r\n\t\tfont-size:3em;\r\n\t\tcolor:#F2C640;;\r\n\t\tbackground: #e02525;\r\n\t\tdisplay:table-cell;\r\n\t\tbox-shadow:inset 0 0 5px rgba(0,0,0,0.3), 0 5px 0 #ccc;\r\n\t\tpadding: 0 15px;\r\n\t\tline-height: 100px;\r\n\t\tanimation:jumb 2s infinite;\r\n\t}\r\n\t@keyframes jumb {\r\n\t\t0% {\r\n\t\t\ttransform:translateY(0px)\r\n\t\t}\r\n\t\t50% {\r\n\t\t\ttransform:translateY(-30px);\r\n\t\t\tbox-shadow:0 15px 0 #F2C640;\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform:translateY(0px)\t\r\n\t\t}\r\n\t}\r\n\t.back span:nth-child(1) {\r\n\t\tanimation-delay:0s;\r\n\t}\r\n\t.back span:nth-child(2) {\r\n\t\tanimation-delay:.1s;\t\r\n\t}\r\n\t.back span:nth-child(3) {\r\n\t\tanimation-delay:.2s;\r\n\t}\r\n\t.back span:nth-child(4) {\r\n\t\tanimation-delay:.3s;\t\r\n\t}\r\n\t.back span:nth-child(5) {\r\n\t\tanimation-delay:.4s;\r\n\t}\r\n\t.back span:nth-child(6) {\r\n\t\tanimation-delay:.5s;\t\r\n\t}\r\n\t.back span:nth-child(7) {\r\n\t\tanimation-delay:.6s;\r\n\t}\r\n\r\n`\r\n\r\n{/* <DonorProfileContainer>\r\n<div class=\"d-flex justify-content-center\">\r\n    <div className=\"spinnerl\">\r\n        <div class=\"spinner-border text-danger\" role=\"status\" >\r\n            <span class=\"sr-only\">Loading...</span>\r\n        </div>\r\n    </div>\r\n</div>\r\n</DonorProfileContainer> */}\r\n\r\n","E:\\Study\\ReactLearn\\blood-bank-system\\src\\App.js",["83"],"import React, { useState, useEffect } from 'react';  //useEffect will run exactly 1 time \n//when component loaded or each time component has been switched \n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Axios from 'axios';\n\n//Blood Bank\nimport BankHome from './Components/pages/BloodBank/BankHome.component';\nimport BankDonor from './Components/pages/BloodBank/BankDonor.component';\nimport BankReciever from './Components/pages/BloodBank/BankReciever.component';\nimport BankRequest from './Components/pages/BloodBank/BankRequest.component';\nimport BankStock from './Components/pages/BloodBank/BankStock.component';\n\nimport Login from './Components/auth/login-form.component';\nimport LoginAdmin from './Components/auth/login-form-admin.component';\nimport SignupBloodBank from './Components/auth/signup-form-bloodBank.component';\nimport {SignupDonor} from './Components/auth/signup-form-Donor.component';\nimport {SignupRecipinet} from './Components/auth/signup-form-Recipient.component';\n\n//import Navbar from './Components/navbar.component';\nimport Header from './Components/layout/Header.component';\nimport Footer from './Components/layout/Footer.component';\nimport Navbar from './Components/layout/Navbar'\nimport AboutUs from './Components/layout/OurVision.component';\n\n//extras\nimport UserContext from './context/userDetailContext';\n\n//Donor\n\nimport DonorDonations from './Components/pages/Donor/DonorDonations.component';\nimport DonorRequests from './Components/pages/Donor/DonorRequests.component';\nimport DonorMakeDonations from './Components/pages/Donor/DonorMakeDonations.component';\nimport DonorProfile from './Components/pages/Donor/DonorProfile.component';\n\n\n//Recipient\n\n\nimport RecipientSendRequest from './Components/pages/Recipient/SendRequest.component';\nimport SearchDonor  from './Components/pages/Recipient/SearchDonor.component';\nimport RecipientRequests from './Components/pages/Recipient/ViewRequest.component';\nimport RecipientProfile from './Components/pages/Recipient/RecipientProfile.component';\n\n\n\nfunction App() {\n\n  const [userLoginData, setUserLoginData] = useState({  //this state will store the user data needed in all app like id\n    token: undefined,\n    userData: undefined\n  });\n\n  //now we need to get the token from the session if any and check if its valid or not to login the user\n  useEffect(() => {  //useEffect needs arrow func which can't be async \n    const checkUserLogin = async () => {  //data is required to be accssed from backend so async thats why another fun is created in usecase arroe func\n      let sessionToken = localStorage.getItem(\"auth-token\"); //if no key with this name w'll get a null in session token\n         console.log(sessionToken);\n      if (sessionToken === null) {  //a null session token can erase error at the backend \n        localStorage.setItem(\"auth-token\", \"\")  //adding key in local storage & value will be given later\n        sessionToken = \"\"   //so assigning it the empty string\n      }\n      //now checkiing if user is logged in by giving a post request to if token is valid\n      const tokenResponse = await Axios.post(\n        \"http://localhost:5000/login/IsValidToken\",\n        null,\n        {\n          headers: { \"auth-token\": sessionToken }\n        });  //data is null but it has a header which will have a token\n\n      if (tokenResponse.data) {  //true if user logged in\n        const userResponse = await Axios.get(\"http://localhost:5000/login/\", {\n          headers: { \"auth-token\": sessionToken }\n        });\n\n        setUserLoginData({\n          token: sessionToken,\n          userData: userResponse.data\n        });\n      }\n    }\n    checkUserLogin();\n  }, []) \n\n  return (\n    <>\n      <Header />\n      <UserContext.Provider value={{ userLoginData, setUserLoginData }}>\n        <Router>\n          <Navbar />\n          <Route path=\"/\" exact component={AboutUs} />\n          <Route path=\"/signup\" exact component={SignupBloodBank} />\n\n          <Route path=\"/Admin\" exact component={LoginAdmin} />\n          <Route path=\"/signin\" exact component={Login} />\n          <Route path=\"/signup-donor\" exact component = {SignupDonor} />\n          <Route path=\"/signup-recipient\" exact component = {SignupRecipinet}/>\n          <Route path=\"/BloodBank\" exact component={BankHome} />\n          <Route path=\"/BloodBank/Donor\" exact component={BankDonor} />\n          <Route path=\"/BloodBank/Reciever\" exact component={BankReciever} />\n          <Route path=\"/BloodBank/Request\" exact component={BankRequest} />\n          <Route path=\"/BloodBank/Stock\" exact component={BankStock} />\n\n    \n          <Route path=\"/Donor\" exact component={DonorDonations} />\n          <Route path=\"/Donor/Requests\" exact component={DonorRequests} />\n          <Route path=\"/Donor/MakeDonations\" exact component={DonorMakeDonations} />\n          <Route path=\"/Donor/Profile\" exact component={DonorProfile} />\n\n          <Route path=\"/Recipient\" exact component={RecipientSendRequest} />\n          <Route path=\"/Recipient/SendRequest\" exact component={RecipientSendRequest} />\n          <Route path=\"/Recipient/Request\" exact component={RecipientRequests} />\n          <Route path=\"/Recipient/SearchDonor\" exact component={SearchDonor} />\n          <Route path=\"/Recipient/Profile\" exact component={RecipientProfile} />\n        </Router>\n        <Footer />\n      </UserContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n\n//        \n\n\n//import './App.css';\n\n\n\n/*\n <Navbar />\n      <SignupBloodBank />\n      <Login/>\n      <LoginAdmin />\n*/",["84","85"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\login-form-admin.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\Header.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankHome.component.js",["86"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\login-form.component.js",["87","88"],"\r\nimport React, { Component, useState, useContext } from 'react';\r\nimport { useHistory } from \"react-router-dom\";   //after login we need to change the page\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../context/userDetailContext';  //to save data after registering\r\nimport ErrorNotice from '../misc/ErrorNotice'\r\n\r\nimport Axios from \"axios\"\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n\r\nexport default function Login() {\r\n\r\n    const [username, setUserName] = useState();\r\n    const [password, setPassword] = useState();\r\n\r\n    //for error\r\n    const [error, setError] = useState();\r\n\r\n    const { userLoginData,setUserLoginData } = useContext(UserContext);  //to save user_id for later use\r\n    const history = useHistory();  //to store history\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const loggedUser = { username, password };\r\n            //to login\r\n            const loginRes = await Axios.post(\"http://localhost:5000/login/accountLogin\", loggedUser);\r\n\r\n            setUserLoginData({\r\n                token: loginRes.data.token,\r\n                userData: loginRes.data.user,\r\n            });\r\n\r\n            localStorage.setItem(\"auth-token\", loginRes.data.token);\r\n            const type = loginRes.data.user.type;\r\n            history.push(`/${type}`);\r\n        } catch (err) {\r\n\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <UserLoginContainer>\r\n            <div>\r\n                <div className=\"container container-fluid\">\r\n                    <div className=\"d-flex justify-content-center h-100\">\r\n                        <div class=\"card loginCard\">\r\n                            <div className=\"card-body\">\r\n                                <h3>Sign In</h3>\r\n                                {error && (\r\n                                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\r\n                                )}\r\n                                <form>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"username\" onChange={(e) => { setUserName(e.target.value) }} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <input type=\"password\" className=\"form-control\" placeholder=\"password\" onChange={(e) => setPassword(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"submit\" value=\"Login\" className=\"btn float-right login_btn\" onClick={submit} />\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"card-footer\">\r\n                                <div className=\"d-flex justify-content-center Signup\">\r\n                                    Don't have an account?<a href=\"/signup\">Sign Up</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </UserLoginContainer>\r\n    )\r\n}\r\n\r\nconst UserLoginContainer = styled.div`\r\n\r\n@import url('https://fonts.googleapis.com/css2?family=Righteous&display=swap');\r\n\r\nhtml,body{\r\nheight: 100%;\r\n}\r\n\r\n.container{\r\nheight: 100%;\r\nalign-content: center;\r\npadding-top: 150px;\r\nfont-family: 'Righteous', cursive;\r\n}\r\n\r\n.loginCard{\r\nheight: 330px;\r\nalign-content: center;\r\nmargin: auto;\r\nwidth: 370px;\r\nbackground-color: rgba(15, 74, 92, 0.473) ;\r\n}\r\n\r\n\r\n.card-body h3{\r\ncolor: white;\r\n}\r\n\r\n\r\n.login_btn{\r\ncolor: black;\r\nbackground-color: #FFC312;\r\nwidth: 100px;\r\n}\r\n\r\n.login_btn:hover{\r\ncolor: black;\r\nbackground-color: white;\r\n}\r\n\r\n.Signup a{\r\ncolor: darkblue;\r\nmargin-left: 5px;\r\n}\r\n\r\n.Signup {\r\n    color: white;\r\n}\r\n\r\n\r\n\r\n`","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Recipient\\RecipientProfile.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\SidebarDataDonor.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\signup-form-bloodBank.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankRequest.component.js",["89"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Recipient\\SendRequest.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Recipient\\ViewRequest.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\misc\\ErrorNotice.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\SidebarDataBloodBank.js",[],{"ruleId":"90","severity":1,"message":"91","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":26},{"ruleId":"94","severity":1,"message":"95","line":33,"column":6,"nodeType":"96","endLine":33,"endColumn":21,"suggestions":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"90","severity":1,"message":"91","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":26},{"ruleId":"94","severity":1,"message":"95","line":43,"column":6,"nodeType":"96","endLine":43,"endColumn":21,"suggestions":"102"},{"ruleId":"94","severity":1,"message":"95","line":62,"column":8,"nodeType":"96","endLine":62,"endColumn":23,"suggestions":"103"},{"ruleId":"90","severity":1,"message":"104","line":72,"column":19,"nodeType":"92","messageId":"93","endLine":72,"endColumn":22},{"ruleId":"90","severity":1,"message":"104","line":91,"column":19,"nodeType":"92","messageId":"93","endLine":91,"endColumn":22},{"ruleId":"105","severity":1,"message":"106","line":362,"column":1,"nodeType":"107","messageId":"108","endLine":370,"endColumn":29},{"ruleId":"90","severity":1,"message":"109","line":4,"column":35,"nodeType":"92","messageId":"93","endLine":4,"endColumn":41},{"ruleId":"98","replacedBy":"110"},{"ruleId":"100","replacedBy":"111"},{"ruleId":"94","severity":1,"message":"95","line":22,"column":6,"nodeType":"96","endLine":22,"endColumn":21,"suggestions":"112"},{"ruleId":"90","severity":1,"message":"91","line":2,"column":17,"nodeType":"92","messageId":"93","endLine":2,"endColumn":26},{"ruleId":"90","severity":1,"message":"113","line":21,"column":13,"nodeType":"92","messageId":"93","endLine":21,"endColumn":26},{"ruleId":"94","severity":1,"message":"95","line":24,"column":6,"nodeType":"96","endLine":24,"endColumn":21,"suggestions":"114"},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["115"],"no-native-reassign",["116"],"no-negated-in-lhs",["117"],["118"],["119"],"'res' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Switch' is defined but never used.",["116"],["117"],["120"],"'userLoginData' is assigned a value but never used.",["121"],{"desc":"122","fix":"123"},"no-global-assign","no-unsafe-negation",{"desc":"122","fix":"124"},{"desc":"122","fix":"125"},{"desc":"122","fix":"126"},{"desc":"122","fix":"127"},"Update the dependencies array to be: [history, userLoginData]",{"range":"128","text":"129"},{"range":"130","text":"129"},{"range":"131","text":"129"},{"range":"132","text":"129"},{"range":"133","text":"129"},[1004,1019],"[history, userLoginData]",[1255,1270],[2146,2161],[653,668],[676,691]]