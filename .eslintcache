[{"E:\\Study\\ReactLearn\\blood-bank-system\\src\\App.js":"1","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\navbar.component.js":"2","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\Sidebar.component.js":"3","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\SidebarDataBloodBank.js":"4","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\signup-form-bloodBank.component.js":"5","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\login-form.component.js":"6","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\Header.component.js":"7","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\Footer.component.js":"8","E:\\Study\\ReactLearn\\blood-bank-system\\src\\context\\userDetailContext.js":"9","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\login-form-admin.component.js":"10","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\authButtonOptions.js":"11","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankStock.component.js":"12","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\Navbar.js":"13","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankDonor.component.js":"14","E:\\Study\\ReactLearn\\blood-bank-system\\src\\index.js":"15","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankRequest.component.js":"16","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\misc\\ErrorNotice.js":"17","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankHome.component.js":"18","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankReciever.component.js":"19","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\signup-form-Recipient.component.js":"20","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\signup-form-Donor.component.js":"21"},{"size":4308,"mtime":1610062619488,"results":"22","hashOfConfig":"23"},{"size":1890,"mtime":1608227863719,"results":"24","hashOfConfig":"23"},{"size":2660,"mtime":1610043257876,"results":"25","hashOfConfig":"23"},{"size":986,"mtime":1608227919432,"results":"26","hashOfConfig":"23"},{"size":6963,"mtime":1610062380142,"results":"27","hashOfConfig":"23"},{"size":4068,"mtime":1610061662699,"results":"28","hashOfConfig":"23"},{"size":993,"mtime":1609949098334,"results":"29","hashOfConfig":"23"},{"size":2491,"mtime":1610060347958,"results":"30","hashOfConfig":"23"},{"size":204,"mtime":1609960937164,"results":"31","hashOfConfig":"23"},{"size":2446,"mtime":1608227789689,"results":"32","hashOfConfig":"23"},{"size":1170,"mtime":1610053919904,"results":"33","hashOfConfig":"23"},{"size":3203,"mtime":1610062012848,"results":"34","hashOfConfig":"23"},{"size":940,"mtime":1610043390166,"results":"35","hashOfConfig":"23"},{"size":4458,"mtime":1610061913413,"results":"36","hashOfConfig":"23"},{"size":170,"mtime":1609836443361,"results":"37","hashOfConfig":"23"},{"size":3927,"mtime":1610061994508,"results":"38","hashOfConfig":"23"},{"size":894,"mtime":1610059042726,"results":"39","hashOfConfig":"23"},{"size":2380,"mtime":1610061293704,"results":"40","hashOfConfig":"23"},{"size":4460,"mtime":1610061959741,"results":"41","hashOfConfig":"23"},{"size":8101,"mtime":1610063377339,"results":"42","hashOfConfig":"23"},{"size":8093,"mtime":1610063151709,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},"1ngak6v",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Study\\ReactLearn\\blood-bank-system\\src\\App.js",["95","96","97"],"import React, { useState, useEffect } from 'react';  //useEffect will run exactly 1 time \n//when component loaded or each time component has been switched \n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Axios from 'axios';\n\n//Blood Bank\nimport BankHome from './Components/pages/BloodBank/BankHome.component';\nimport BankDonor from './Components/pages/BloodBank/BankDonor.component';\nimport BankReciever from './Components/pages/BloodBank/BankReciever.component';\nimport BankRequest from './Components/pages/BloodBank/BankRequest.component';\nimport BankStock from './Components/pages/BloodBank/BankStock.component';\nimport Sidebar from './Components/Sidebar.component';\n\nimport Login from './Components/login-form.component';\nimport LoginAdmin from './Components/login-form-admin.component';\nimport SignupBloodBank from './Components/signup-form-bloodBank.component';\nimport SignupDonor from './Components/signup-form-Donor.component';\nimport SignupRecipinet from './Components/signup-form-Recipient.component';\n\n//import Navbar from './Components/navbar.component';\nimport Header from './Components/Header.component';\nimport Footer from './Components/Footer.component';\nimport Navbar from './Components/layout/Navbar'\n\n//extras\nimport UserContext from './context/userDetailContext';\n\nfunction App() {\n\n  const [userLoginData, setUserLoginData] = useState({  //this state will store the user data needed in all app like id\n    token: undefined,\n    userData: undefined,\n  });\n\n  //now we need to get the token from the session if any and check if its valid or not to login the user\n  useEffect(() => {  //useEffect needs arrow func which can't be async \n    const checkUserLogin = async () => {  //data is required to be accssed from backend so async thats why another fun is created in usecase arroe func\n      let sessionToken = localStorage.getItem(\"auth-token\"); //if no key with this name w'll get a null in session token\n         console.log(sessionToken);\n      if (sessionToken === null) {  //a null session token can erase error at the backend \n        localStorage.setItem(\"auth-token\", \"\")  //adding key in local storage & value will be given later\n        sessionToken = \"\"   //so assigning it the empty string\n      }\n      //now checkiing if user is logged in by giving a post request to if token is valid\n      const tokenResponse = await Axios.post(\n        \"http://localhost:5000/login/IsValidToken\",\n        null,\n        {\n          headers: { \"auth-token\": sessionToken }\n        });  //data is null but it has a header which will have a token\n\n      if (tokenResponse.data) {  //true if user logged in\n        const userResponse = await Axios.get(\"http://localhost:5000/login/\", {\n          headers: { \"auth-token\": sessionToken }\n        });\n\n        setUserLoginData({\n          sessionToken,\n          userData: userResponse.data,\n        });\n      }\n    }\n\n    checkUserLogin();\n  }, []) //[] empty array means this useEffect will run exactly one time\n\n  //          <Route path=\"/\" component={Sidebar} />\n  //          <Route path=\"/BloodBank\" component={BankNavbar} />\n  //          <Route path=\"/\" exact component={Navbar} />\n\n\n\n  return (\n    <>\n      <Header />\n      <UserContext.Provider value={{ userLoginData, setUserLoginData }}>\n        <Router>\n          <Navbar />\n          <Route path=\"/signup\" exact component={SignupBloodBank} />\n          <Route path=\"/signup-donor\" exact component={SignupDonor} />\n          <Route path=\"/signup-recipient\" exact component={SignupRecipinet} />\n          <Route path=\"/Admin\" exact component={LoginAdmin} />\n          <Route path=\"/signin\" exact component={Login} />\n          <Route path=\"/BloodBank\" exact component={BankHome} />\n          <Route path=\"/BloodBank/Donor\" exact component={BankDonor} />\n          <Route path=\"/BloodBank/Reciever\" exact component={BankReciever} />\n          <Route path=\"/BloodBank/Request\" exact component={BankRequest} />\n          <Route path=\"/BloodBank/Stock\" exact component={BankStock} />\n        </Router>\n      </UserContext.Provider>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n\n//        \n\n\n//import './App.css';\n\n\n\n/*\n <Navbar />\n      <SignupBloodBank />\n      <Login/>\n      <LoginAdmin />\n*/","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\navbar.component.js",[],["98","99"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\Sidebar.component.js",[],["100","101"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\SidebarDataBloodBank.js",[],["102","103"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\signup-form-bloodBank.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\login-form.component.js",["104"],"\r\nimport React, { Component, useState, useContext } from 'react';\r\nimport { useHistory } from \"react-router-dom\";   //after login we need to change the page\r\nimport styled from 'styled-components';\r\nimport UserContext from '../context/userDetailContext';  //to save data after registering\r\nimport ErrorNotice from './misc/ErrorNotice'\r\n\r\nimport Axios from \"axios\"\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n\r\nexport default function Login() {\r\n\r\n    const [username, setUserName] = useState();\r\n    const [password, setPassword] = useState();\r\n\r\n    //for error\r\n    const [error, setError] = useState();\r\n\r\n    const { setUserLoginData } = useContext(UserContext);  //to save user_id for later use\r\n    const history = useHistory();  //to store history\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const loggedUser = { username, password };\r\n            //to login\r\n            const loginRes = await Axios.post(\"http://localhost:5000/login/accountLogin\", loggedUser);\r\n\r\n            setUserLoginData({\r\n                token: loginRes.data.token,\r\n                userData: loginRes.data.user,\r\n            });\r\n\r\n            localStorage.setItem(\"auth-token\", loginRes.data.token);\r\n            const type = loginRes.data.user.type;\r\n            history.push(`/${type}`);\r\n        } catch (err) {\r\n\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <UserLoginContainer>\r\n            <div>\r\n                <div className=\"container container-fluid\">\r\n                    <div className=\"d-flex justify-content-center h-100\">\r\n                        <div class=\"card loginCard\">\r\n                            <div className=\"card-body\">\r\n                                <h3>Sign In</h3>\r\n                                {error && (\r\n                                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\r\n                                )}\r\n                                <form>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"username\" onChange={(e) => { setUserName(e.target.value) }} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <input type=\"password\" className=\"form-control\" placeholder=\"password\" onChange={(e) => setPassword(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"submit\" value=\"Login\" className=\"btn float-right login_btn\" onClick={submit} />\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"card-footer\">\r\n                                <div className=\"d-flex justify-content-center Signup\">\r\n                                    Don't have an account?<a href=\"/signup\">Sign Up</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </UserLoginContainer>\r\n    )\r\n}\r\n\r\nconst UserLoginContainer = styled.div`\r\n\r\n@import url('https://fonts.googleapis.com/css2?family=Righteous&display=swap');\r\n\r\nhtml,body{\r\nheight: 100%;\r\n}\r\n\r\n.container{\r\nheight: 100%;\r\nalign-content: center;\r\npadding-top: 150px;\r\nfont-family: 'Righteous', cursive;\r\n}\r\n\r\n.loginCard{\r\nheight: 330px;\r\nalign-content: center;\r\nmargin: auto;\r\nwidth: 370px;\r\nbackground-color: rgba(15, 74, 92, 0.473) ;\r\n}\r\n\r\n\r\n.card-body h3{\r\ncolor: white;\r\n}\r\n\r\n\r\n.login_btn{\r\ncolor: black;\r\nbackground-color: #FFC312;\r\nwidth: 100px;\r\n}\r\n\r\n.login_btn:hover{\r\ncolor: black;\r\nbackground-color: white;\r\n}\r\n\r\n.Signup a{\r\ncolor: darkblue;\r\nmargin-left: 5px;\r\n}\r\n\r\n.Signup {\r\n    color: white;\r\n}\r\n\r\n\r\n\r\n`","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\Header.component.js",[],["105","106"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\Footer.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\context\\userDetailContext.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\login-form-admin.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\authButtonOptions.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankStock.component.js",["107"],"import React, { useEffect, useContext } from \"react\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../../context/userDetailContext'\r\n\r\n\r\nfunction BankStock() {\r\n    //to prevent from loading if user is log out\r\n    const { userLoginData } = useContext(UserContext)\r\n    const history = useHistory();\r\n  \r\n    useEffect(() => {\r\n      if (!userLoginData.userData)\r\n        history.push('/')\r\n  \r\n    }, [userLoginData])\r\n  \r\n    return (\r\n      <BankContainer>\r\n        <div class=\"body\">\r\n          <h1>Blood Stock</h1>\r\n\r\n\r\n          <table class=\"table table-striped\">\r\n            <thead class=\"thead\">\r\n              <tr>\r\n                <th scope=\"col\">ID</th>\r\n                <th scope=\"col\">DONOR NAME</th>\r\n                <th scope=\"col\">BLOOD GROUP</th>\r\n                <th scope=\"col\">DATE DONATED</th>\r\n                <th scope=\"col\">QUANTITY</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <th scope=\"row\">1</th>\r\n                <td>abc</td>\r\n                <td>B+</td>\r\n                <td>20/11/2020</td>\r\n                <td>1</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">2</th>\r\n                <td>xyz</td>\r\n                <td>A+</td>\r\n                <td>21/11/2020</td>\r\n                <td>2</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">3</th>\r\n                <td>123</td>\r\n                <td>A-</td>\r\n                <td>23/11/2020</td>\r\n                <td>1</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">4</th>\r\n                <td>mln</td>\r\n                <td>B+</td>\r\n                <td>25/11/2020</td>\r\n                <td>1</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">5</th>\r\n                <td>klm</td>\r\n                <td>A+</td>\r\n                <td>27/11/2020</td>\r\n                <td>2</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <h6>Total Quantity:  <input type=\"text\" id=\"myText\" value=\"7\" /></h6>\r\n          <h2>Blood Quantity</h2>\r\n          <div className=\"Bottom\">\r\n            <h5>Select Blood Group:</h5>\r\n            <select id=\"blood\" name=\"bloodGroup\">\r\n              <option value=\"A+\">A+</option>\r\n              <option value=\"A-\">A-</option>\r\n              <option value=\"B+\">B+</option>\r\n              <option value=\"O-\">O-</option>\r\n            </select>\r\n            <br />\r\n            <input type=\"text\"\r\n              id=\"myText\"\r\n              value=\"20\" />\r\n          </div>\r\n        </div>\r\n      </BankContainer>\r\n    )\r\n  }\r\n\r\nexport default BankStock;\r\n\r\nconst BankContainer = styled.div`\r\n.thead{\r\n    background-color:Black;\r\n    color:white;\r\n    font-weight:bold;\r\n    font-size:15px;\r\n    width:50%;\r\n}\r\n.table table-striped{\r\n    width:50%;\r\n}\r\n.body{\r\n    padding-left:20%;\r\n    padding-right:10%;\r\n    padding-top:3%;\r\n}\r\n\r\n.Bottom{\r\n  padding-left:70%;  \r\n}\r\nh2{\r\n    color:#6B1A08;\r\n    padding-left:65%;\r\n    font-weight:bold;\r\n}\r\nh6{\r\n    padding-left:60%;   \r\n}\r\ninput{\r\n    text-align:center;\r\n    width:40%;\r\n}\r\n`;","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\Navbar.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankDonor.component.js",["108"],"import React, { useEffect, useContext } from \"react\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../../context/userDetailContext'\r\n\r\n\r\nfunction BankDonor() {\r\n    //to prevent from loading if user is log out\r\n    const { userLoginData } = useContext(UserContext)\r\n    const history = useHistory();\r\n  \r\n    useEffect(() => {\r\n      if (!userLoginData.userData)\r\n        history.push('/')\r\n  \r\n    }, [userLoginData])\r\n  \r\n    return (\r\n      <BankContainer>\r\n        <div class=\"body\">\r\n          <h1>Blood Donors</h1>\r\n          <table class=\"table table-striped\">\r\n            <thead class=\"thead\">\r\n              <tr>\r\n                <th scope=\"col\">ID</th>\r\n                <th scope=\"col\">DONOR NAME</th>\r\n                <th scope=\"col\">AGE</th>\r\n                <th scope=\"col\">BLOOD GROUP</th>\r\n                <th scope=\"col\">ADDRESS</th>\r\n                <th scope=\"col\">CONTACT NO</th>\r\n                <th scope=\"col\">DATE DONATED</th>\r\n                <th scope=\"col\">QUANTITY</th>\r\n                <th scope=\"col\">STATUS</th>\r\n                <th scope=\"col\">ACTION</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <th scope=\"row\">1</th>\r\n                <td>abc</td>\r\n                <td>20</td>\r\n                <td>A+</td>\r\n                <td>22 Street House No 1</td>\r\n                <td>12345678901</td>\r\n                <td>20/11/2020</td>\r\n                <td>1</td>\r\n                <td>Active</td>\r\n                <td>\r\n                  <button type=\"button\" class=\"btn btn-primary\">Update</button>\r\n                  <br />\r\n                  <button type=\"button\" class=\"btn btn-danger\">Delete</button></td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">2</th>\r\n                <td>xyz</td>\r\n                <td>21</td>\r\n                <td>B+</td>\r\n                <td>22 Street House No 2</td>\r\n                <td>12345678900</td>\r\n                <td>20/12/2020</td>\r\n                <td>2</td>\r\n                <td>Active</td>\r\n                <td>\r\n                  <button type=\"button\" class=\"btn btn-primary\">Update</button>\r\n                  <br />\r\n                  <button type=\"button\" class=\"btn btn-danger\">Delete</button></td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">3</th>\r\n                <td>mln</td>\r\n                <td>22</td>\r\n                <td>A-</td>\r\n                <td>22 Street House No 3</td>\r\n                <td>12345678908</td>\r\n                <td>21/12/2020</td>\r\n                <td>2</td>\r\n                <td>Active</td>\r\n                <td>\r\n                  <button type=\"button\" class=\"btn btn-primary\">Update</button>\r\n                  <br />\r\n                  <button type=\"button\" class=\"btn btn-danger\">Delete</button></td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">4</th>\r\n                <td>123</td>\r\n                <td>25</td>\r\n                <td>B-</td>\r\n                <td>22 Street House No 4</td>\r\n                <td>12345678909</td>\r\n                <td>23/11/2020</td>\r\n                <td>2</td>\r\n                <td>Active</td>\r\n                <td>\r\n                  <button type=\"button\" class=\"btn btn-primary\">Update</button>\r\n                  <br />\r\n                  <button type=\"button\" class=\"btn btn-danger\">Delete</button></td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">5</th>\r\n                <td>jkl</td>\r\n                <td>23</td>\r\n                <td>AB+</td>\r\n                <td>22 Street House No 5</td>\r\n                <td>12345678905</td>\r\n                <td>20/11/2020</td>\r\n                <td>1</td>\r\n                <td>Active</td>\r\n                <td>\r\n                  <button type=\"button\" class=\"btn btn-primary\">Update</button>\r\n                  <br />\r\n                  <button type=\"button\" class=\"btn btn-danger\">Delete</button></td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </BankContainer>\r\n    )\r\n  }\r\n\r\nexport default BankDonor;\r\n\r\nconst BankContainer = styled.div`\r\n.thead{\r\n    background-color:Black;\r\n    color:white;\r\n    font-weight:bold;\r\n    font-size:15px;\r\n    width:50%;\r\n}\r\n.table table-striped{\r\n    width:50%;\r\n}\r\n.body{\r\n    padding-left:20%;\r\n    padding-right:10%;\r\n    padding-top:3%;\r\n}\r\n`;","E:\\Study\\ReactLearn\\blood-bank-system\\src\\index.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankRequest.component.js",["109"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\misc\\ErrorNotice.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankHome.component.js",["110"],"import React, { useEffect, useContext } from \"react\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../../context/userDetailContext'\r\n\r\n\r\nfunction BankHome() {\r\n\r\n  //to prevent from loading if user is log out\r\n  const { userLoginData } = useContext(UserContext)\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!userLoginData.userData)\r\n      history.push('/')\r\n\r\n  }, [userLoginData])\r\n\r\n  return (\r\n    <HomeContainer>\r\n      <div class=\"body\">\r\n        <h1>Alerts</h1>\r\n        <p>Less than 10% stock of B+ remain</p>\r\n\r\n        <table class=\"table table-striped\">\r\n          <thead class=\"thead\">\r\n            <tr>\r\n              <th scope=\"col\">ID</th>\r\n              <th scope=\"col\">NAME</th>\r\n              <th scope=\"col\">BLOOD GROUP</th>\r\n              <th scope=\"col\">DATE DONATED</th>\r\n              <th scope=\"col\">DATE EXPIRED</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"row\">1</th>\r\n              <td>abc</td>\r\n              <td>B+</td>\r\n              <td>11/02/2019</td>\r\n              <td>11/02/2020</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">2</th>\r\n              <td>xyz</td>\r\n              <td>A+</td>\r\n              <td>11/03/2019</td>\r\n              <td>11/03/2020</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">3</th>\r\n              <td>klm</td>\r\n              <td>AB+</td>\r\n              <td>11/04/2019</td>\r\n              <td>11/04/2020</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">4</th>\r\n              <td>123</td>\r\n              <td>O-</td>\r\n              <td>11/05/2019</td>\r\n              <td>11/05/2020</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">5</th>\r\n              <td>mnh</td>\r\n              <td>A-</td>\r\n              <td>11/05/2019</td>\r\n              <td>11/05/2020</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </HomeContainer>\r\n  )\r\n}\r\nexport default BankHome;\r\n\r\nconst HomeContainer = styled.div`\r\n.thead{\r\n    background-color:Black;\r\n    color:white;\r\n    font-weight:bold;\r\n    font-size:15px;\r\n    width:50%;\r\n}\r\n.table table-striped{\r\n    width:50%;\r\n}\r\n.body{\r\n    padding-left:20%;\r\n    padding-right:10%;\r\n    padding-top:3%;\r\n}\r\n`;","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankReciever.component.js",["111"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\signup-form-Recipient.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\signup-form-Donor.component.js",[],{"ruleId":"112","severity":1,"message":"113","line":4,"column":35,"nodeType":"114","messageId":"115","endLine":4,"endColumn":41},{"ruleId":"112","severity":1,"message":"116","line":14,"column":8,"nodeType":"114","messageId":"115","endLine":14,"endColumn":15},{"ruleId":"112","severity":1,"message":"117","line":20,"column":8,"nodeType":"114","messageId":"115","endLine":20,"endColumn":23},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"118","replacedBy":"122"},{"ruleId":"120","replacedBy":"123"},{"ruleId":"118","replacedBy":"124"},{"ruleId":"120","replacedBy":"125"},{"ruleId":"112","severity":1,"message":"126","line":2,"column":17,"nodeType":"114","messageId":"115","endLine":2,"endColumn":26},{"ruleId":"118","replacedBy":"127"},{"ruleId":"120","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":16,"column":8,"nodeType":"131","endLine":16,"endColumn":23,"suggestions":"132"},{"ruleId":"129","severity":1,"message":"130","line":16,"column":8,"nodeType":"131","endLine":16,"endColumn":23,"suggestions":"133"},{"ruleId":"129","severity":1,"message":"130","line":16,"column":8,"nodeType":"131","endLine":16,"endColumn":23,"suggestions":"134"},{"ruleId":"129","severity":1,"message":"130","line":17,"column":6,"nodeType":"131","endLine":17,"endColumn":21,"suggestions":"135"},{"ruleId":"129","severity":1,"message":"130","line":16,"column":8,"nodeType":"131","endLine":16,"endColumn":23,"suggestions":"136"},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Sidebar' is defined but never used.","'SignupRecipinet' is defined but never used.","no-native-reassign",["137"],"no-negated-in-lhs",["138"],["137"],["138"],["137"],["138"],"'Component' is defined but never used.",["137"],["138"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["139"],["140"],["141"],["142"],["143"],"no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"144","fix":"146"},{"desc":"144","fix":"147"},{"desc":"144","fix":"148"},{"desc":"144","fix":"149"},"Update the dependencies array to be: [history, userLoginData]",{"range":"150","text":"151"},{"range":"152","text":"151"},{"range":"153","text":"151"},{"range":"154","text":"151"},{"range":"155","text":"151"},[474,489],"[history, userLoginData]",[474,489],[477,492],[457,472],[477,492]]