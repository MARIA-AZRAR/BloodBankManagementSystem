[{"E:\\Study\\ReactLearn\\blood-bank-system\\src\\App.js":"1","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\navbar.component.js":"2","E:\\Study\\ReactLearn\\blood-bank-system\\src\\context\\userDetailContext.js":"3","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\authButtonOptions.js":"4","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankStock.component.js":"5","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\Navbar.js":"6","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankDonor.component.js":"7","E:\\Study\\ReactLearn\\blood-bank-system\\src\\index.js":"8","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankRequest.component.js":"9","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\misc\\ErrorNotice.js":"10","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankHome.component.js":"11","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankReciever.component.js":"12","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\Footer.component.js":"13","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\SidebarDataBloodBank.js":"14","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\signup-form-bloodBank.component.js":"15","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\signup-form-Recipient.component.js":"16","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\login-form.component.js":"17","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\signup-form-Donor.component.js":"18","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\SidebarDataRecipient.js":"19","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\Sidebar.component.js":"20","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Recipient\\RecipientProfile.component.js":"21","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\login-form-admin.component.js":"22","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Donor\\DonorRequests.component.js":"23","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Donor\\DonorProfile.component.js":"24","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\SidebarDataDonor.js":"25","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\Header.component.js":"26","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Recipient\\ViewRequest.component.js":"27"},{"size":4276,"mtime":1610119670813,"results":"28","hashOfConfig":"29"},{"size":1890,"mtime":1608227863719,"results":"30","hashOfConfig":"29"},{"size":204,"mtime":1609960937164,"results":"31","hashOfConfig":"29"},{"size":1177,"mtime":1610113393110,"results":"32","hashOfConfig":"29"},{"size":3254,"mtime":1610388867697,"results":"33","hashOfConfig":"29"},{"size":940,"mtime":1610043390166,"results":"34","hashOfConfig":"29"},{"size":4636,"mtime":1610465920023,"results":"35","hashOfConfig":"29"},{"size":170,"mtime":1609836443361,"results":"36","hashOfConfig":"29"},{"size":3942,"mtime":1610388863203,"results":"37","hashOfConfig":"29"},{"size":894,"mtime":1610059042726,"results":"38","hashOfConfig":"29"},{"size":2576,"mtime":1610388898908,"results":"39","hashOfConfig":"29"},{"size":4462,"mtime":1610121741387,"results":"40","hashOfConfig":"29"},{"size":2613,"mtime":1610465721522,"results":"41","hashOfConfig":"29"},{"size":987,"mtime":1610112399892,"results":"42","hashOfConfig":"29"},{"size":6967,"mtime":1610111934776,"results":"43","hashOfConfig":"29"},{"size":8105,"mtime":1610112103753,"results":"44","hashOfConfig":"29"},{"size":4072,"mtime":1610112120261,"results":"45","hashOfConfig":"29"},{"size":9046,"mtime":1610548054492,"results":"46","hashOfConfig":"29"},{"size":983,"mtime":1610112386018,"results":"47","hashOfConfig":"29"},{"size":3317,"mtime":1610387672731,"results":"48","hashOfConfig":"29"},{"size":5217,"mtime":1610387672815,"results":"49","hashOfConfig":"29"},{"size":2446,"mtime":1610111827645,"results":"50","hashOfConfig":"29"},{"size":2356,"mtime":1610387672790,"results":"51","hashOfConfig":"29"},{"size":5285,"mtime":1610387672776,"results":"52","hashOfConfig":"29"},{"size":830,"mtime":1610387672742,"results":"53","hashOfConfig":"29"},{"size":1900,"mtime":1610387672585,"results":"54","hashOfConfig":"29"},{"size":3026,"mtime":1610387672853,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1ngak6v",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"63"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Study\\ReactLearn\\blood-bank-system\\src\\App.js",["118","119"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\navbar.component.js",[],["120","121"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\context\\userDetailContext.js",[],["122","123"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\authButtonOptions.js",[],["124","125"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankStock.component.js",["126"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\Navbar.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankDonor.component.js",["127"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\index.js",[],["128","129"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankRequest.component.js",["130"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\misc\\ErrorNotice.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankHome.component.js",["131"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankReciever.component.js",["132"],"import React, { useEffect, useContext } from \"react\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../../context/userDetailContext'\r\n\r\n\r\nfunction BankReciever() {\r\n  //to prevent from loading if user is log out\r\n  const { userLoginData } = useContext(UserContext)\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!userLoginData.userData)  //to prevent accessing while logged out\r\n      history.push('/')\r\n\r\n      try {\r\n        if (userLoginData.userData.type !== \"BloodBank\")\r\n          history.push(`/${userLoginData.userData.type}`)\r\n      } catch {\r\n        history.push('/')\r\n      }\r\n  }, [userLoginData])\r\n\r\n  return (\r\n    <BankContainer>\r\n      <div class=\"body\">\r\n        <h1>Recipients</h1>\r\n        <table class=\"table table-striped\">\r\n          <thead class=\"thead\">\r\n            <tr>\r\n              <th scope=\"col\">ID</th>\r\n              <th scope=\"col\">NAME</th>\r\n              <th scope=\"col\">AGE</th>\r\n              <th scope=\"col\">BLOOD GROUP</th>\r\n              <th scope=\"col\">ADDRESS</th>\r\n              <th scope=\"col\">CONTACT NO</th>\r\n              <th scope=\"col\">DATE</th>\r\n              <th scope=\"col\">QUANTITY</th>\r\n              <th scope=\"col\">STATUS</th>\r\n              <th scope=\"col\">ACTION</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"row\">1</th>\r\n              <td>abc</td>\r\n              <td>20</td>\r\n              <td>A+</td>\r\n              <td>22 Street House No 1</td>\r\n              <td>12345678901</td>\r\n              <td>20/11/2020</td>\r\n              <td>1</td>\r\n              <td>Active</td>\r\n              <td>\r\n                <button type=\"button\" class=\"btn btn-primary\">Update</button>\r\n                <br />\r\n                <button type=\"button\" class=\"btn btn-danger\">Delete</button></td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">2</th>\r\n              <td>xyz</td>\r\n              <td>21</td>\r\n              <td>B+</td>\r\n              <td>22 Stree\r\n          t House No 2</td>\r\n              <td>12345678900</td>\r\n              <td>20/12/2020</td>\r\n              <td>2</td>\r\n              <td>Active</td>\r\n              <td>\r\n                <button type=\"button\" class=\"btn btn-primary\">Update</button>\r\n                <br />\r\n                <button type=\"button\" class=\"btn btn-danger\">Delete</button></td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">3</th>\r\n              <td>mln</td>\r\n              <td>22</td>\r\n              <td>A-</td>\r\n              <td>22 Street House No 3</td>\r\n              <td>12345678908</td>\r\n              <td>21/12/2020</td>\r\n              <td>2</td>\r\n              <td>Active</td>\r\n              <td>\r\n                <button type=\"button\" class=\"btn btn-primary\">Update</button>\r\n                <br />\r\n                <button type=\"button\" class=\"btn btn-danger\">Delete</button></td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">4</th>\r\n              <td>123</td>\r\n              <td>25</td>\r\n              <td>B-</td>\r\n              <td>22 Street House No 4</td>\r\n              <td>12345678909</td>\r\n              <td>23/11/2020</td>\r\n              <td>2</td>\r\n              <td>Active</td>\r\n              <td>\r\n                <button type=\"button\" class=\"btn btn-primary\">Update</button>\r\n                <br />\r\n                <button type=\"button\" class=\"btn btn-danger\">Delete</button></td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">5</th>\r\n              <td>jkl</td>\r\n              <td>23</td>\r\n              <td>AB+</td>\r\n              <td>22 Street House No 5</td>\r\n              <td>12345678905</td>\r\n              <td>20/11/2020</td>\r\n              <td>1</td>\r\n              <td>Active</td>\r\n              <td>\r\n                <button type=\"button\" class=\"btn btn-primary\">Update</button>\r\n                <br />\r\n                <button type=\"button\" class=\"btn btn-danger\">Delete</button></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </BankContainer>\r\n  )\r\n}\r\n\r\nexport default BankReciever;\r\n\r\nconst BankContainer = styled.div`\r\n.thead{\r\n    background-color:Black;\r\n    color:white;\r\n    font-weight:bold;\r\n    font-size:15px;\r\n    width:50%;\r\n}\r\n.table table-striped{\r\n    width:50%;\r\n}\r\n.body{\r\n    padding-left:20%;\r\n    padding-right:10%;\r\n    padding-top:3%;\r\n}\r\n`;","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\Footer.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\SidebarDataBloodBank.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\signup-form-bloodBank.component.js",[],["133","134"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\signup-form-Recipient.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\login-form.component.js",["135"],"\r\nimport React, { Component, useState, useContext } from 'react';\r\nimport { useHistory } from \"react-router-dom\";   //after login we need to change the page\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../context/userDetailContext';  //to save data after registering\r\nimport ErrorNotice from '../misc/ErrorNotice'\r\n\r\nimport Axios from \"axios\"\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n\r\nexport default function Login() {\r\n\r\n    const [username, setUserName] = useState();\r\n    const [password, setPassword] = useState();\r\n\r\n    //for error\r\n    const [error, setError] = useState();\r\n\r\n    const { setUserLoginData } = useContext(UserContext);  //to save user_id for later use\r\n    const history = useHistory();  //to store history\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const loggedUser = { username, password };\r\n            //to login\r\n            const loginRes = await Axios.post(\"http://localhost:5000/login/accountLogin\", loggedUser);\r\n\r\n            setUserLoginData({\r\n                token: loginRes.data.token,\r\n                userData: loginRes.data.user,\r\n            });\r\n\r\n            localStorage.setItem(\"auth-token\", loginRes.data.token);\r\n            const type = loginRes.data.user.type;\r\n            history.push(`/${type}`);\r\n        } catch (err) {\r\n\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <UserLoginContainer>\r\n            <div>\r\n                <div className=\"container container-fluid\">\r\n                    <div className=\"d-flex justify-content-center h-100\">\r\n                        <div class=\"card loginCard\">\r\n                            <div className=\"card-body\">\r\n                                <h3>Sign In</h3>\r\n                                {error && (\r\n                                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\r\n                                )}\r\n                                <form>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"username\" onChange={(e) => { setUserName(e.target.value) }} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <input type=\"password\" className=\"form-control\" placeholder=\"password\" onChange={(e) => setPassword(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"submit\" value=\"Login\" className=\"btn float-right login_btn\" onClick={submit} />\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"card-footer\">\r\n                                <div className=\"d-flex justify-content-center Signup\">\r\n                                    Don't have an account?<a href=\"/signup\">Sign Up</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </UserLoginContainer>\r\n    )\r\n}\r\n\r\nconst UserLoginContainer = styled.div`\r\n\r\n@import url('https://fonts.googleapis.com/css2?family=Righteous&display=swap');\r\n\r\nhtml,body{\r\nheight: 100%;\r\n}\r\n\r\n.container{\r\nheight: 100%;\r\nalign-content: center;\r\npadding-top: 150px;\r\nfont-family: 'Righteous', cursive;\r\n}\r\n\r\n.loginCard{\r\nheight: 330px;\r\nalign-content: center;\r\nmargin: auto;\r\nwidth: 370px;\r\nbackground-color: rgba(15, 74, 92, 0.473) ;\r\n}\r\n\r\n\r\n.card-body h3{\r\ncolor: white;\r\n}\r\n\r\n\r\n.login_btn{\r\ncolor: black;\r\nbackground-color: #FFC312;\r\nwidth: 100px;\r\n}\r\n\r\n.login_btn:hover{\r\ncolor: black;\r\nbackground-color: white;\r\n}\r\n\r\n.Signup a{\r\ncolor: darkblue;\r\nmargin-left: 5px;\r\n}\r\n\r\n.Signup {\r\n    color: white;\r\n}\r\n\r\n\r\n\r\n`","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\signup-form-Donor.component.js",["136","137","138","139"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";   //after login we need to change the page\r\nimport Axios from \"axios\"\r\nimport styled from 'styled-components';\r\n\r\nimport UserContext from '../../context/userDetailContext';  //to save data after registering\r\nimport ErrorNotice from '../misc/ErrorNotice'\r\n\r\n\r\nexport default function SignupBloodBank() {\r\n\r\n    const [name, setName] = useState();\r\n    const [address, setAddress] = useState();\r\n    const [contact, setContact] = useState();\r\n    const [age, setAge] = useState();\r\n    const [bloodGroup, setBloodGroup] = useState();\r\n    const [bloodBank, setBloodBank] = useState();\r\n    const [username, setUserName] = useState();\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [confirmPassword, setConfirmPassword] = useState();\r\n\r\n    //for drop down\r\n    const [dropDownItems, setDropDownItems] = useState();\r\n\r\n    //for error\r\n    const [error, setError] = useState();\r\n\r\n    const { setUserLoginData } = useContext(UserContext);  //to save user_id for later use\r\n    const history = useHistory();  //to store history\r\n\r\n\r\n    // const getDropdownData = async () => {\r\n    //     let items = await Axios.get(\"http://localhost:5000/user/banksDropDown\"); //get all blood banks \r\n    //     setDropDownItems(items.data);\r\n    //     console.log(items.data);\r\n    // }\r\n\r\n    // getDropdownData();\r\n\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const type = \"Donor\";\r\n            const newUser = { name, address, contact, age, bloodGroup, bloodBank, username, email, type, password, confirmPassword };\r\n            await Axios.post(\"http://localhost:5000/user/addUser\", newUser);  //user and its login data in diff tables\r\n            await Axios.post(\"http://localhost:5000/login/addLogin\", newUser);\r\n\r\n            //registred but to store id in context we need to login\r\n            const loginRes = await Axios.post(\"http://localhost:5000/login/accountLogin\", {\r\n                username,\r\n                password,\r\n            });\r\n\r\n            setUserLoginData({\r\n                token: loginRes.data.token,\r\n                userData: loginRes.data.user,\r\n            });\r\n\r\n            localStorage.setItem(\"auth-token\", loginRes.data.token);\r\n            history.push(\"/Donor\");\r\n        } catch (err) {\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n    };\r\n\r\n    const BloodBank = () => {\r\n        history.push(\"/signup\")\r\n    };\r\n\r\n    const Donor = () => {\r\n        history.push(\"/signup-donor\")\r\n    };\r\n\r\n    const Recipient = () => {\r\n        history.push(\"/signup-recipient\")\r\n    };\r\n\r\n    return (\r\n        <SignupContainer>\r\n            <div>\r\n                <div className=\"container container-fluid\">\r\n                    <div className=\"d-flex justify-content-center h-100\">\r\n                        <div class=\"card signupCard\">\r\n                            <div className=\"card-header\">\r\n                                <div class=\"btn-group ButtonGroup nav nav-tabs card-header-tabs\" role=\"group\" aria-label=\"Basic example\">\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-info\" onClick={BloodBank}>BloodBank</button>\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-info\" onClick={Donor}>Donor</button>\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-info\" onClick={Recipient}>Reciever</button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <h3>Registeration</h3>\r\n                                {error && (\r\n                                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\r\n                                )}\r\n                                <form>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <input type=\"text\" className=\"form-control\"\r\n                                            placeholder=\"Name\" onChange={(e) => setName(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <input type=\"text\" className=\"form-control\"\r\n                                            placeholder=\"Address\" onChange={(e) => setAddress(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <input type=\"text\" className=\"form-control\"\r\n                                            placeholder=\"Age\" onChange={(e) => setAge(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <input type=\"text\" className=\"form-control\"\r\n                                            placeholder=\"Blood Group\" onChange={(e) => setBloodGroup(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <input type=\"text\" className=\"form-control\"\r\n                                            placeholder=\"Blood Bank\" onChange={(e) => setBloodBank(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <input type=\"text\" className=\"form-control\"\r\n                                            placeholder=\"Contact No\" onChange={(e) => setContact(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <input type=\"text\" className=\"form-control\"\r\n                                            placeholder=\"Username\" onChange={(e) => setUserName(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <input type=\"email\" className=\"form-control\"\r\n                                            placeholder=\"Email\" onChange={(e) => setEmail(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <input type=\"password\" className=\"form-control\"\r\n                                            placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <input type=\"password\" className=\"form-control\"\r\n                                            placeholder=\"Confirm Password\" onChange={(e) => setConfirmPassword(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"submit\" value=\"Sign up\" className=\"btn float-right login_btn\" onClick={submit} />\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </SignupContainer>\r\n    )\r\n}\r\n\r\n\r\n{/* <div className=\"input-group form-group\">\r\n                                        <select onChange={(e) => setBloodBank(e.target.value)}>\r\n                                            {dropDownItems.map(item => {\r\n                                                return (\r\n                                                    <option value={item}> {item} </option>\r\n                                                )\r\n                                            })}\r\n                                        </select>\r\n                                    </div> */}\r\n\r\nconst SignupContainer = styled.div`\r\n\r\n@import url('https://fonts.googleapis.com/css2?family=Righteous&display=swap');\r\n\r\nhtml,body{\r\nheight: 100%;\r\n}\r\n\r\nlabel {\r\npadding-right: 20px;\r\n}\r\n.container{\r\nheight: 100%;\r\nalign-content: center;\r\npadding-top: 150px;\r\nfont-family: 'Righteous', cursive;\r\n}\r\n\r\n.signupCard{\r\nheight: 765px;\r\nalign-content: center;\r\nmargin: auto;\r\nwidth: 500px;\r\nbackground-color: rgba(15, 74, 92, 0.473) ;\r\n}\r\n\r\n.card-header {\r\nbackground-color: white;\r\n}\r\n.card-body h3{\r\ncolor: white;\r\n}\r\n\r\n\r\n.login_btn{\r\ncolor: black;\r\nbackground-color: #FFC312;\r\nwidth: 100px;\r\n}\r\n\r\n.login_btn:hover{\r\ncolor: black;\r\nbackground-color: white;\r\n}\r\n\r\n.ButtonGroup {\r\n    margin: auto;\r\n    justify-content: center;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n`","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\SidebarDataRecipient.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\Sidebar.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Recipient\\RecipientProfile.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\login-form-admin.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Donor\\DonorRequests.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Donor\\DonorProfile.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\SidebarDataDonor.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\Header.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Recipient\\ViewRequest.component.js",[],{"ruleId":"140","severity":1,"message":"141","line":4,"column":35,"nodeType":"142","messageId":"143","endLine":4,"endColumn":41},{"ruleId":"140","severity":1,"message":"144","line":23,"column":8,"nodeType":"142","messageId":"143","endLine":23,"endColumn":14},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"145","replacedBy":"149"},{"ruleId":"147","replacedBy":"150"},{"ruleId":"145","replacedBy":"151"},{"ruleId":"147","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":22,"column":6,"nodeType":"155","endLine":22,"endColumn":21,"suggestions":"156"},{"ruleId":"153","severity":1,"message":"154","line":23,"column":6,"nodeType":"155","endLine":23,"endColumn":21,"suggestions":"157"},{"ruleId":"145","replacedBy":"158"},{"ruleId":"147","replacedBy":"159"},{"ruleId":"153","severity":1,"message":"154","line":24,"column":6,"nodeType":"155","endLine":24,"endColumn":21,"suggestions":"160"},{"ruleId":"153","severity":1,"message":"154","line":22,"column":6,"nodeType":"155","endLine":22,"endColumn":21,"suggestions":"161"},{"ruleId":"153","severity":1,"message":"154","line":22,"column":6,"nodeType":"155","endLine":22,"endColumn":21,"suggestions":"162"},{"ruleId":"145","replacedBy":"163"},{"ruleId":"147","replacedBy":"164"},{"ruleId":"140","severity":1,"message":"165","line":2,"column":17,"nodeType":"142","messageId":"143","endLine":2,"endColumn":26},{"ruleId":"140","severity":1,"message":"166","line":1,"column":39,"nodeType":"142","messageId":"143","endLine":1,"endColumn":48},{"ruleId":"140","severity":1,"message":"167","line":24,"column":12,"nodeType":"142","messageId":"143","endLine":24,"endColumn":25},{"ruleId":"140","severity":1,"message":"168","line":24,"column":27,"nodeType":"142","messageId":"143","endLine":24,"endColumn":43},{"ruleId":"169","severity":1,"message":"170","line":153,"column":1,"nodeType":"171","messageId":"172","endLine":161,"endColumn":47},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Footer' is defined but never used.","no-native-reassign",["173"],"no-negated-in-lhs",["174"],["173"],["174"],["173"],["174"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["175"],["176"],["173"],["174"],["177"],["178"],["179"],["173"],["174"],"'Component' is defined but never used.","'useEffect' is defined but never used.","'dropDownItems' is assigned a value but never used.","'setDropDownItems' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},{"desc":"180","fix":"182"},{"desc":"180","fix":"183"},{"desc":"180","fix":"184"},{"desc":"180","fix":"185"},"Update the dependencies array to be: [history, userLoginData]",{"range":"186","text":"187"},{"range":"188","text":"187"},{"range":"189","text":"187"},{"range":"190","text":"187"},{"range":"191","text":"187"},[669,684],"[history, userLoginData]",[632,647],[676,691],[653,668],[683,698]]