[{"E:\\Study\\ReactLearn\\blood-bank-system\\src\\App.js":"1","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\navbar.component.js":"2","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\Sidebar.component.js":"3","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\SidebarDataBloodBank.js":"4","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\signup-form-bloodBank.component.js":"5","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\login-form.component.js":"6","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\Header.component.js":"7","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\Footer.component.js":"8","E:\\Study\\ReactLearn\\blood-bank-system\\src\\context\\userDetailContext.js":"9","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\login-form-admin.component.js":"10","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\authButtonOptions.js":"11","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankNavbar.component.js":"12","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankStock.component.js":"13","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\Navbar.js":"14","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankDonor.component.js":"15","E:\\Study\\ReactLearn\\blood-bank-system\\src\\index.js":"16","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankRequest.component.js":"17"},{"size":4090,"mtime":1610053619980,"results":"18","hashOfConfig":"19"},{"size":1890,"mtime":1608227863719,"results":"20","hashOfConfig":"19"},{"size":2660,"mtime":1610043257876,"results":"21","hashOfConfig":"19"},{"size":986,"mtime":1608227919432,"results":"22","hashOfConfig":"19"},{"size":6220,"mtime":1610054020353,"results":"23","hashOfConfig":"19"},{"size":4478,"mtime":1610054255750,"results":"24","hashOfConfig":"19"},{"size":993,"mtime":1609949098334,"results":"25","hashOfConfig":"19"},{"size":2491,"mtime":1610040944085,"results":"26","hashOfConfig":"19"},{"size":204,"mtime":1609960937164,"results":"27","hashOfConfig":"19"},{"size":2446,"mtime":1608227789689,"results":"28","hashOfConfig":"19"},{"size":1170,"mtime":1610053919904,"results":"29","hashOfConfig":"19"},{"size":1897,"mtime":1609836192666,"results":"30","hashOfConfig":"19"},{"size":2845,"mtime":1609836192675,"results":"31","hashOfConfig":"19"},{"size":940,"mtime":1610043390166,"results":"32","hashOfConfig":"19"},{"size":4100,"mtime":1609836192660,"results":"33","hashOfConfig":"19"},{"size":170,"mtime":1609836443361,"results":"34","hashOfConfig":"19"},{"size":3569,"mtime":1609836192672,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},"1ngak6v",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Study\\ReactLearn\\blood-bank-system\\src\\App.js",["75","76","77"],"import React, { useState, useEffect } from 'react';  //useEffect will run exactly 1 time \n//when component loaded or each time component has been switched \n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Axios from 'axios';\n\n//Blood Bank\nimport BankHome from './Components/pages/BloodBank/BankHome.component';\nimport BankNavbar from './Components/pages/BloodBank/BankNavbar.component';\nimport BankDonor from './Components/pages/BloodBank/BankDonor.component';\nimport BankReciever from './Components/pages/BloodBank/BankReciever.component';\nimport BankRequest from './Components/pages/BloodBank/BankRequest.component';\nimport BankStock from './Components/pages/BloodBank/BankStock.component';\nimport Sidebar from './Components/Sidebar.component';\n\nimport Login from './Components/login-form.component';\nimport LoginAdmin from './Components/login-form-admin.component';\nimport SignupBloodBank from './Components/signup-form-bloodBank.component';\n\n//import Navbar from './Components/navbar.component';\nimport Header from './Components/Header.component';\nimport Footer from './Components/Footer.component';\nimport Navbar from './Components/layout/Navbar'\n\n//extras\nimport UserContext from './context/userDetailContext';\n\nfunction App() {\n\n  const [userLoginData, setUserLoginData] = useState({  //this state will store the user data needed in all app like id\n    token: undefined,\n    userData: undefined,\n  });\n\n  //now we need to get the token from the session if any and check if its valid or not to login the user\n  useEffect(() => {  //useEffect needs arrow func which can't be async \n    const checkUserLogin = async () => {  //data is required to be accssed from backend so async thats why another fun is created in usecase arroe func\n      let sessionToken = localStorage.getItem(\"auth-token\"); //if no key with this name w'll get a null in session token\n         console.log(sessionToken);\n      if (sessionToken === null) {  //a null session token can erase error at the backend \n        localStorage.setItem(\"auth-token\", \"\")  //adding key in local storage & value will be given later\n        sessionToken = \"\"   //so assigning it the empty string\n      }\n      //now checkiing if user is logged in by giving a post request to if token is valid\n      const tokenResponse = await Axios.post(\n        \"http://localhost:5000/login/IsValidToken\",\n        null,\n        {\n          headers: { \"auth-token\": sessionToken }\n        });  //data is null but it has a header which will have a token\n\n      if (tokenResponse.data) {  //true if user logged in\n        const userResponse = await Axios.get(\"http://localhost:5000/login/\", {\n          headers: { \"auth-token\": sessionToken }\n        });\n\n        setUserLoginData({\n          sessionToken,\n          userData: userResponse.data,\n        });\n      }\n    }\n\n    checkUserLogin();\n  }, []) //[] empty array means this useEffect will run exactly one time\n\n  //          <Route path=\"/\" component={Sidebar} />\n  //          <Route path=\"/BloodBank\" component={BankNavbar} />\n  //          <Route path=\"/\" exact component={Navbar} />\n\n\n\n  return (\n    <>\n      <Header />\n      <UserContext.Provider value={{ userLoginData, setUserLoginData }}>\n        <Router>\n          <Navbar />\n          <Route path=\"/signup\" exact component={SignupBloodBank} />\n          <Route path=\"/Admin\" exact component={LoginAdmin} />\n          <Route path=\"/signin\" exact component={Login} />\n          <Route path=\"/BloodBank\" exact component={BankHome} />\n          <Route path=\"/BloodBank/Donor\" exact component={BankDonor} />\n          <Route path=\"/BloodBank/Reciever\" exact component={BankReciever} />\n          <Route path=\"/BloodBank/Request\" exact component={BankRequest} />\n          <Route path=\"/BloodBank/Stock\" exact component={BankStock} />\n        </Router>\n      </UserContext.Provider>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n\n//        \n\n\n//import './App.css';\n\n\n\n/*\n <Navbar />\n      <SignupBloodBank />\n      <Login/>\n      <LoginAdmin />\n*/","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\navbar.component.js",[],["78","79"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\Sidebar.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\SidebarDataBloodBank.js",[],["80","81"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\signup-form-bloodBank.component.js",["82"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\login-form.component.js",["83","84","85","86"],"\r\nimport React, { Component, useState, useContext } from 'react';\r\nimport { useHistory } from \"react-router-dom\";   //after login we need to change the page\r\nimport styled from 'styled-components';\r\nimport UserContext from '../context/userDetailContext';  //to save data after registering\r\nimport Axios from \"axios\"\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n\r\nexport default function Login() {\r\n\r\n    const [username, setUserName] = useState();\r\n    const [password, setPassword] = useState();\r\n\r\n    const { setUserLoginData } = useContext(UserContext);  //to save user_id for later use\r\n    const history = useHistory();  //to store history\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const newUser = { username, password };\r\n        await Axios.post(\"http://localhost:5000/user/addUser\", newUser);  //user and its login data in diff tables\r\n        await Axios.post(\"http://localhost:5000/login/addLogin\", newUser);\r\n\r\n        //registred but to store id in context we need to login\r\n        const loginRes = await Axios.post(\"http://localhost:5000/login/accountLogin\", {\r\n            username,\r\n            password,\r\n        });\r\n\r\n        setUserLoginData({\r\n            token: loginRes.data.token,\r\n            userData: loginRes.data.user,\r\n        });\r\n\r\n        localStorage.setItem(\"auth-token\", loginRes.data.token);\r\n        history.push(\"/BloodBank\");\r\n    };\r\n\r\n    return (\r\n        <UserLoginContainer>\r\n            <div>\r\n                <div className=\"container container-fluid\">\r\n                    <div className=\"d-flex justify-content-center h-100\">\r\n                        <div class=\"card loginCard\">\r\n                            <div className=\"card-header\">\r\n                                <div class=\"btn-group ButtonGroup nav nav-tabs card-header-tabs\" role=\"group\" aria-label=\"Basic example\">\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-info\">BloodBank</button>\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-info\">Donor</button>\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-info\">Reciever</button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <h3>Sign In</h3>\r\n                                <form>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"username\" required />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <input type=\"password\" className=\"form-control\" placeholder=\"password\" required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"submit\" value=\"Login\" className=\"btn float-right login_btn\" />\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"card-footer\">\r\n                                <div className=\"d-flex justify-content-center Signup\">\r\n                                    Don't have an account?<a href=\"/signup\">Sign Up</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </UserLoginContainer>\r\n    )\r\n}\r\n\r\nconst UserLoginContainer = styled.div`\r\n\r\n@import url('https://fonts.googleapis.com/css2?family=Righteous&display=swap');\r\n\r\nhtml,body{\r\nheight: 100%;\r\n}\r\n\r\n.container{\r\nheight: 100%;\r\nalign-content: center;\r\npadding-top: 150px;\r\nfont-family: 'Righteous', cursive;\r\n}\r\n\r\n.loginCard{\r\nheight: 340px;\r\nalign-content: center;\r\nmargin: auto;\r\nwidth: 370px;\r\nbackground-color: rgba(15, 74, 92, 0.473) ;\r\n}\r\n\r\n.card-header {\r\n    background-color: white;\r\n}\r\n.card-body h3{\r\ncolor: white;\r\n}\r\n\r\n\r\n.login_btn{\r\ncolor: black;\r\nbackground-color: #FFC312;\r\nwidth: 100px;\r\n}\r\n\r\n.login_btn:hover{\r\ncolor: black;\r\nbackground-color: white;\r\n}\r\n\r\n.Signup a{\r\ncolor: darkblue;\r\nmargin-left: 5px;\r\n}\r\n\r\n.Signup {\r\n    color: white;\r\n}\r\n\r\n.ButtonGroup {\r\n    margin: auto;\r\n    justify-content: center;\r\n}\r\n\r\n`","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\Header.component.js",[],["87","88"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\Footer.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\context\\userDetailContext.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\login-form-admin.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\authButtonOptions.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankNavbar.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankStock.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\Navbar.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankDonor.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\index.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankRequest.component.js",[],{"ruleId":"89","severity":1,"message":"90","line":4,"column":35,"nodeType":"91","messageId":"92","endLine":4,"endColumn":41},{"ruleId":"89","severity":1,"message":"93","line":10,"column":8,"nodeType":"91","messageId":"92","endLine":10,"endColumn":18},{"ruleId":"89","severity":1,"message":"94","line":15,"column":8,"nodeType":"91","messageId":"92","endLine":15,"endColumn":15},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"95","replacedBy":"99"},{"ruleId":"97","replacedBy":"100"},{"ruleId":"89","severity":1,"message":"101","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":26},{"ruleId":"89","severity":1,"message":"101","line":2,"column":17,"nodeType":"91","messageId":"92","endLine":2,"endColumn":26},{"ruleId":"89","severity":1,"message":"102","line":13,"column":22,"nodeType":"91","messageId":"92","endLine":13,"endColumn":33},{"ruleId":"89","severity":1,"message":"103","line":14,"column":22,"nodeType":"91","messageId":"92","endLine":14,"endColumn":33},{"ruleId":"89","severity":1,"message":"104","line":19,"column":11,"nodeType":"91","messageId":"92","endLine":19,"endColumn":17},{"ruleId":"95","replacedBy":"105"},{"ruleId":"97","replacedBy":"106"},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'BankNavbar' is defined but never used.","'Sidebar' is defined but never used.","no-native-reassign",["107"],"no-negated-in-lhs",["108"],["107"],["108"],"'Component' is defined but never used.","'setUserName' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'submit' is assigned a value but never used.",["107"],["108"],"no-global-assign","no-unsafe-negation"]