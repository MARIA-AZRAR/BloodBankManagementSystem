[{"C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\index.js":"1","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\App.js":"2","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\auth\\login-form-admin.component.js":"3","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\auth\\signup-form-bloodBank.component.js":"4","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\auth\\signup-form-Recipient.component.js":"5","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\auth\\signup-form-Donor.component.js":"6","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\layout\\OurVision.component.js":"7","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\pages\\BloodBank\\BankHome.component.js":"8","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\auth\\login-form.component.js":"9","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\pages\\BloodBank\\BankReciever.component.js":"10","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\pages\\BloodBank\\BankRequest.component.js":"11","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\pages\\BloodBank\\BankStock.component.js":"12","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\context\\userDetailContext.js":"13","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\layout\\Header.component.js":"14","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\pages\\Recipient\\ViewRequest.component.js":"15","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\layout\\Footer.component.js":"16","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\pages\\Recipient\\SendRequest.component.js":"17","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\pages\\Recipient\\SearchDonor.component.js":"18","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\pages\\Recipient\\RecipientProfile.component.js":"19","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\pages\\BloodBank\\BankDonor.component.js":"20","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\pages\\Donor\\DonorMakeDonations.component.js":"21","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\layout\\Navbar.js":"22","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\pages\\Donor\\DonorDonations.component.js":"23","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\pages\\Donor\\DonorRequests.component.js":"24","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\pages\\Donor\\DonorProfile.component.js":"25","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\auth\\authButtonOptions.js":"26","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\misc\\ErrorNotice.js":"27","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\context\\BloodGroupsList.js":"28","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\layout\\Sidebar.component.js":"29","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\layout\\SidebarDataDonor.js":"30","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\layout\\SidebarDataBloodBank.js":"31","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\layout\\SidebarDataRecipient.js":"32"},{"size":170,"mtime":1610989204190,"results":"33","hashOfConfig":"34"},{"size":5587,"mtime":1610989204159,"results":"35","hashOfConfig":"34"},{"size":2446,"mtime":1610989204159,"results":"36","hashOfConfig":"34"},{"size":6967,"mtime":1610989204174,"results":"37","hashOfConfig":"34"},{"size":9291,"mtime":1610989204174,"results":"38","hashOfConfig":"34"},{"size":9266,"mtime":1610989204174,"results":"39","hashOfConfig":"34"},{"size":2196,"mtime":1610989204174,"results":"40","hashOfConfig":"34"},{"size":2576,"mtime":1610989204174,"results":"41","hashOfConfig":"34"},{"size":4086,"mtime":1610989204174,"results":"42","hashOfConfig":"34"},{"size":4720,"mtime":1610989204174,"results":"43","hashOfConfig":"34"},{"size":3942,"mtime":1610989204174,"results":"44","hashOfConfig":"34"},{"size":3254,"mtime":1610989204190,"results":"45","hashOfConfig":"34"},{"size":204,"mtime":1610989204190,"results":"46","hashOfConfig":"34"},{"size":1900,"mtime":1610989204174,"results":"47","hashOfConfig":"34"},{"size":2999,"mtime":1610989358348,"results":"48","hashOfConfig":"34"},{"size":2613,"mtime":1610989204174,"results":"49","hashOfConfig":"34"},{"size":3517,"mtime":1610989204190,"results":"50","hashOfConfig":"34"},{"size":3939,"mtime":1611057642317,"results":"51","hashOfConfig":"34"},{"size":5217,"mtime":1610989204190,"results":"52","hashOfConfig":"34"},{"size":4636,"mtime":1610989204174,"results":"53","hashOfConfig":"34"},{"size":4473,"mtime":1610989204190,"results":"54","hashOfConfig":"34"},{"size":940,"mtime":1610989204174,"results":"55","hashOfConfig":"34"},{"size":2953,"mtime":1610989204190,"results":"56","hashOfConfig":"34"},{"size":2951,"mtime":1610989204190,"results":"57","hashOfConfig":"34"},{"size":12637,"mtime":1610989204190,"results":"58","hashOfConfig":"34"},{"size":1177,"mtime":1610989204159,"results":"59","hashOfConfig":"34"},{"size":894,"mtime":1610989204174,"results":"60","hashOfConfig":"34"},{"size":75,"mtime":1610989204190,"results":"61","hashOfConfig":"34"},{"size":3317,"mtime":1610989204174,"results":"62","hashOfConfig":"34"},{"size":830,"mtime":1610989204174,"results":"63","hashOfConfig":"34"},{"size":987,"mtime":1610989204174,"results":"64","hashOfConfig":"34"},{"size":965,"mtime":1610989204174,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1tyfcc2",{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"68"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\index.js",[],["142","143"],"C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\App.js",["144"],"import React, { useState, useEffect } from 'react';  //useEffect will run exactly 1 time \n//when component loaded or each time component has been switched \n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Axios from 'axios';\n\n//Blood Bank\nimport BankHome from './Components/pages/BloodBank/BankHome.component';\nimport BankDonor from './Components/pages/BloodBank/BankDonor.component';\nimport BankReciever from './Components/pages/BloodBank/BankReciever.component';\nimport BankRequest from './Components/pages/BloodBank/BankRequest.component';\nimport BankStock from './Components/pages/BloodBank/BankStock.component';\n\nimport Login from './Components/auth/login-form.component';\nimport LoginAdmin from './Components/auth/login-form-admin.component';\nimport SignupBloodBank from './Components/auth/signup-form-bloodBank.component';\nimport {SignupDonor} from './Components/auth/signup-form-Donor.component';\nimport {SignupRecipinet} from './Components/auth/signup-form-Recipient.component';\n\n//import Navbar from './Components/navbar.component';\nimport Header from './Components/layout/Header.component';\nimport Footer from './Components/layout/Footer.component';\nimport Navbar from './Components/layout/Navbar'\nimport AboutUs from './Components/layout/OurVision.component';\n\n//extras\nimport UserContext from './context/userDetailContext';\n\n//Donor\n\nimport DonorDonations from './Components/pages/Donor/DonorDonations.component';\nimport DonorRequests from './Components/pages/Donor/DonorRequests.component';\nimport DonorMakeDonations from './Components/pages/Donor/DonorMakeDonations.component';\nimport DonorProfile from './Components/pages/Donor/DonorProfile.component';\n\n\n//Recipient\n\n\nimport RecipientSendRequest from './Components/pages/Recipient/SendRequest.component';\nimport SearchDonor  from './Components/pages/Recipient/SearchDonor.component';\nimport RecipientRequests from './Components/pages/Recipient/ViewRequest.component';\nimport RecipientProfile from './Components/pages/Recipient/RecipientProfile.component';\n\n\n\nfunction App() {\n\n  const [userLoginData, setUserLoginData] = useState({  //this state will store the user data needed in all app like id\n    token: undefined,\n    userData: undefined\n  });\n\n  //now we need to get the token from the session if any and check if its valid or not to login the user\n  useEffect(() => {  //useEffect needs arrow func which can't be async \n    const checkUserLogin = async () => {  //data is required to be accssed from backend so async thats why another fun is created in usecase arroe func\n      let sessionToken = localStorage.getItem(\"auth-token\"); //if no key with this name w'll get a null in session token\n         console.log(sessionToken);\n      if (sessionToken === null) {  //a null session token can erase error at the backend \n        localStorage.setItem(\"auth-token\", \"\")  //adding key in local storage & value will be given later\n        sessionToken = \"\"   //so assigning it the empty string\n      }\n      //now checkiing if user is logged in by giving a post request to if token is valid\n      const tokenResponse = await Axios.post(\n        \"http://localhost:5000/login/IsValidToken\",\n        null,\n        {\n          headers: { \"auth-token\": sessionToken }\n        });  //data is null but it has a header which will have a token\n\n      if (tokenResponse.data) {  //true if user logged in\n        const userResponse = await Axios.get(\"http://localhost:5000/login/\", {\n          headers: { \"auth-token\": sessionToken }\n        });\n\n        setUserLoginData({\n          token: sessionToken,\n          userData: userResponse.data\n        });\n      }\n    }\n    checkUserLogin();\n  }, []) \n\n  return (\n    <>\n      <Header />\n      <UserContext.Provider value={{ userLoginData, setUserLoginData }}>\n        <Router>\n          <Navbar />\n          <Route path=\"/\" exact component={AboutUs} />\n          <Route path=\"/signup\" exact component={SignupBloodBank} />\n\n          <Route path=\"/Admin\" exact component={LoginAdmin} />\n          <Route path=\"/signin\" exact component={Login} />\n          <Route path=\"/signup-donor\" exact component = {SignupDonor} />\n          <Route path=\"/signup-recipient\" exact component = {SignupRecipinet}/>\n          <Route path=\"/BloodBank\" exact component={BankHome} />\n          <Route path=\"/BloodBank/Donor\" exact component={BankDonor} />\n          <Route path=\"/BloodBank/Reciever\" exact component={BankReciever} />\n          <Route path=\"/BloodBank/Request\" exact component={BankRequest} />\n          <Route path=\"/BloodBank/Stock\" exact component={BankStock} />\n\n    \n          <Route path=\"/Donor\" exact component={DonorDonations} />\n          <Route path=\"/Donor/Requests\" exact component={DonorRequests} />\n          <Route path=\"/Donor/MakeDonations\" exact component={DonorMakeDonations} />\n          <Route path=\"/Donor/Profile\" exact component={DonorProfile} />\n\n          <Route path=\"/Recipient\" exact component={RecipientSendRequest} />\n          <Route path=\"/Recipient/SendRequest\" exact component={RecipientSendRequest} />\n          <Route path=\"/Recipient/Request\" exact component={RecipientRequests} />\n          <Route path=\"/Recipient/SearchDonor\" exact component={SearchDonor} />\n          <Route path=\"/Recipient/Profile\" exact component={RecipientProfile} />\n        </Router>\n        <Footer />\n      </UserContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n\n//        \n\n\n//import './App.css';\n\n\n\n/*\n <Navbar />\n      <SignupBloodBank />\n      <Login/>\n      <LoginAdmin />\n*/","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\auth\\login-form-admin.component.js",[],"C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\auth\\signup-form-bloodBank.component.js",[],"C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\auth\\signup-form-Recipient.component.js",[],"C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\auth\\signup-form-Donor.component.js",[],"C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\layout\\OurVision.component.js",[],"C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\pages\\BloodBank\\BankHome.component.js",["145"],"import React, { useEffect, useContext } from \"react\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../../context/userDetailContext'\r\n\r\n\r\nfunction BankHome() {\r\n\r\n  //to prevent from loading if user is log out\r\n  const { userLoginData } = useContext(UserContext)\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!userLoginData.userData)\r\n      history.push('/')\r\n\r\n    if (userLoginData.userData) {\r\n      if (userLoginData.userData.type !== \"BloodBank\")  //to prevent accessing any other type\r\n        history.push(`/${userLoginData.userData.type}`)\r\n    }\r\n\r\n  }, [userLoginData])\r\n\r\n  return (\r\n    <HomeContainer>\r\n      <div class=\"body\">\r\n        <h1>Alerts</h1>\r\n        <p>Less than 10% stock of B+ remain</p>\r\n\r\n        <table class=\"table table-striped\">\r\n          <thead class=\"thead\">\r\n            <tr>\r\n              <th scope=\"col\">ID</th>\r\n              <th scope=\"col\">NAME</th>\r\n              <th scope=\"col\">BLOOD GROUP</th>\r\n              <th scope=\"col\">DATE DONATED</th>\r\n              <th scope=\"col\">DATE EXPIRED</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"row\">1</th>\r\n              <td>abc</td>\r\n              <td>B+</td>\r\n              <td>11/02/2019</td>\r\n              <td>11/02/2020</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">2</th>\r\n              <td>xyz</td>\r\n              <td>A+</td>\r\n              <td>11/03/2019</td>\r\n              <td>11/03/2020</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">3</th>\r\n              <td>klm</td>\r\n              <td>AB+</td>\r\n              <td>11/04/2019</td>\r\n              <td>11/04/2020</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">4</th>\r\n              <td>123</td>\r\n              <td>O-</td>\r\n              <td>11/05/2019</td>\r\n              <td>11/05/2020</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">5</th>\r\n              <td>mnh</td>\r\n              <td>A-</td>\r\n              <td>11/05/2019</td>\r\n              <td>11/05/2020</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </HomeContainer>\r\n  )\r\n}\r\nexport default BankHome;\r\n\r\nconst HomeContainer = styled.div`\r\n.thead{\r\n    background-color:Black;\r\n    color:white;\r\n    font-weight:bold;\r\n    font-size:15px;\r\n    width:50%;\r\n}\r\n.table table-striped{\r\n    width:50%;\r\n}\r\n.body{\r\n    padding-left:20%;\r\n    padding-right:10%;\r\n    padding-top:3%;\r\n}\r\n`;","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\auth\\login-form.component.js",["146","147"],"\r\nimport React, { Component, useState, useContext } from 'react';\r\nimport { useHistory } from \"react-router-dom\";   //after login we need to change the page\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../context/userDetailContext';  //to save data after registering\r\nimport ErrorNotice from '../misc/ErrorNotice'\r\n\r\nimport Axios from \"axios\"\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n\r\nexport default function Login() {\r\n\r\n    const [username, setUserName] = useState();\r\n    const [password, setPassword] = useState();\r\n\r\n    //for error\r\n    const [error, setError] = useState();\r\n\r\n    const { userLoginData,setUserLoginData } = useContext(UserContext);  //to save user_id for later use\r\n    const history = useHistory();  //to store history\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const loggedUser = { username, password };\r\n            //to login\r\n            const loginRes = await Axios.post(\"http://localhost:5000/login/accountLogin\", loggedUser);\r\n\r\n            setUserLoginData({\r\n                token: loginRes.data.token,\r\n                userData: loginRes.data.user,\r\n            });\r\n\r\n            localStorage.setItem(\"auth-token\", loginRes.data.token);\r\n            const type = loginRes.data.user.type;\r\n            history.push(`/${type}`);\r\n        } catch (err) {\r\n\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <UserLoginContainer>\r\n            <div>\r\n                <div className=\"container container-fluid\">\r\n                    <div className=\"d-flex justify-content-center h-100\">\r\n                        <div class=\"card loginCard\">\r\n                            <div className=\"card-body\">\r\n                                <h3>Sign In</h3>\r\n                                {error && (\r\n                                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\r\n                                )}\r\n                                <form>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"username\" onChange={(e) => { setUserName(e.target.value) }} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <input type=\"password\" className=\"form-control\" placeholder=\"password\" onChange={(e) => setPassword(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"submit\" value=\"Login\" className=\"btn float-right login_btn\" onClick={submit} />\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"card-footer\">\r\n                                <div className=\"d-flex justify-content-center Signup\">\r\n                                    Don't have an account?<a href=\"/signup\">Sign Up</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </UserLoginContainer>\r\n    )\r\n}\r\n\r\nconst UserLoginContainer = styled.div`\r\n\r\n@import url('https://fonts.googleapis.com/css2?family=Righteous&display=swap');\r\n\r\nhtml,body{\r\nheight: 100%;\r\n}\r\n\r\n.container{\r\nheight: 100%;\r\nalign-content: center;\r\npadding-top: 150px;\r\nfont-family: 'Righteous', cursive;\r\n}\r\n\r\n.loginCard{\r\nheight: 330px;\r\nalign-content: center;\r\nmargin: auto;\r\nwidth: 370px;\r\nbackground-color: rgba(15, 74, 92, 0.473) ;\r\n}\r\n\r\n\r\n.card-body h3{\r\ncolor: white;\r\n}\r\n\r\n\r\n.login_btn{\r\ncolor: black;\r\nbackground-color: #FFC312;\r\nwidth: 100px;\r\n}\r\n\r\n.login_btn:hover{\r\ncolor: black;\r\nbackground-color: white;\r\n}\r\n\r\n.Signup a{\r\ncolor: darkblue;\r\nmargin-left: 5px;\r\n}\r\n\r\n.Signup {\r\n    color: white;\r\n}\r\n\r\n\r\n\r\n`","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\pages\\BloodBank\\BankReciever.component.js",["148"],"import React, { useEffect, useContext } from \"react\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../../context/userDetailContext'\r\n\r\n\r\nfunction BankReciever() {\r\n  //to prevent from loading if user is log out\r\n  const { userLoginData } = useContext(UserContext)\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!userLoginData.userData)  //to prevent accessing while logged out\r\n      history.push('/')\r\n    try {\r\n      if (userLoginData.userData.type !== \"BloodBank\")  //to prevent accessing any other type\r\n        history.push(`/${userLoginData.userData.type}`)\r\n    }\r\n    catch {\r\n      history.push('/')\r\n\r\n    }\r\n\r\n  }, [userLoginData])\r\n\r\n  return (\r\n    <BankContainer>\r\n      <div class=\"body\">\r\n        <h1>Recipients</h1>\r\n        <table class=\"table table-striped\">\r\n          <thead class=\"thead\">\r\n            <tr>\r\n              <th scope=\"col\">ID</th>\r\n              <th scope=\"col\">NAME</th>\r\n              <th scope=\"col\">AGE</th>\r\n              <th scope=\"col\">BLOOD GROUP</th>\r\n              <th scope=\"col\">ADDRESS</th>\r\n              <th scope=\"col\">CONTACT NO</th>\r\n              <th scope=\"col\">DATE</th>\r\n              <th scope=\"col\">QUANTITY</th>\r\n              <th scope=\"col\">STATUS</th>\r\n              <th scope=\"col\">ACTION</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"row\">1</th>\r\n              <td>abc</td>\r\n              <td>20</td>\r\n              <td>A+</td>\r\n              <td>22 Street House No 1</td>\r\n              <td>12345678901</td>\r\n              <td>20/11/2020</td>\r\n              <td>1</td>\r\n              <td>Active</td>\r\n              <td>\r\n                <button type=\"button\" class=\"btn btn-primary\">Update</button>\r\n                <br />\r\n                <button type=\"button\" class=\"btn btn-danger\">Delete</button></td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">2</th>\r\n              <td>xyz</td>\r\n              <td>21</td>\r\n              <td>B+</td>\r\n              <td>22 Stree\r\n          t House No 2</td>\r\n              <td>12345678900</td>\r\n              <td>20/12/2020</td>\r\n              <td>2</td>\r\n              <td>Active</td>\r\n              <td>\r\n                <button type=\"button\" class=\"btn btn-primary\">Update</button>\r\n                <br />\r\n                <button type=\"button\" class=\"btn btn-danger\">Delete</button></td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">3</th>\r\n              <td>mln</td>\r\n              <td>22</td>\r\n              <td>A-</td>\r\n              <td>22 Street House No 3</td>\r\n              <td>12345678908</td>\r\n              <td>21/12/2020</td>\r\n              <td>2</td>\r\n              <td>Active</td>\r\n              <td>\r\n                <button type=\"button\" class=\"btn btn-primary\">Update</button>\r\n                <br />\r\n                <button type=\"button\" class=\"btn btn-danger\">Delete</button></td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">4</th>\r\n              <td>123</td>\r\n              <td>25</td>\r\n              <td>B-</td>\r\n              <td>22 Street House No 4</td>\r\n              <td>12345678909</td>\r\n              <td>23/11/2020</td>\r\n              <td>2</td>\r\n              <td>Active</td>\r\n              <td>\r\n                <button type=\"button\" class=\"btn btn-primary\">Update</button>\r\n                <br />\r\n                <button type=\"button\" class=\"btn btn-danger\">Delete</button></td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">5</th>\r\n              <td>jkl</td>\r\n              <td>23</td>\r\n              <td>AB+</td>\r\n              <td>22 Street House No 5</td>\r\n              <td>12345678905</td>\r\n              <td>20/11/2020</td>\r\n              <td>1</td>\r\n              <td>Active</td>\r\n              <td>\r\n                <button type=\"button\" class=\"btn btn-primary\">Update</button>\r\n                <br />\r\n                <button type=\"button\" class=\"btn btn-danger\">Delete</button></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </BankContainer>\r\n  )\r\n}\r\n\r\nexport default BankReciever;\r\n\r\nconst BankContainer = styled.div`\r\n.thead{\r\n    background-color:Black;\r\n    color:white;\r\n    font-weight:bold;\r\n    font-size:15px;\r\n    width:50%;\r\n}\r\n.table table-striped{\r\n    width:50%;\r\n}\r\n.body{\r\n    padding-left:20%;\r\n    padding-right:10%;\r\n    padding-top:3%;\r\n}\r\n\r\n.btn,\r\nbtn-primary\r\n {\r\n    margin-top: 10px;\r\n    margin-bottom: 25px;\r\n    position: relative;\r\n}\r\n\r\n.btn-primary{\r\n    left: 0px;\r\n    margin-left: 100px;\r\n}\r\n.btn-danger {\r\n    left: 0px;\r\n    margin-top: -90px;\r\n}\r\n\r\n`;","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\pages\\BloodBank\\BankRequest.component.js",["149"],"import React, { useEffect, useContext } from \"react\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../../context/userDetailContext'\r\n\r\n\r\nfunction BankRequests() {\r\n  //to prevent from loading if user is log out\r\n  const { userLoginData } = useContext(UserContext)\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!userLoginData.userData)\r\n      history.push('/')\r\n    try {\r\n      if (userLoginData.userData.type !== \"BloodBank\")  //to prevent accessing any other type\r\n        history.push(`/${userLoginData.userData.type}`)\r\n    }\r\n    catch {\r\n      history.push('/')\r\n    }\r\n\r\n\r\n  }, [userLoginData])\r\n\r\n  return (\r\n    <BankContainer>\r\n      <div class=\"body\">\r\n        <h1>Patient Requests</h1>\r\n        <table class=\"table table-striped\">\r\n          <thead class=\"thead\">\r\n            <tr>\r\n              <th scope=\"col\">ID</th>\r\n              <th scope=\"col\">RECIPIENT NAME</th>\r\n              <th scope=\"col\">AGE</th>\r\n              <th scope=\"col\">BLOOD GROUP</th>\r\n              <th scope=\"col\">ADDRESS</th>\r\n              <th scope=\"col\">CONTACT NO</th>\r\n              <th scope=\"col\">BLOOD BANK</th>\r\n              <th scope=\"col\">QUANTITY</th>\r\n              <th scope=\"col\">STATUS</th>\r\n              <th scope=\"col\">ACTION</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"row\">1</th>\r\n              <td>xyz</td>\r\n              <td>20</td>\r\n              <td>A-</td>\r\n              <td>22 Street House No 1</td>\r\n              <td>12345678909</td>\r\n              <td>H Bank</td>\r\n              <td>1</td>\r\n              <td>Pending</td>\r\n              <td>\r\n                <button type=\"button\" class=\"btn btn-success\">Donate</button></td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">2</th>\r\n              <td>abc</td>\r\n              <td>21</td>\r\n              <td>B-</td>\r\n              <td>22 Street House No 2</td>\r\n              <td>12345678906</td>\r\n              <td>B Bank</td>\r\n              <td>2</td>\r\n              <td>Pending</td>\r\n              <td>\r\n                <button type=\"button\" class=\"btn btn-success\">Donate</button></td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">3</th>\r\n              <td>123</td>\r\n              <td>25</td>\r\n              <td>A+</td>\r\n              <td>22 Street House No 3</td>\r\n              <td>12345678907</td>\r\n              <td>C Bank</td>\r\n              <td>1</td>\r\n              <td>Complete</td>\r\n              <td>\r\n                <button type=\"button\" class=\"btn btn-success\">Donate</button></td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">4</th>\r\n              <td>mln</td>\r\n              <td>26</td>\r\n              <td>AB+</td>\r\n              <td>22 Street House No 4</td>\r\n              <td>12345678989</td>\r\n              <td>C Bank</td>\r\n              <td>1</td>\r\n              <td>Complete</td>\r\n              <td>\r\n                <button type=\"button\" class=\"btn btn-success\">Donate</button></td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">5</th>\r\n              <td>jkl</td>\r\n              <td>20</td>\r\n              <td>A-</td>\r\n              <td>22 Street House No 5</td>\r\n              <td>12345677709</td>\r\n              <td>D Bank</td>\r\n              <td>1</td>\r\n              <td>Pending</td>\r\n              <td>\r\n                <button type=\"button\" class=\"btn btn-success\">Donate</button></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </BankContainer>\r\n  )\r\n}\r\n\r\nexport default BankRequests;\r\n\r\nconst BankContainer = styled.div`\r\n.thead{\r\n    background-color:Black;\r\n    color:white;\r\n    font-weight:bold;\r\n    font-size:15px;\r\n    width:50%;\r\n}\r\n.table table-striped{\r\n    width:50%;\r\n}\r\n.body{\r\n    padding-left:20%;\r\n    padding-right:10%;\r\n    padding-top:3%;\r\n}\r\n`;","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\pages\\BloodBank\\BankStock.component.js",["150"],"import React, { useEffect, useContext } from \"react\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../../context/userDetailContext'\r\n\r\n\r\nfunction BankStock() {\r\n  //to prevent from loading if user is log out\r\n  const { userLoginData } = useContext(UserContext)\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!userLoginData.userData)\r\n      history.push('/')\r\n    try {\r\n      if (userLoginData.userData.type !== \"BloodBank\")  //to prevent accessing any other type\r\n        history.push(`/${userLoginData.userData.type}`)\r\n    }\r\n    catch {\r\n      history.push('/')\r\n    }\r\n  }, [userLoginData])\r\n\r\n  return (\r\n    <BankContainer>\r\n      <div class=\"body\">\r\n        <h1>Blood Stock</h1>\r\n\r\n\r\n        <table class=\"table table-striped\">\r\n          <thead class=\"thead\">\r\n            <tr>\r\n              <th scope=\"col\">ID</th>\r\n              <th scope=\"col\">DONOR NAME</th>\r\n              <th scope=\"col\">BLOOD GROUP</th>\r\n              <th scope=\"col\">DATE DONATED</th>\r\n              <th scope=\"col\">QUANTITY</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"row\">1</th>\r\n              <td>abc</td>\r\n              <td>B+</td>\r\n              <td>20/11/2020</td>\r\n              <td>1</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">2</th>\r\n              <td>xyz</td>\r\n              <td>A+</td>\r\n              <td>21/11/2020</td>\r\n              <td>2</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">3</th>\r\n              <td>123</td>\r\n              <td>A-</td>\r\n              <td>23/11/2020</td>\r\n              <td>1</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">4</th>\r\n              <td>mln</td>\r\n              <td>B+</td>\r\n              <td>25/11/2020</td>\r\n              <td>1</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">5</th>\r\n              <td>klm</td>\r\n              <td>A+</td>\r\n              <td>27/11/2020</td>\r\n              <td>2</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <h6>Total Quantity:  <input type=\"text\" id=\"myText\" value=\"7\" /></h6>\r\n        <h2>Blood Quantity</h2>\r\n        <div className=\"Bottom\">\r\n          <h5>Select Blood Group:</h5>\r\n          <select id=\"blood\" name=\"bloodGroup\">\r\n            <option value=\"A+\">A+</option>\r\n            <option value=\"A-\">A-</option>\r\n            <option value=\"B+\">B+</option>\r\n            <option value=\"O-\">O-</option>\r\n          </select>\r\n          <br />\r\n          <input type=\"text\"\r\n            id=\"myText\"\r\n            value=\"20\" />\r\n        </div>\r\n      </div>\r\n    </BankContainer>\r\n  )\r\n}\r\n\r\nexport default BankStock;\r\n\r\nconst BankContainer = styled.div`\r\n.thead{\r\n    background-color:Black;\r\n    color:white;\r\n    font-weight:bold;\r\n    font-size:15px;\r\n    width:50%;\r\n}\r\n.table table-striped{\r\n    width:50%;\r\n}\r\n.body{\r\n    padding-left:20%;\r\n    padding-right:10%;\r\n    padding-top:3%;\r\n}\r\n\r\n.Bottom{\r\n  padding-left:70%;  \r\n}\r\nh2{\r\n    color:#6B1A08;\r\n    padding-left:65%;\r\n    font-weight:bold;\r\n}\r\nh6{\r\n    padding-left:60%;   \r\n}\r\ninput{\r\n    text-align:center;\r\n    width:40%;\r\n}\r\n`;","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\context\\userDetailContext.js",[],"C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\layout\\Header.component.js",[],"C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\pages\\Recipient\\ViewRequest.component.js",["151"],"import React, { useEffect, useContext, useState  } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../../context/userDetailContext'\r\nimport Axios from 'axios'\r\nfunction RecipientRequests(){\r\n  const { userLoginData } = useContext(UserContext)\r\n  const [isLoading,setLoading]=useState(true);\r\n  const history = useHistory();\r\n  const [data,setData]=useState([]);\r\n  useEffect(() => {\r\n    if (!userLoginData.userData)\r\n      history.push('/')\r\n    try {\r\n      if (userLoginData.userData.type !== \"Recipient\")\r\n        history.push(`/${userLoginData.userData.type}`)\r\n\r\n      Axios.get(`http://localhost:5000/bloodRequest/viewRequests/${userLoginData.userData.user_id}`)\r\n      .then((response) => {\r\n        setData(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n         \r\n    }\r\n    catch {\r\n      history.push('/')\r\n    }\r\n\r\n  },[userLoginData])\r\n  if(isLoading)\r\n  {\r\n    return (\r\n     \r\n    <div class=\"d-flex justify-content-center\">\r\n    <div class=\"spinner-border text-danger\" role=\"status\" >\r\n      <span class=\"sr-only\">Loading...</span>\r\n    </div>\r\n  </div>\r\n\r\n)}\r\n    return (\r\n      <RecipientContainer>\r\n        <div class=\"body\">\r\n          <h1>Patient Requests</h1>\r\n          <br/>\r\n          <table class=\"table table-striped\">\r\n            <thead class=\"thead\">\r\n              <tr>\r\n                <th scope=\"col\">ID</th>\r\n                <th scope=\"col\">RECIPIENT NAME</th>\r\n                <th scope=\"col\">AGE</th>\r\n                <th scope=\"col\">BLOOD GROUP</th>\r\n                <th scope=\"col\">ADDRESS</th>\r\n                <th scope=\"col\">BLOOD BANK</th>\r\n                <th scope=\"col\">QUANTITY</th>\r\n                <th scope=\"col\">STATUS</th>\r\n                <th scope=\"col\">DUE DATE</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n            {data.userDetails.map((result,index) => {\r\n            return (\r\n                 <tr>\r\n                   <td>{index+1}</td>\r\n                   <td>{data.recipient[0].name}</td>\r\n                   <td>{data.recipient[0].age}</td>\r\n                  <td>{result.bloodGroup}</td>\r\n                  <td>{result.address}</td>\r\n                  <td>{data.recipient[0].bloodBank}</td>\r\n                  <td>{result.quantity}</td>\r\n                  <td>{data.status[index]}</td>\r\n                  <td>{(new Date(result.due_date)).toLocaleString().split(',')[0]}</td>\r\n                </tr>  \r\n            )\r\n          })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </RecipientContainer>\r\n    )\r\n  }\r\nexport default RecipientRequests;\r\n\r\nconst RecipientContainer = styled.div`\r\n.thead{\r\n    background-color:Black;\r\n    color:white;\r\n    font-weight:bold;\r\n    font-size:15px;\r\n    width:50%;\r\n}\r\n.table table-striped{\r\n    width:50%;\r\n}\r\n.body{\r\n    padding-left:20%;\r\n    padding-right:10%;\r\n    padding-top:3%;\r\n}\r\n`;","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\layout\\Footer.component.js",[],"C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\pages\\Recipient\\SendRequest.component.js",[],"C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\pages\\Recipient\\SearchDonor.component.js",["152","153","154","155"],"C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\pages\\Recipient\\RecipientProfile.component.js",[],"C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\pages\\BloodBank\\BankDonor.component.js",["156"],"import React, { useEffect, useContext } from \"react\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../../context/userDetailContext'\r\n\r\n\r\nfunction BankDonor() {\r\n  //to prevent from loading if user is log out\r\n  const { userLoginData } = useContext(UserContext)\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!userLoginData.userData)\r\n      history.push('/')\r\n    try {\r\n      if (userLoginData.userData.type !== \"BloodBank\")\r\n        history.push(`/${userLoginData.userData.type}`)\r\n    }\r\n    catch {\r\n      history.push('/')\r\n    }\r\n\r\n  }, [userLoginData])\r\n\r\n  return (\r\n    <BankContainer>\r\n      <div class=\"body\">\r\n        <h1>Blood Donors</h1>\r\n        <table class=\"table table-striped\">\r\n          <thead class=\"thead\">\r\n            <tr>\r\n              <th scope=\"col\">ID</th>\r\n              <th scope=\"col\">DONOR NAME</th>\r\n              <th scope=\"col\">AGE</th>\r\n              <th scope=\"col\">BLOOD GROUP</th>\r\n              <th scope=\"col\">ADDRESS</th>\r\n              <th scope=\"col\">CONTACT NO</th>\r\n              <th scope=\"col\">DATE DONATED</th>\r\n              <th scope=\"col\">QUANTITY</th>\r\n              <th scope=\"col\">STATUS</th>\r\n              <th scope=\"col\">ACTION</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"row\">1</th>\r\n              <td>abc</td>\r\n              <td>20</td>\r\n              <td>A+</td>\r\n              <td>22 Street House No 1</td>\r\n              <td>12345678901</td>\r\n              <td>20/11/2020</td>\r\n              <td>1</td>\r\n              <td>Active</td>\r\n              <td>\r\n                <button type=\"button\" class=\"btn btn-primary\">Update</button>\r\n                <br />\r\n                <button type=\"button\" class=\"btn btn-danger\">Delete</button></td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">2</th>\r\n              <td>xyz</td>\r\n              <td>21</td>\r\n              <td>B+</td>\r\n              <td>22 Street House No 2</td>\r\n              <td>12345678900</td>\r\n              <td>20/12/2020</td>\r\n              <td>2</td>\r\n              <td>Active</td>\r\n              <td>\r\n                <button type=\"button\" class=\"btn btn-primary\">Update</button>\r\n                <br />\r\n                <button type=\"button\" class=\"btn btn-danger\">Delete</button></td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">3</th>\r\n              <td>mln</td>\r\n              <td>22</td>\r\n              <td>A-</td>\r\n              <td>22 Street House No 3</td>\r\n              <td>12345678908</td>\r\n              <td>21/12/2020</td>\r\n              <td>2</td>\r\n              <td>Active</td>\r\n              <td>\r\n                <button type=\"button\" class=\"btn btn-primary\">Update</button>\r\n                <br />\r\n                <button type=\"button\" class=\"btn btn-danger\">Delete</button></td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">4</th>\r\n              <td>123</td>\r\n              <td>25</td>\r\n              <td>B-</td>\r\n              <td>22 Street House No 4</td>\r\n              <td>12345678909</td>\r\n              <td>23/11/2020</td>\r\n              <td>2</td>\r\n              <td>Active</td>\r\n              <td>\r\n                <button type=\"button\" class=\"btn btn-primary\">Update</button>\r\n                <br />\r\n                <button type=\"button\" class=\"btn btn-danger\">Delete</button></td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">5</th>\r\n              <td>jkl</td>\r\n              <td>23</td>\r\n              <td>AB+</td>\r\n              <td>22 Street House No 5</td>\r\n              <td>12345678905</td>\r\n              <td>20/11/2020</td>\r\n              <td>1</td>\r\n              <td>Active</td>\r\n              <td>\r\n                <button type=\"button\" class=\"btn btn-primary\">Update</button>\r\n                <br />\r\n                <button type=\"button\" class=\"btn btn-danger\">Delete</button></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </BankContainer>\r\n  )\r\n}\r\n\r\nexport default BankDonor;\r\n\r\nconst BankContainer = styled.div`\r\n.thead{\r\n    background-color:Black;\r\n    color:white;\r\n    font-weight:bold;\r\n    font-size:15px;\r\n    width:50%;\r\n}\r\n.table table-striped{\r\n    width:50%;\r\n}\r\n.body{\r\n    padding-left:20%;\r\n    padding-right:10%;\r\n    padding-top:3%;\r\n}\r\n\r\n.btn,\r\nbtn-primary\r\n {\r\n    margin-top: 10px;\r\n    margin-bottom: 25px;\r\n    position: relative;\r\n}\r\n\r\n.btn-primary{\r\n    left: 0px;\r\n    margin-left: 100px;\r\n}\r\n.btn-danger {\r\n    left: 0px;\r\n    margin-top: -90px;\r\n}\r\n\r\n`;","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\pages\\Donor\\DonorMakeDonations.component.js",[],"C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\layout\\Navbar.js",[],"C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\pages\\Donor\\DonorDonations.component.js",["157","158"],"import React, { Component } from 'react';\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../../context/userDetailContext';\r\nimport Axios from \"axios\";\r\n\r\nfunction DonorDonations() {\r\n  const { userLoginData } = useContext(UserContext)\r\n  const [isLoading, setLoading] = useState(true);\r\n  const history = useHistory();\r\n  const [data, setData] = useState([]);\r\n  const [bloodBank, setBloodBank] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!userLoginData.userData)\r\n      history.push('/')\r\n    try {\r\n      if (userLoginData.userData.type !== \"Donor\")\r\n        history.push(`/${userLoginData.userData.type}`)\r\n\r\n\r\n      Axios.get(`http://localhost:5000/donation/blood/${userLoginData.userData.bloodBank_id}`)\r\n        .then((response) => {\r\n          setBloodBank(response.data);\r\n        })\r\n\r\n      Axios.get(`http://localhost:5000/donation/${userLoginData.userData.user_id}`)\r\n        .then((response) => {\r\n          setData(response.data);\r\n\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error)\r\n        })\r\n\r\n    }\r\n    catch {\r\n      history.push('/')\r\n    }\r\n\r\n  }, [userLoginData])\r\n\r\n  if (isLoading) {\r\n    return (\r\n\r\n      <DonorDonationsContainer>\r\n        <div class=\"d-flex justify-content-center\">\r\n          <div className=\"spinnerl\">\r\n            <div class=\"spinner-border text-danger\" role=\"status\" >\r\n              <span class=\"sr-only\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </DonorDonationsContainer>\r\n\r\n    )\r\n  }\r\n  return (\r\n    <DonorDonationsContainer>\r\n      <div class=\"body\">\r\n        <h1>Your Donations</h1>\r\n\r\n        <table class=\"table table-striped\">\r\n          <thead class=\"thead\">\r\n            <tr>\r\n              <th scope=\"col\">ID</th>\r\n              <th scope=\"col\">BANK</th>\r\n              <th scope=\"col\">DATE</th>\r\n              <th scope=\"col\">QUANTITY</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.banks.map((result, index) => {\r\n\r\n              return (\r\n\r\n                <tr>\r\n                  <td>{index + 1}</td>\r\n                  <td>{bloodBank.bank}</td>\r\n                  <td>{(new Date(result.created_at)).toLocaleString().split(',')[0]}</td>\r\n                  <td>{result.quantity}</td>\r\n                </tr>\r\n\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n\r\n      </div>\r\n\r\n\r\n    </DonorDonationsContainer>\r\n  )\r\n}\r\nexport default DonorDonations;\r\nconst DonorDonationsContainer = styled.div`\r\n\r\n.spinnerl{\r\n  padding-top:150px;\r\n  padding-bottom:150px;\r\n  \r\n}\r\n\r\n.thead{\r\n    background-color:Black;\r\n    color:white;\r\n    font-weight:bold;\r\n    font-size:15px;\r\n    width:50%;\r\n}\r\n.table table-striped{\r\n    width:50%;\r\n}\r\n.body{\r\n    padding-left:20%;\r\n    padding-right:10%;\r\n    padding-top:3%;\r\n}\r\n`;","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\pages\\Donor\\DonorRequests.component.js",["159","160"],"import React, { Component } from 'react';\r\nimport { useState,useEffect, useContext } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../../context/userDetailContext'\r\nimport Axios from 'axios';\r\nfunction DonorRequests() {\r\n\r\n  const { userLoginData } = useContext(UserContext)\r\n  const history = useHistory();\r\n  const[data,setData]=useState([]);\r\n  const [isLoading,setLoading]=useState(true);\r\n//  let recData=[];\r\n  useEffect(() => {\r\n    if (!userLoginData.userData)\r\n      history.push('/')\r\n    try {\r\n      if (userLoginData.userData.type !== \"Donor\")\r\n        history.push(`/${userLoginData.userData.type}`)\r\n      Axios.get(\"http://localhost:5000/bloodRequest/getAllRec\")\r\n        .then((response) => {\r\n          setData(response.data);\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error)\r\n        })\r\n    }\r\n    catch {\r\n      history.push('/')\r\n    }\r\n\r\n  }, [userLoginData])\r\n  if(isLoading){\r\n    return (\r\n      <DonorRequestsContainer>\r\n      <div class=\"d-flex justify-content-center\">\r\n        <div className=\"spinnerl\">\r\n          <div class=\"spinner-border text-danger\" role=\"status\" >\r\n            <span class=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </DonorRequestsContainer>\r\n  )\r\n  }\r\n    return (\r\n      <DonorRequestsContainer>\r\n        <div class=\"body\">\r\n          <h1>Requests</h1>\r\n          <table class=\"table table-striped\">\r\n            <thead class=\"thead\">\r\n              <tr>\r\n                <th scope=\"col\">ID</th>\r\n                <th scope=\"col\">RECIPIENT NAME</th>\r\n                <th scope=\"col\">BLOOD GROUP</th>\r\n                <th scope=\"col\">DUE DATE</th>\r\n                <th scope=\"col\">CONTACT NO</th>\r\n                <th scope=\"col\">QUANTITY</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n            {data.request.map((result,index) => {\r\n            return (\r\n             \r\n                 <tr>\r\n                   <td>{index+1}</td>\r\n                   <td>{data.recipient[index].name}</td>\r\n                  <td>{result.bloodGroup}</td>\r\n                  <td>{(new Date(result.due_date)).toLocaleString().split(',')[0]}</td>\r\n                  <td>{data.recipient[index].contact}</td>\r\n                  <td>{result.quantity}</td>\r\n                </tr>\r\n               \r\n            )\r\n          })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </DonorRequestsContainer>\r\n    )\r\n}\r\nexport default DonorRequests;\r\n\r\nconst DonorRequestsContainer = styled.div`\r\n\r\n.spinnerl{\r\n  padding-top:150px;\r\n  padding-bottom:150px;\r\n  \r\n}\r\n\r\n.thead{\r\n    background-color:Black;\r\n    color:white;\r\n    font-weight:bold;\r\n    font-size:15px;\r\n    width:50%;\r\n}\r\n.table table-striped{\r\n    width:50%;\r\n}\r\n.body{\r\n    padding-left:20%;\r\n    padding-right:10%;\r\n    padding-top:3%;\r\n}\r\n\r\n`;","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\pages\\Donor\\DonorProfile.component.js",["161","162","163","164"],"import React, { useEffect, useContext, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../../context/userDetailContext'\r\nimport Axios from 'axios'\r\nimport { bloodGroups } from '../../../context/BloodGroupsList';\r\nimport ErrorNotice from '../../misc/ErrorNotice';\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\n\r\nfunction DonorProfile() {\r\n\r\n    const [name, setName] = useState();\r\n    const [address, setAddress] = useState();\r\n    const [contact, setContact] = useState();\r\n    const [age, setAge] = useState();\r\n    const [bloodGroup, setBloodGroup] = useState();\r\n    const [username, setUserName] = useState();\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n\r\n    //for error\r\n    const [error, setError] = useState();\r\n\r\n\r\n    const { userLoginData, setUserLoginData } = useContext(UserContext)\r\n    const history = useHistory();\r\n\r\n    const [isLoading, setLoading] = useState(true);  //for 1st loading data\r\n    let [profileData, setProfileData] = useState();\r\n\r\n    useEffect(() => {\r\n        if (!userLoginData.userData)\r\n            history.push('/')\r\n        try {\r\n            if (userLoginData.userData.type !== \"Donor\")\r\n                history.push(`/${userLoginData.userData.type}`)\r\n\r\n            const getData = async () => {\r\n                const userResponse = await Axios.get(\"http://localhost:5000/login/profile\", {\r\n                    headers: { \"auth-token\": userLoginData.token }\r\n                });\r\n                setProfileData(userResponse.data)\r\n                setName(userResponse.data.name);\r\n                setAddress(userResponse.data.address)\r\n                setContact(userResponse.data.contact)\r\n                setAge(userResponse.data.age)\r\n                setBloodGroup(userResponse.data.bloodGroup)\r\n                setEmail(userResponse.data.email)\r\n                setUserName(userResponse.data.username)\r\n\r\n                setLoading(false);\r\n            }\r\n            getData();\r\n\r\n        }\r\n        catch {\r\n            history.push('/')\r\n        }\r\n\r\n    }, [userLoginData])\r\n\r\n\r\n    const update = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n\r\n            const updatedUser = { name, address, contact, age, bloodGroup, email };\r\n            await Axios.post(`http://localhost:5000/user/update/${userLoginData.userData.user_id}`, updatedUser);  //user and its login data in diff tables\r\n            const UpdatedLogin = { username, password }\r\n            const res = await Axios.post(`http://localhost:5000/login/update/${userLoginData.userData.id}`, UpdatedLogin);  //user and its login data in diff tables\r\n\r\n            Swal.fire(\r\n                'Good job!',\r\n                'Your Profile Updated Successfully',\r\n                'success'\r\n            ) //user and its login data in diff tables\r\n\r\n\r\n\r\n        } catch (err) {\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n    };\r\n\r\n\r\n    const unregister = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const res = await Axios.delete(` http://localhost:5000/login/delete`,\r\n                {\r\n                    headers: { \"auth-token\": userLoginData.token }\r\n                });  //user and its login data in diff tables\r\n\r\n            Swal.fire(\r\n                'Deleted',\r\n                'Awww! Sad to See You Go.',\r\n                'success'\r\n            ) //user and its login data in diff tables\r\n\r\n            setUserLoginData({\r\n                token: undefined,\r\n                userData: undefined,\r\n            });\r\n            localStorage.setItem(\"auth-token\", \"\");\r\n            history.push(\"/\")\r\n\r\n        } catch (err) {\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <DonorProfileContainer>\r\n                <div class=\"box\">\r\n                    <div class=\"loader\">\r\n                        <span class=\"back\">\r\n                            <span>L</span>\r\n                            <span>O</span>\r\n                            <span>A</span>\r\n                            <span>D</span>\r\n                            <span>I</span>\r\n                            <span>N</span>\r\n                            <span>G</span>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </DonorProfileContainer>\r\n\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <DonorProfileContainer>\r\n            <div>\r\n                <h1 className=\"heading\">Update Profile:</h1>\r\n                <div className=\"container container-fluid\">\r\n                    <div className=\"d-flex justify-content-center h-100\">\r\n                        <div class=\"card signupCard\">\r\n                            <div className=\"card-body\">\r\n                                <h3>Profile</h3>\r\n                                {error && (\r\n                                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\r\n                                )}\r\n                                <form>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"bloodBankName\" >Name: </label>\r\n                                        <input id=\"bloodBankName\" type=\"text\" value={name} className=\"form-control\"\r\n                                            onChange={(e) => setName(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"bloodGroup\" >Blood Group: </label>\r\n                                        <select value={bloodGroup} id=\"bloodGroup\" className=\"form-control\" onChange={(e) => setBloodGroup(e.target.value)}>\r\n                                            {bloodGroups.map(item => {\r\n                                                return (\r\n                                                    <option value={item}> {item} </option>\r\n                                                )\r\n                                            })}\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankAddress\" >Address: </label>\r\n                                        <input id=\"BloodBankAddress\" value={address} type=\"text\" className=\"form-control\"\r\n                                            onChange={(e) => setAddress(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankContact\" >Contact No: </label>\r\n                                        <input id=\"BloodBankContact\" type=\"text\" className=\"form-control\"\r\n                                            value={contact} onChange={(e) => setContact(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"age\" >Age: </label>\r\n                                        <input id=\"age\" type=\"text\" className=\"form-control\"\r\n                                            value={age} onChange={(e) => setAge(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankUsername\" >Username: </label>\r\n                                        <input id=\"BloodBankUsername\" type=\"text\" className=\"form-control\"\r\n                                            value={username} onChange={(e) => setUserName(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankEmail\" >Email: </label>\r\n                                        <input id=\"BloodBankEmail\" type=\"text\" className=\"form-control\"\r\n                                            value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankPassword\" >Blood Bank: </label>\r\n                                        <input id=\"BloodBankPassword\" type=\"text\" className=\"form-control\"\r\n                                            value={profileData.bloodBank} readonly />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankPassword\" >Password: </label>\r\n                                        <input id=\"BloodBankPassword\" type=\"password\" className=\"form-control\"\r\n                                            onChange={(e) => setPassword(e.target.value)} />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"submit\" value=\"Unregister\" className=\"btn float-right unregister_btn\" onClick={unregister} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn float-right update_btn\" onClick={update} />\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </DonorProfileContainer>\r\n    )\r\n\r\n}\r\n\r\nexport default DonorProfile;\r\n\r\nconst DonorProfileContainer = styled.div`\r\n\r\n@import url('https://fonts.googleapis.com/css2?family=Righteous&display=swap');\r\n\r\nhtml,body{\r\nheight: 100%;\r\n}\r\n\r\n.spinnerl{\r\n    padding-top:150px;\r\n    padding-bottom:150px;\r\n    \r\n}\r\n\r\nlabel {\r\npadding-right: 20px;\r\n}\r\n.container{\r\nheight: 100%;\r\nalign-content: center;\r\npadding-top: 50px;\r\nfont-family: 'Righteous', cursive;\r\n}\r\n\r\n.signupCard{\r\nheight: 650px;\r\nalign-content: center;\r\nmargin: auto;\r\nwidth: 500px;\r\nbackground-color: rgba(15, 74, 92, 0.473) ;\r\n}\r\n\r\n.card-header {\r\nbackground-color: white;\r\n}\r\n.card-body h3{\r\ncolor: white;\r\ntext-align:center;\r\npadding-bottom:5px;\r\n}\r\n#blood{\r\n    width:75%;\r\n    border:none;\r\n}\r\n\r\n.update_btn{\r\ncolor: black;\r\nbackground-color: #FFC312;\r\nwidth: 100px;\r\nmargin: 0 40px;\r\n}\r\n\r\n.update_btn:hover{\r\ncolor: black;\r\nbackground-color: white;\r\n}\r\n\r\n.unregister_btn{\r\n    color: white;\r\n    background-color: #e02525;\r\n    width: 100px;\r\n    margin: 0 40px;\r\n}\r\n    \r\n.unregister_btn:hover{\r\ncolor: black;\r\nbackground-color: white;\r\n}\r\n\r\n.ButtonGroup {\r\n    margin: auto;\r\n    justify-content: center;\r\n}\r\n.heading{\r\n    padding-top:5%;\r\n    padding-left:30%\r\n}\r\n\r\n@import url(https://fonts.googleapis.com/css?family=Roboto:300);\r\n\r\n \r\n.box{\r\n    background: none;\r\n    margin-top: 200px;\r\n\tpadding-top:300px;\r\n}\r\n\r\n.loader{\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    -webkit-transform: translate(-50%, -50%);\r\n    transform: translate(-50%, -50%);\r\n}​\r\n\t.back {\r\n\t\tmargin:1em auto;\r\n\t}\r\n\t.back span {\r\n\t\tfont-size:3em;\r\n\t\tcolor:#F2C640;;\r\n\t\tbackground: #e02525;\r\n\t\tdisplay:table-cell;\r\n\t\tbox-shadow:inset 0 0 5px rgba(0,0,0,0.3), 0 5px 0 #ccc;\r\n\t\tpadding: 0 15px;\r\n\t\tline-height: 100px;\r\n\t\tanimation:jumb 2s infinite;\r\n\t}\r\n\t@keyframes jumb {\r\n\t\t0% {\r\n\t\t\ttransform:translateY(0px)\r\n\t\t}\r\n\t\t50% {\r\n\t\t\ttransform:translateY(-30px);\r\n\t\t\tbox-shadow:0 15px 0 #F2C640;\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform:translateY(0px)\t\r\n\t\t}\r\n\t}\r\n\t.back span:nth-child(1) {\r\n\t\tanimation-delay:0s;\r\n\t}\r\n\t.back span:nth-child(2) {\r\n\t\tanimation-delay:.1s;\t\r\n\t}\r\n\t.back span:nth-child(3) {\r\n\t\tanimation-delay:.2s;\r\n\t}\r\n\t.back span:nth-child(4) {\r\n\t\tanimation-delay:.3s;\t\r\n\t}\r\n\t.back span:nth-child(5) {\r\n\t\tanimation-delay:.4s;\r\n\t}\r\n\t.back span:nth-child(6) {\r\n\t\tanimation-delay:.5s;\t\r\n\t}\r\n\t.back span:nth-child(7) {\r\n\t\tanimation-delay:.6s;\r\n\t}\r\n\r\n`\r\n\r\n{/* <DonorProfileContainer>\r\n<div class=\"d-flex justify-content-center\">\r\n    <div className=\"spinnerl\">\r\n        <div class=\"spinner-border text-danger\" role=\"status\" >\r\n            <span class=\"sr-only\">Loading...</span>\r\n        </div>\r\n    </div>\r\n</div>\r\n</DonorProfileContainer> */}\r\n\r\n","C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\auth\\authButtonOptions.js",[],"C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\misc\\ErrorNotice.js",[],"C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\context\\BloodGroupsList.js",[],"C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\layout\\Sidebar.component.js",[],"C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\layout\\SidebarDataDonor.js",[],"C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\layout\\SidebarDataBloodBank.js",[],"C:\\Users\\hp\\Documents\\SEMMESTER\\5th Semmester\\BloodBankManagementSystem\\src\\Components\\layout\\SidebarDataRecipient.js",[],{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":4,"column":35,"nodeType":"171","messageId":"172","endLine":4,"endColumn":41},{"ruleId":"173","severity":1,"message":"174","line":22,"column":6,"nodeType":"175","endLine":22,"endColumn":21,"suggestions":"176"},{"ruleId":"169","severity":1,"message":"177","line":2,"column":17,"nodeType":"171","messageId":"172","endLine":2,"endColumn":26},{"ruleId":"169","severity":1,"message":"178","line":21,"column":13,"nodeType":"171","messageId":"172","endLine":21,"endColumn":26},{"ruleId":"173","severity":1,"message":"174","line":24,"column":6,"nodeType":"175","endLine":24,"endColumn":21,"suggestions":"179"},{"ruleId":"173","severity":1,"message":"174","line":24,"column":6,"nodeType":"175","endLine":24,"endColumn":21,"suggestions":"180"},{"ruleId":"173","severity":1,"message":"174","line":22,"column":6,"nodeType":"175","endLine":22,"endColumn":21,"suggestions":"181"},{"ruleId":"173","severity":1,"message":"174","line":32,"column":5,"nodeType":"175","endLine":32,"endColumn":20,"suggestions":"182"},{"ruleId":"173","severity":1,"message":"174","line":33,"column":5,"nodeType":"175","endLine":33,"endColumn":20,"suggestions":"183"},{"ruleId":"184","severity":1,"message":"185","line":79,"column":37,"nodeType":"186","messageId":"187","endLine":79,"endColumn":39},{"ruleId":"188","severity":1,"message":"189","line":80,"column":24,"nodeType":"190","messageId":"191","endLine":80,"endColumn":26},{"ruleId":"188","severity":1,"message":"189","line":85,"column":33,"nodeType":"190","messageId":"191","endLine":85,"endColumn":35},{"ruleId":"173","severity":1,"message":"174","line":23,"column":6,"nodeType":"175","endLine":23,"endColumn":21,"suggestions":"192"},{"ruleId":"169","severity":1,"message":"177","line":1,"column":17,"nodeType":"171","messageId":"172","endLine":1,"endColumn":26},{"ruleId":"173","severity":1,"message":"174","line":43,"column":6,"nodeType":"175","endLine":43,"endColumn":21,"suggestions":"193"},{"ruleId":"169","severity":1,"message":"177","line":1,"column":17,"nodeType":"171","messageId":"172","endLine":1,"endColumn":26},{"ruleId":"173","severity":1,"message":"174","line":33,"column":6,"nodeType":"175","endLine":33,"endColumn":21,"suggestions":"194"},{"ruleId":"173","severity":1,"message":"174","line":62,"column":8,"nodeType":"175","endLine":62,"endColumn":23,"suggestions":"195"},{"ruleId":"169","severity":1,"message":"196","line":72,"column":19,"nodeType":"171","messageId":"172","endLine":72,"endColumn":22},{"ruleId":"169","severity":1,"message":"196","line":91,"column":19,"nodeType":"171","messageId":"172","endLine":91,"endColumn":22},{"ruleId":"197","severity":1,"message":"198","line":362,"column":1,"nodeType":"199","messageId":"200","endLine":370,"endColumn":29},"no-native-reassign",["201"],"no-negated-in-lhs",["202"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["203"],"'Component' is defined but never used.","'userLoginData' is assigned a value but never used.",["204"],["205"],["206"],["207"],["208"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["209"],["210"],["211"],["212"],"'res' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation",{"desc":"213","fix":"214"},{"desc":"213","fix":"215"},{"desc":"213","fix":"216"},{"desc":"213","fix":"217"},{"desc":"213","fix":"218"},{"desc":"213","fix":"219"},{"desc":"213","fix":"220"},{"desc":"213","fix":"221"},{"desc":"213","fix":"222"},{"desc":"213","fix":"223"},"Update the dependencies array to be: [history, userLoginData]",{"range":"224","text":"225"},{"range":"226","text":"225"},{"range":"227","text":"225"},{"range":"228","text":"225"},{"range":"229","text":"225"},{"range":"230","text":"225"},{"range":"231","text":"225"},{"range":"232","text":"225"},{"range":"233","text":"225"},{"range":"234","text":"225"},[653,668],"[history, userLoginData]",[717,732],[676,691],[669,684],[989,1004],[993,1008],[632,647],[1255,1270],[1004,1019],[2146,2161]]