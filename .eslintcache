[{"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\updateProfile.js":"1","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankProfile.component.js":"2","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Donor\\DonorProfile.component.js":"3","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Recipient\\RecipientProfile.component.js":"4","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Admin\\updateProfilesAdmin.js":"5","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Admin\\updateProfileUsersAdmin.js":"6","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Admin\\AdminManageUsers.component.js":"7","E:\\Study\\ReactLearn\\blood-bank-system\\src\\index.js":"8","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\Header.component.js":"9","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\OurVision.component.js":"10","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\signup-form-bloodBank.component.js":"11","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankDonor.component.js":"12","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankHome.component.js":"13","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankStock.component.js":"14","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Donor\\DonorRequests.component.js":"15","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Admin\\AdminAlerts.component.js":"16","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Admin\\AdminManageBloodBanks.component.js":"17","E:\\Study\\ReactLearn\\blood-bank-system\\src\\context\\BloodGroupsList.js":"18","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\misc\\AlertNotice.js":"19","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\SidebarDataAdmin.js":"20","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\SidebarDataBloodBank.js":"21","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\login-form.component.js":"22","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\Footer.component.js":"23"},{"size":9780,"mtime":1615309959421,"results":"24","hashOfConfig":"25"},{"size":11858,"mtime":1615309890080,"results":"26","hashOfConfig":"25"},{"size":13846,"mtime":1615310003039,"results":"27","hashOfConfig":"25"},{"size":13909,"mtime":1615310025838,"results":"28","hashOfConfig":"25"},{"size":8118,"mtime":1615310112175,"results":"29","hashOfConfig":"25"},{"size":9820,"mtime":1615310128478,"results":"30","hashOfConfig":"25"},{"size":11732,"mtime":1615310641406,"results":"31","hashOfConfig":"25"},{"size":171,"mtime":1615264701261,"results":"32","hashOfConfig":"25"},{"size":1900,"mtime":1610387672585,"results":"33","hashOfConfig":"25"},{"size":2511,"mtime":1615266542902,"results":"34","hashOfConfig":"25"},{"size":9968,"mtime":1615286683125,"results":"35","hashOfConfig":"25"},{"size":6123,"mtime":1615309238369,"results":"36","hashOfConfig":"25"},{"size":4899,"mtime":1615355396309,"results":"37","hashOfConfig":"25"},{"size":6156,"mtime":1615309238385,"results":"38","hashOfConfig":"25"},{"size":4468,"mtime":1615309238393,"results":"39","hashOfConfig":"25"},{"size":5369,"mtime":1615309238272,"results":"40","hashOfConfig":"25"},{"size":6028,"mtime":1615309238288,"results":"41","hashOfConfig":"25"},{"size":75,"mtime":1610656724647,"results":"42","hashOfConfig":"25"},{"size":682,"mtime":1614972233607,"results":"43","hashOfConfig":"25"},{"size":1234,"mtime":1615309238272,"results":"44","hashOfConfig":"25"},{"size":1120,"mtime":1615309238272,"results":"45","hashOfConfig":"25"},{"size":6856,"mtime":1615352889095,"results":"46","hashOfConfig":"25"},{"size":2690,"mtime":1615352590144,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"1ngak6v",{"filePath":"52","messages":"53","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"51"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"51"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"51"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\updateProfile.js",["103","104","105","106","107","108","109"],"import React, { useEffect, useContext, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../../context/userDetailContext'\r\nimport Axios from 'axios'\r\nimport { bloodGroups } from '../../../context/BloodGroupsList';\r\nimport ErrorNotice from '../../misc/ErrorNotice';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n\r\nfunction UpdateProfile(props) {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const [contact, setContact] = useState(\"\");\r\n    const [age, setAge] = useState(\"\");\r\n    const [bloodGroup, setBloodGroup] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [type, setType] = useState(\"\")\r\n\r\n    //for error\r\n    const [error, setError] = useState();\r\n\r\n\r\n    const { userLoginData } = useContext(UserContext)\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (!userLoginData.userData)\r\n            history.push('/')\r\n        try {\r\n            if (userLoginData.userData.type !== \"BloodBank\")\r\n                history.push(`/${userLoginData.userData.type}`)\r\n\r\n            const getData = async () => {\r\n               await Axios.get('http://localhost:5000/user/' + props.match.params.id)\r\n                    .then(response => {\r\n\r\n                        setName(response.data.name);\r\n                        setAddress(response.data.address);\r\n                        setEmail(response.data.email);\r\n                        setBloodGroup(response.data.bloodGroup);\r\n                        setAge(response.data.age);\r\n                        setContact(response.data.contact);\r\n                        setType(response.data.type)\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error);\r\n                    })        \r\n            }\r\n            getData();\r\n\r\n        }\r\n        catch {\r\n            history.push('/')\r\n        }\r\n    }, [userLoginData])\r\n\r\n\r\n    const back = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (type === \"Donor\")\r\n            history.push('/BloodBank/Donor')\r\n        else\r\n            history.push('/BloodBank/Reciever')\r\n    }\r\n\r\n    const update = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n\r\n            const updatedUser = { name, address, contact, age, bloodGroup, email };\r\n            await Axios.post(`http://localhost:5000/user/update/${props.match.params.id}`, updatedUser);  //user and its login data in diff tables\r\n\r\n            Swal.fire(\r\n                'Good job!',\r\n                'Profile Updated Successfully',\r\n                'success'\r\n            )\r\n\r\n        } catch (err) {\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <RecipientProfileContainer>\r\n            <div>\r\n                <div className=\"container container-fluid\">\r\n                    <div className=\"d-flex justify-content-center h-100\">\r\n                        <div class=\"card signupCard\">\r\n                            <div className=\"card-body\">\r\n  \r\n                                <div className=\"col-md-12\">\r\n                                <div className=\"myLeftCtn\"></div>\r\n                                <h3>Profile</h3>\r\n                                {error && (\r\n                                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\r\n                                )}\r\n                                <form className=\"myForm text-center\" >\r\n                                    <div className=\"input-group form-group\">\r\n                                        \r\n                                        <input id=\"bloodBankName\" type=\"text\"  className=\"myInput\" value={name} className=\"form-control\" placeholder=\"Name\"\r\n                                            onChange={(e) => setName(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        \r\n                                        <select value={bloodGroup} id=\"bloodGroup\" className=\"myInput\" className=\"form-control\"  onChange={(e) => setBloodGroup(e.target.value)}>\r\n                                            {bloodGroups.map(item => {\r\n                                                return (\r\n                                                    <option value={item}> {item} </option>\r\n                                                )\r\n                                            })}\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        \r\n                                        <input id=\"BloodBankAddress\" value={address} type=\"text\" className=\"myInput\" className=\"form-control\"\r\n                                           placeholder=\"Address\"  onChange={(e) => setAddress(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                       \r\n                                        <input id=\"BloodBankContact\" type=\"text\" className=\"myInput\" className=\"form-control\"\r\n                                            value={contact}  placeholder=\"Contact\" onChange={(e) => setContact(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        \r\n                                        <input id=\"age\" type=\"text\"  className=\"myInput\" className=\"form-control\"\r\n                                            value={age} placeholder=\"Age\" onChange={(e) => setAge(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                    \r\n                                        <input id=\"BloodBankEmail\" type=\"text\" className=\"myInput\" className=\"form-control\"\r\n                                            value={email}  placeholder=\"Email\" onChange={(e) => setEmail(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"submit\" value=\"Back\" className=\"btn float-right back_btn\" onClick={back} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn float-right update_btn\" onClick={update} />\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </RecipientProfileContainer>\r\n    )\r\n\r\n}\r\n\r\nexport default UpdateProfile;\r\n\r\nconst RecipientProfileContainer = styled.div`\r\n\r\n@import url('https://fonts.googleapis.com/css2?family=Righteous&display=swap');\r\n\r\nhtml,body{\r\nheight: 100%;\r\n}\r\n\r\n.spinnerl{\r\n    padding-top:150px;\r\n    padding-bottom:150px;\r\n    \r\n}\r\n\r\nlabel {\r\npadding-right: 20px;\r\n}\r\n.container{\r\n    \r\nheight: 100%;\r\n// align-content: center;\r\npadding-top: 50px;\r\n// font-family: 'Righteous', cursive;\r\n// justify-content: center;\r\n    align-items: center;\r\n    // height:160vh;  \r\n    max-width: 900px;\r\n}\r\n\r\n.myLeftCtn {\r\n    position: relative;\r\n    background: rgb(247, 236, 236);\r\n    border-radius: 25px;\r\n    height: 100%;\r\n    padding: 35px;\r\n    padding-left: 50px;\r\n  }\r\n  .myLeftCtn header {\r\n    color: #cb2d3e;\r\n    font-size: 24px;\r\n    font-weight: 700;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n.card-body {\r\n    \r\n    background: rgb(247, 236, 236);;\r\n    border-radius: 25px;\r\n    -webkit-box-shadow: 0px 10px 40px -10px rgba(0, 0, 0, 0.7);\r\n    -moz-box-shadow: 0px 10px 40px -10px rgba(0, 0, 0, 0.7);\r\n    box-shadow: 0px 10px 40px -10px rgba(0, 0, 0, 0.7);\r\n} \r\n.signupCard{\r\nheight: 650px;\r\nalign-content: center;\r\nmargin: auto;\r\nwidth: 500px;\r\nbackground: rgb(247, 236, 236);;\r\n    border-radius: 25px;\r\n    -webkit-box-shadow: 0px 10px 40px -10px rgba(0, 0, 0, 0.7);\r\n    -moz-box-shadow: 0px 10px 40px -10px rgba(0, 0, 0, 0.7);\r\n    box-shadow: 0px 10px 40px -10px rgba(0, 0, 0, 0.7);\r\n}\r\n\r\n.myLeftCtn .myInput {\r\n    width: 230px;\r\n    border-radius: 25px;\r\n    padding: 10px;\r\n    padding-left: 50px;\r\n    border: none;\r\n    -webkit-box-shadow: 0px 10px 49px -14px rgba(0, 0, 0, 0.7);\r\n    -moz-box-shadow: 0px 10px 49px -14px rgba(0, 0, 0, 0.7);\r\n    box-shadow: 0px 10px 49px -14px rgba(0, 0, 0, 0.7);\r\n  }\r\n  .myLeftCtn .myInput:focus {\r\n    outline: none;\r\n  } \r\n.card-header {\r\nbackground-color: white;\r\n}\r\n.card-body h3{\r\ncolor: #cb2d3e;\r\n    font-size: 30px;\r\n    font-weight: 700;\r\n    margin-bottom: 20px;\r\n    text-align:center;\r\n}\r\n .myForm {\r\n    position: relative;\r\n    margin-top: 50px;\r\n  } \r\n#blood{\r\n    width:75%;\r\n    border:none;\r\n}\r\n\r\n.update_btn{\r\n\r\nwidth: 100px;\r\nmargin: 20px 40px;\r\nbackground: linear-gradient(45deg, #cb2d3e, #ef473a);\r\n    color: #fff;\r\n    border: none;\r\n}\r\n\r\n.update_btn:hover{\r\nbackground: linear-gradient(45deg, #ef473a, #ef473a);\r\n}\r\n\r\n.back_btn{\r\n    background: linear-gradient(45deg, #cb2d3e, #ef473a);\r\n    color: #fff;\r\n    border: none;\r\n    width: 100px;\r\n    margin: 20px 40px;\r\n}\r\n    \r\n.back_btn:hover{\r\nbackground: linear-gradient(45deg, #ef473a, #ef473a);\r\n}\r\n\r\n.ButtonGroup {\r\n    margin: auto;\r\n    justify-content: center;\r\n}\r\n.heading{\r\n    padding-top:5%;\r\n    padding-left:30%\r\n}\r\n`\r\n\r\n",["110","111"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankProfile.component.js",["112","113","114","115","116","117","118","119","120","121"],"import React, { useEffect, useContext, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../../context/userDetailContext'\r\nimport Axios from 'axios'\r\nimport ErrorNotice from '../../misc/ErrorNotice';\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\n\r\nfunction BankProfile() {\r\n\r\n    const [name, setName] = useState();\r\n    const [address, setAddress] = useState();\r\n    const [contact, setContact] = useState();\r\n    const [username, setUserName] = useState();\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n\r\n    //for error\r\n    const [error, setError] = useState();\r\n\r\n\r\n     const { userLoginData, setUserLoginData } = useContext(UserContext)\r\n     const history = useHistory();\r\n\r\n    const [isLoading, setLoading] = useState(true);  //for 1st loading data\r\n    let [profileData, setProfileData] = useState();\r\n\r\n     useEffect(() => {\r\n         if (!userLoginData.userData)\r\n            history.push('/')\r\n      try {\r\n           if (userLoginData.userData.type !== \"BloodBank\")\r\n                history.push(`/${userLoginData.userData.type}`)\r\n\r\n            const getData = async () => {\r\n                const userResponse = await Axios.get(\"http://localhost:5000/login/profile\", {\r\n                    headers: { \"auth-token\": userLoginData.token }\r\n                });\r\n                setProfileData(userResponse.data)\r\n                setName(userResponse.data.name);\r\n                setAddress(userResponse.data.address)\r\n                setContact(userResponse.data.contact)\r\n                setEmail(userResponse.data.email)\r\n                setUserName(userResponse.data.username)\r\n\r\n                setLoading(false);\r\n            }\r\n            getData();\r\n\r\n        }\r\n        catch {\r\n            history.push('/')\r\n        }\r\n\r\n    }, [userLoginData])\r\n\r\n\r\n    const update = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n\r\n            const updatedUser = { name, address, contact,email };\r\n            await Axios.post(`http://localhost:5000/user/update/${userLoginData.userData.user_id}`, updatedUser);  //user and its login data in diff tables\r\n            const UpdatedLogin = { username, password }\r\n            await Axios.post(`http://localhost:5000/login/update/${userLoginData.userData.id}`, UpdatedLogin);  //user and its login data in diff tables\r\n\r\n            Swal.fire(\r\n                'Good job!',\r\n                'Your Profile Updated Successfully',\r\n                'success'\r\n            ) //user and its login data in diff tables\r\n\r\n\r\n\r\n        } catch (err) {\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n    };\r\n\r\n\r\n    const unregister = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n                await Axios.delete(` http://localhost:5000/login/delete`,\r\n                {\r\n                    headers: { \"auth-token\": userLoginData.token }\r\n                });  //user and its login data in diff tables\r\n\r\n            Swal.fire(\r\n                'Deleted',\r\n                'Awww! Sad to See You Go.',\r\n                'success'\r\n            ) //user and its login data in diff tables\r\n\r\n            setUserLoginData({\r\n                token: undefined,\r\n                userData: undefined,\r\n            });\r\n            localStorage.setItem(\"auth-token\", \"\");\r\n            history.push(\"/\")\r\n\r\n        } catch (err) {\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <BankProfileContainer>\r\n                <div class=\"box\">\r\n                    <div class=\"loader\">\r\n                        <span class=\"back\">\r\n                            <span>L</span>\r\n                            <span>O</span>\r\n                            <span>A</span>\r\n                            <span>D</span>\r\n                            <span>I</span>\r\n                            <span>N</span>\r\n                            <span>G</span>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </BankProfileContainer>\r\n\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <BankProfileContainer>\r\n            <div>\r\n                <div className=\"container container-fluid\">\r\n                    <div className=\"d-flex justify-content-center h-100\">\r\n                        <div class=\"card signupCard\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"col-md-12\">\r\n                                <div className=\"myLeftCtn\"></div>\r\n                                <h3>Profile</h3>\r\n                                {error && (\r\n                                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\r\n                                )}\r\n                                <form className=\"myForm text-center\">\r\n                                    <div className=\"input-group form-group\">\r\n                                        \r\n                                        <input id=\"bloodBankName\" type=\"text\" className=\"myInput\" value={name} className=\"form-control\"\r\n                                         placeholder=\"Name\" onChange={(e) => setName(e.target.value)}    />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                         \r\n                                        <input id=\"BloodBankAddress\"  value={address}  type=\"text\" className=\"myInput\" className=\"form-control\"\r\n                                          placeholder=\"Address\" onChange={(e) => setAddress(e.target.value)}  />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        \r\n                                        <input id=\"BloodBankContact\"  value={contact}  type=\"text\" className=\"myInput\" className=\"form-control\"\r\n                                         placeholder=\"Contact\" onChange={(e) => setContact(e.target.value)}   />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        \r\n                                        <input id=\"BloodBankUsername\"  value={username}  type=\"text\" className=\"myInput\" className=\"form-control\"\r\n                                         placeholder=\"Username\" onChange={(e) => setUserName(e.target.value)}  />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        \r\n                                        <input id=\"BloodBankEmail\"  value={email}  type=\"text\" className=\"myInput\" className=\"form-control\"\r\n                                       placeholder=\"Email\"  onChange={(e) => setEmail(e.target.value)}    />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        \r\n                                        <input id=\"BloodBankPassword\"  type=\"password\" className=\"myInput\" className=\"form-control\"\r\n                                        placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)}   />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn float-right update_btn\" onClick={update} />\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n              </div>\r\n        </BankProfileContainer>\r\n    )\r\n\r\n}\r\n\r\nexport default BankProfile;\r\n\r\nconst BankProfileContainer = styled.div`\r\n\r\n@import url('https://fonts.googleapis.com/css2?family=Righteous&display=swap');\r\n\r\nhtml,body{\r\nheight: 100%;\r\n}\r\n\r\n.spinnerl{\r\n    padding-top:150px;\r\n    padding-bottom:150px;\r\n    \r\n}\r\n\r\nlabel {\r\npadding-right: 20px;\r\n}\r\n.container{\r\n    \r\nheight: 100%;\r\n// align-content: center;\r\npadding-top: 50px;\r\n// font-family: 'Righteous', cursive;\r\n// justify-content: center;\r\n    align-items: center;\r\n    // height:160vh;  \r\n    max-width: 900px;\r\n}\r\n\r\n.myLeftCtn {\r\n    position: relative;\r\n    background: rgb(247, 236, 236);\r\n    border-radius: 25px;\r\n    height: 100%;\r\n    padding: 35px;\r\n    padding-left: 50px;\r\n  }\r\n  .myLeftCtn header {\r\n    color: #cb2d3e;\r\n    font-size: 24px;\r\n    font-weight: 700;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n.card-body {\r\n    \r\n    background: rgb(247, 236, 236);;\r\n    border-radius: 25px;\r\n    -webkit-box-shadow: 0px 10px 40px -10px rgba(0, 0, 0, 0.7);\r\n    -moz-box-shadow: 0px 10px 40px -10px rgba(0, 0, 0, 0.7);\r\n    box-shadow: 0px 10px 40px -10px rgba(0, 0, 0, 0.7);\r\n} \r\n.signupCard{\r\nheight: 650px;\r\nalign-content: center;\r\nmargin: auto;\r\nwidth: 500px;\r\nbackground: rgb(247, 236, 236);;\r\n    border-radius: 25px;\r\n    -webkit-box-shadow: 0px 10px 40px -10px rgba(0, 0, 0, 0.7);\r\n    -moz-box-shadow: 0px 10px 40px -10px rgba(0, 0, 0, 0.7);\r\n    box-shadow: 0px 10px 40px -10px rgba(0, 0, 0, 0.7);\r\n}\r\n\r\n.myLeftCtn .myInput {\r\n    width: 230px;\r\n    border-radius: 25px;\r\n    padding: 10px;\r\n    padding-left: 50px;\r\n    border: none;\r\n    -webkit-box-shadow: 0px 10px 49px -14px rgba(0, 0, 0, 0.7);\r\n    -moz-box-shadow: 0px 10px 49px -14px rgba(0, 0, 0, 0.7);\r\n    box-shadow: 0px 10px 49px -14px rgba(0, 0, 0, 0.7);\r\n  }\r\n  .myLeftCtn .myInput:focus {\r\n    outline: none;\r\n  } \r\n.card-header {\r\nbackground-color: white;\r\n}\r\n.card-body h3{\r\ncolor: #cb2d3e;\r\n    font-size: 30px;\r\n    font-weight: 700;\r\n    margin-bottom: 20px;\r\n    text-align:center;\r\n}\r\n .myForm {\r\n    position: relative;\r\n    margin-top: 50px;\r\n  } \r\n#blood{\r\n    width:75%;\r\n    border:none;\r\n}\r\n\r\n.update_btn{\r\n\r\nwidth: 100px;\r\nmargin: 20px 40px;\r\nbackground: linear-gradient(45deg, #cb2d3e, #ef473a);\r\n    color: #fff;\r\n    border: none;\r\n}\r\n\r\n.update_btn:hover{\r\nbackground: linear-gradient(45deg, #ef473a, #ef473a);\r\n}\r\n\r\n.ButtonGroup {\r\n    margin: auto;\r\n    justify-content: center;\r\n}\r\n.heading{\r\n    padding-top:5%;\r\n    padding-left:30%\r\n}\r\n\r\n@import url(https://fonts.googleapis.com/css?family=Roboto:300);\r\n\r\n \r\n.box{\r\n    background: none;\r\n    margin-top: 200px;\r\n\tpadding-top:300px;\r\n}\r\n\r\n.loader{\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    -webkit-transform: translate(-50%, -50%);\r\n    transform: translate(-50%, -50%);\r\n}​\r\n\t.back {\r\n\t\tmargin:1em auto;\r\n\t}\r\n\t.back span {\r\n\t\tfont-size:3em;\r\n\t\tcolor:#F2C640;;\r\n\t\tbackground: #e02525;\r\n\t\tdisplay:table-cell;\r\n\t\tbox-shadow:inset 0 0 5px rgba(0,0,0,0.3), 0 5px 0 #ccc;\r\n\t\tpadding: 0 15px;\r\n\t\tline-height: 100px;\r\n\t\tanimation:jumb 2s infinite;\r\n\t}\r\n\t@keyframes jumb {\r\n\t\t0% {\r\n\t\t\ttransform:translateY(0px)\r\n\t\t}\r\n\t\t50% {\r\n\t\t\ttransform:translateY(-30px);\r\n\t\t\tbox-shadow:0 15px 0 #F2C640;\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform:translateY(0px)\t\r\n\t\t}\r\n\t}\r\n\t.back span:nth-child(1) {\r\n\t\tanimation-delay:0s;\r\n\t}\r\n\t.back span:nth-child(2) {\r\n\t\tanimation-delay:.1s;\t\r\n\t}\r\n\t.back span:nth-child(3) {\r\n\t\tanimation-delay:.2s;\r\n\t}\r\n\t.back span:nth-child(4) {\r\n\t\tanimation-delay:.3s;\t\r\n\t}\r\n\t.back span:nth-child(5) {\r\n\t\tanimation-delay:.4s;\r\n\t}\r\n\t.back span:nth-child(6) {\r\n\t\tanimation-delay:.5s;\t\r\n\t}\r\n\t.back span:nth-child(7) {\r\n\t\tanimation-delay:.6s;\r\n\t}\r\n\r\n`\r\n\r\n{/* <DonorProfileContainer>\r\n<div class=\"d-flex justify-content-center\">\r\n    <div className=\"spinnerl\">\r\n        <div class=\"spinner-border text-danger\" role=\"status\" >\r\n            <span class=\"sr-only\">Loading...</span>\r\n        </div>\r\n    </div>\r\n</div>\r\n</DonorProfileContainer> */}\r\n\r\n","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Donor\\DonorProfile.component.js",["122","123","124","125","126","127","128","129","130","131"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Recipient\\RecipientProfile.component.js",["132","133","134","135","136","137","138","139","140","141"],"import React, { useEffect, useContext, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../../context/userDetailContext'\r\nimport Axios from 'axios'\r\nimport { bloodGroups } from '../../../context/BloodGroupsList';\r\nimport ErrorNotice from '../../misc/ErrorNotice';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n\r\nfunction RecipientProfile() {\r\n\r\n    const [name, setName] = useState();\r\n    const [address, setAddress] = useState();\r\n    const [contact, setContact] = useState();\r\n    const [age, setAge] = useState();\r\n    const [bloodGroup, setBloodGroup] = useState();\r\n    const [username, setUserName] = useState();\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n\r\n    //for error\r\n    const [error, setError] = useState();\r\n\r\n\r\n    const { userLoginData, setUserLoginData } = useContext(UserContext)\r\n    const history = useHistory();\r\n\r\n    const [isLoading, setLoading] = useState(true);  //for 1st loading data\r\n    let [profileData, setProfileData] = useState();\r\n\r\n    useEffect(() => {\r\n        if (!userLoginData.userData)\r\n            history.push('/')\r\n        try {\r\n            if (userLoginData.userData.type !== \"Recipient\")\r\n                history.push(`/${userLoginData.userData.type}`)\r\n\r\n            const getData = async () => {\r\n                const userResponse = await Axios.get(\"http://localhost:5000/login/profile\", {\r\n                    headers: { \"auth-token\": userLoginData.token }\r\n                });\r\n                setProfileData(userResponse.data)\r\n                setName(userResponse.data.name);\r\n                setAddress(userResponse.data.address)\r\n                setContact(userResponse.data.contact)\r\n                setAge(userResponse.data.age)\r\n                setBloodGroup(userResponse.data.bloodGroup)\r\n                setEmail(userResponse.data.email)\r\n                setUserName(userResponse.data.username)\r\n\r\n                setLoading(false);\r\n            }\r\n            getData();\r\n\r\n        }\r\n        catch {\r\n            history.push('/')\r\n        }\r\n\r\n    }, [userLoginData])\r\n\r\n\r\n    const update = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n\r\n            const updatedUser = { name, address, contact, age, bloodGroup, email };\r\n            await Axios.post(`http://localhost:5000/user/update/${userLoginData.userData.user_id}`, updatedUser);  //user and its login data in diff tables\r\n            const UpdatedLogin = { username, password }\r\n            await Axios.post(`http://localhost:5000/login/update/${userLoginData.userData.id}`, UpdatedLogin);  //user and its login data in diff tables\r\n\r\n            Swal.fire(\r\n                'Good job!',\r\n                'Your Profile Updated Successfully',\r\n                'success'\r\n            ) //user and its login data in diff tables\r\n\r\n\r\n\r\n        } catch (err) {\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n    };\r\n\r\n\r\n    const unregister = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await Axios.delete(`http://localhost:5000/login/delete`,\r\n                {\r\n                    headers: { \"auth-token\": userLoginData.token }\r\n                });  //user and its login data in diff tables\r\n\r\n            Swal.fire(\r\n                'Deleted',\r\n                'Awww! Sad to See You Go.',\r\n                'success'\r\n            ) //user and its login data in diff tables\r\n\r\n            setUserLoginData({\r\n                token: undefined,\r\n                userData: undefined,\r\n            });\r\n            localStorage.setItem(\"auth-token\", \"\");\r\n            history.push(\"/\")\r\n\r\n        } catch (err) {\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <RecipientProfileContainer>\r\n                <div class=\"box\">\r\n                    <div class=\"loader\">\r\n                        <span class=\"back\">\r\n                            <span>L</span>\r\n                            <span>O</span>\r\n                            <span>A</span>\r\n                            <span>D</span>\r\n                            <span>I</span>\r\n                            <span>N</span>\r\n                            <span>G</span>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </RecipientProfileContainer>\r\n\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <RecipientProfileContainer>\r\n            <div>\r\n                <div className=\"container container-fluid\">\r\n                    <div className=\"d-flex justify-content-center h-100\">\r\n                        <div class=\"card signupCard\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"col-md-12\">\r\n                                <div className=\"myLeftCtn\"></div>\r\n                                <h3>Profile</h3>\r\n                                {error && (\r\n                                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\r\n                                )}\r\n                                <form  className=\"myForm text-center\">\r\n                                    <div className=\"input-group form-group\">\r\n                                        \r\n                                        <input id=\"bloodBankName\" type=\"text\" className=\"myInput\" value={name} className=\"form-control\"\r\n                                          placeholder=\"Name\"  onChange={(e) => setName(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        \r\n                                        <select className=\"myInput\" value={bloodGroup} id=\"bloodGroup\" className=\"form-control\" onChange={(e) => setBloodGroup(e.target.value)}>\r\n                                            {bloodGroups.map(item => {\r\n                                                return (\r\n                                                    <option value={item}> {item} </option>\r\n                                                )\r\n                                            })}\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        \r\n                                        <input id=\"BloodBankAddress\" value={address} type=\"text\" className=\"myInput\" className=\"form-control\"\r\n                                          placeholder=\"Address\"  onChange={(e) => setAddress(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        \r\n                                        <input id=\"BloodBankContact\" type=\"text\" className=\"myInput\" className=\"form-control\"\r\n                                            value={contact} placeholder=\"Contact\" onChange={(e) => setContact(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        \r\n                                        <input id=\"age\" type=\"text\"className=\"myInput\" className=\"form-control\"\r\n                                            value={age} placeholder=\"Age\" onChange={(e) => setAge(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                       \r\n                                        <input id=\"BloodBankUsername\" type=\"text\" className=\"myInput\" className=\"form-control\"\r\n                                            value={username} placeholder=\"Username\" onChange={(e) => setUserName(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        \r\n                                        <input id=\"BloodBankEmail\" type=\"text\" className=\"myInput\" className=\"form-control\"\r\n                                            value={email} placeholder=\"Email\" onChange={(e) => setEmail(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        \r\n                                        <input id=\"BloodBankPassword\" type=\"text\" className=\"myInput\" className=\"form-control\"\r\n                                            value={profileData.bloodBank} placeholder=\"BloodBank\" readonly />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                    \r\n                                        <input id=\"BloodBankPassword\" type=\"password\" className=\"myInput\" className=\"form-control\"\r\n                                           placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"submit\" value=\"Unregister\" className=\"btn float-right unregister_btn\" onClick={unregister} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn float-right update_btn\" onClick={update} />\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </RecipientProfileContainer>\r\n    )\r\n\r\n}\r\n\r\nexport default RecipientProfile;\r\n\r\nconst RecipientProfileContainer = styled.div`\r\n\r\n@import url('https://fonts.googleapis.com/css2?family=Righteous&display=swap');\r\n\r\n\r\nhtml,body{\r\nheight: 100%;\r\n}\r\n\r\n.spinnerl{\r\n    padding-top:150px;\r\n    padding-bottom:150px;\r\n    \r\n}\r\n\r\nlabel {\r\npadding-right: 20px;\r\n}\r\n.container{\r\n    \r\nheight: 100%;\r\n// align-content: center;\r\npadding-top: 50px;\r\n// font-family: 'Righteous', cursive;\r\n// justify-content: center;\r\n    align-items: center;\r\n    // height:160vh;  \r\n    max-width: 900px;\r\n}\r\n\r\n.myLeftCtn {\r\n    position: relative;\r\n    background: rgb(247, 236, 236);\r\n    border-radius: 25px;\r\n    height: 100%;\r\n    padding: 20px;\r\n    padding-left: 50px;\r\n  }\r\n  .myLeftCtn header {\r\n    color: #cb2d3e;\r\n    font-size: 24px;\r\n    font-weight: 700;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n.card-body {\r\n    \r\n    background: rgb(247, 236, 236);;\r\n    border-radius: 25px;\r\n    -webkit-box-shadow: 0px 10px 40px -10px rgba(0, 0, 0, 0.7);\r\n    -moz-box-shadow: 0px 10px 40px -10px rgba(0, 0, 0, 0.7);\r\n    box-shadow: 0px 10px 40px -10px rgba(0, 0, 0, 0.7);\r\n} \r\n.signupCard{\r\nheight: 700px;\r\nalign-content: center;\r\nmargin: auto;\r\nwidth: 500px;\r\nbackground: rgb(247, 236, 236);;\r\n    border-radius: 25px;\r\n    -webkit-box-shadow: 0px 10px 40px -10px rgba(0, 0, 0, 0.7);\r\n    -moz-box-shadow: 0px 10px 40px -10px rgba(0, 0, 0, 0.7);\r\n    box-shadow: 0px 10px 40px -10px rgba(0, 0, 0, 0.7);\r\n}\r\n\r\n.myLeftCtn .myInput {\r\n    width: 230px;\r\n    border-radius: 25px;\r\n    padding: 10px;\r\n    padding-left: 50px;\r\n    border: none;\r\n    -webkit-box-shadow: 0px 10px 49px -14px rgba(0, 0, 0, 0.7);\r\n    -moz-box-shadow: 0px 10px 49px -14px rgba(0, 0, 0, 0.7);\r\n    box-shadow: 0px 10px 49px -14px rgba(0, 0, 0, 0.7);\r\n  }\r\n  .myLeftCtn .myInput:focus {\r\n    outline: none;\r\n  } \r\n.card-header {\r\nbackground-color: white;\r\n}\r\n.card-body h3{\r\ncolor: #cb2d3e;\r\n    font-size: 30px;\r\n    font-weight: 700;\r\n    margin-bottom: 20px;\r\n    text-align:center;\r\n}\r\n .myForm {\r\n    position: relative;\r\n    margin-top: 50px;\r\n  } \r\n#blood{\r\n    width:75%;\r\n    border:none;\r\n}\r\n\r\n.update_btn{\r\n\r\nwidth: 100px;\r\nmargin: 0px 40px;\r\nbackground: linear-gradient(45deg, #cb2d3e, #ef473a);\r\n    color: #fff;\r\n    border: none;\r\n}\r\n\r\n.update_btn:hover{\r\nbackground: linear-gradient(45deg, #ef473a, #ef473a);\r\n}\r\n\r\n.unregister_btn{\r\n    background: linear-gradient(45deg, #cb2d3e, #ef473a);\r\n    color: #fff;\r\n    border: none;\r\n    width: 100px;\r\n    margin: 0px 40px;\r\n}\r\n    \r\n.unregister_btn:hover{\r\nbackground: linear-gradient(45deg, #ef473a, #ef473a);\r\n}\r\n\r\n.ButtonGroup {\r\n    margin: auto;\r\n    justify-content: center;\r\n}\r\n.heading{\r\n    padding-top:5%;\r\n    padding-left:30%\r\n}\r\n\r\n@import url(https://fonts.googleapis.com/css?family=Roboto:300);\r\n\r\n \r\n.box{\r\n    background: none;\r\n    margin-top: 200px;\r\n\tpadding-top:300px;\r\n}\r\n\r\n.loader{\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    -webkit-transform: translate(-50%, -50%);\r\n    transform: translate(-50%, -50%);\r\n}​\r\n\t.back {\r\n\t\tmargin:1em auto;\r\n\t}\r\n\t.back span {\r\n\t\tfont-size:3em;\r\n\t\tcolor:#F2C640;;\r\n\t\tbackground: #e02525;\r\n\t\tdisplay:table-cell;\r\n\t\tbox-shadow:inset 0 0 5px rgba(0,0,0,0.3), 0 5px 0 #ccc;\r\n\t\tpadding: 0 15px;\r\n\t\tline-height: 100px;\r\n\t\tanimation:jumb 2s infinite;\r\n\t}\r\n\t@keyframes jumb {\r\n\t\t0% {\r\n\t\t\ttransform:translateY(0px)\r\n\t\t}\r\n\t\t50% {\r\n\t\t\ttransform:translateY(-30px);\r\n\t\t\tbox-shadow:0 15px 0 #F2C640;\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform:translateY(0px)\t\r\n\t\t}\r\n\t}\r\n\t.back span:nth-child(1) {\r\n\t\tanimation-delay:0s;\r\n\t}\r\n\t.back span:nth-child(2) {\r\n\t\tanimation-delay:.1s;\t\r\n\t}\r\n\t.back span:nth-child(3) {\r\n\t\tanimation-delay:.2s;\r\n\t}\r\n\t.back span:nth-child(4) {\r\n\t\tanimation-delay:.3s;\t\r\n\t}\r\n\t.back span:nth-child(5) {\r\n\t\tanimation-delay:.4s;\r\n\t}\r\n\t.back span:nth-child(6) {\r\n\t\tanimation-delay:.5s;\t\r\n\t}\r\n\t.back span:nth-child(7) {\r\n\t\tanimation-delay:.6s;\r\n\t}\r\n\r\n\r\n`\r\n\r\n","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Admin\\updateProfilesAdmin.js",["142","143","144","145","146","147"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Admin\\updateProfileUsersAdmin.js",["148","149","150","151","152","153","154"],"import React, { useEffect, useContext, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../../context/userDetailContext'\r\nimport Axios from 'axios'\r\nimport { bloodGroups } from '../../../context/BloodGroupsList';\r\nimport ErrorNotice from '../../misc/ErrorNotice';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n\r\nfunction UpdateUsersProfileAdmin(props) {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const [contact, setContact] = useState(\"\");\r\n    const [age, setAge] = useState(\"\");\r\n    const [bloodGroup, setBloodGroup] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [type, setType] = useState(\"\")\r\n\r\n    //for error\r\n    const [error, setError] = useState();\r\n\r\n\r\n    const { userLoginData } = useContext(UserContext)\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (!userLoginData.userData)\r\n            history.push('/')\r\n        try {\r\n            if (userLoginData.userData.type !== \"Admin\")\r\n                history.push(`/${userLoginData.userData.type}`)\r\n\r\n            const getData = async () => {\r\n                console.log(props.match.params.id);\r\n                await Axios.get('http://localhost:5000/user/' + props.match.params.id)\r\n                    .then(response => {\r\n                        setName(response.data.name);\r\n                        setAddress(response.data.address);\r\n                        setEmail(response.data.email);\r\n                        setBloodGroup(response.data.bloodGroup);\r\n                        setAge(response.data.age);\r\n                        setContact(response.data.contact);\r\n                        setType(response.data.type)\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error);\r\n                    })\r\n            }\r\n            getData();\r\n        }\r\n        catch {\r\n            history.push('/')\r\n        }\r\n    }, [userLoginData])\r\n\r\n\r\n    const back = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (type === \"Donor\")\r\n            history.push('/Admin/User')\r\n        else\r\n            history.push('/Admin/Recipient')\r\n    }\r\n\r\n    const update = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n\r\n            const updatedUser = { name, address, contact, age, bloodGroup, email };\r\n            await Axios.post(`http://localhost:5000/user/update/${props.match.params.id}`, updatedUser);  //user and its login data in diff tables\r\n\r\n            Swal.fire(\r\n                'Good job!',\r\n                'Profile Updated Successfully',\r\n                'success'\r\n            )\r\n\r\n        } catch (err) {\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <RecipientProfileContainer>\r\n            <div>\r\n                <div className=\"container container-fluid\">\r\n                    <div className=\"d-flex justify-content-center h-100\">\r\n                        <div class=\"card signupCard\">\r\n                            <div className=\"card-body\">\r\n                                 <div className=\"col-md-12\">\r\n                                <div className=\"myLeftCtn\"></div>\r\n                                <h3>Profile</h3>\r\n                                {error && (\r\n                                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\r\n                                )}\r\n                                <form className=\"myForm text-center\">\r\n                                    <div className=\"input-group form-group\">\r\n                                        \r\n                                        <input id=\"bloodBankName\" type=\"text\" className=\"myInput\" value={name} className=\"form-control\"\r\n                                         placeholder=\"Name\"   onChange={(e) => setName(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        \r\n                                        <select className=\"myInput\" value={bloodGroup} id=\"bloodGroup\" className=\"form-control\" onChange={(e) => setBloodGroup(e.target.value)}>\r\n                                            {bloodGroups.map(item => {\r\n                                                return (\r\n                                                    <option value={item}> {item} </option>\r\n                                                )\r\n                                            })}\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        \r\n                                        <input id=\"BloodBankAddress\" value={address} type=\"text\" className=\"myInput\" className=\"form-control\"\r\n                                         placeholder=\"Address\"   onChange={(e) => setAddress(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        \r\n                                        <input id=\"BloodBankContact\" type=\"text\" className=\"myInput\" className=\"form-control\"\r\n                                            value={contact} placeholder=\"Contact\" onChange={(e) => setContact(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                       \r\n                                        <input id=\"age\" type=\"text\" className=\"myInput\" className=\"form-control\"\r\n                                            value={age} placeholder=\"Age\" onChange={(e) => setAge(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        \r\n                                        <input id=\"BloodBankEmail\" type=\"text\"className=\"myInput\" className=\"form-control\"\r\n                                            value={email} placeholder=\"Email\" onChange={(e) => setEmail(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"submit\" value=\"Back\" className=\"btn float-right back_btn\" onClick={back} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn float-right update_btn\" onClick={update} />\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </RecipientProfileContainer>\r\n    )\r\n\r\n}\r\n\r\nexport default UpdateUsersProfileAdmin;\r\n\r\nconst RecipientProfileContainer = styled.div`\r\n\r\n@import url('https://fonts.googleapis.com/css2?family=Righteous&display=swap');\r\n\r\nhtml,body{\r\nheight: 100%;\r\n}\r\n\r\n.spinnerl{\r\n    padding-top:150px;\r\n    padding-bottom:150px;\r\n    \r\n}\r\n\r\nlabel {\r\npadding-right: 20px;\r\n}\r\n.container{\r\n    \r\nheight: 100%;\r\n// align-content: center;\r\npadding-top: 50px;\r\n// font-family: 'Righteous', cursive;\r\n// justify-content: center;\r\n    align-items: center;\r\n    // height:160vh;  \r\n    max-width: 900px;\r\n}\r\n\r\n.myLeftCtn {\r\n    position: relative;\r\n    background: rgb(247, 236, 236);\r\n    border-radius: 25px;\r\n    height: 100%;\r\n    padding: 35px;\r\n    padding-left: 50px;\r\n  }\r\n  .myLeftCtn header {\r\n    color: #cb2d3e;\r\n    font-size: 24px;\r\n    font-weight: 700;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n.card-body {\r\n    \r\n    background: rgb(247, 236, 236);;\r\n    border-radius: 25px;\r\n    -webkit-box-shadow: 0px 10px 40px -10px rgba(0, 0, 0, 0.7);\r\n    -moz-box-shadow: 0px 10px 40px -10px rgba(0, 0, 0, 0.7);\r\n    box-shadow: 0px 10px 40px -10px rgba(0, 0, 0, 0.7);\r\n} \r\n.signupCard{\r\nheight: 650px;\r\nalign-content: center;\r\nmargin: auto;\r\nwidth: 500px;\r\nbackground: rgb(247, 236, 236);;\r\n    border-radius: 25px;\r\n    -webkit-box-shadow: 0px 10px 40px -10px rgba(0, 0, 0, 0.7);\r\n    -moz-box-shadow: 0px 10px 40px -10px rgba(0, 0, 0, 0.7);\r\n    box-shadow: 0px 10px 40px -10px rgba(0, 0, 0, 0.7);\r\n}\r\n\r\n.myLeftCtn .myInput {\r\n    width: 230px;\r\n    border-radius: 25px;\r\n    padding: 10px;\r\n    padding-left: 50px;\r\n    border: none;\r\n    -webkit-box-shadow: 0px 10px 49px -14px rgba(0, 0, 0, 0.7);\r\n    -moz-box-shadow: 0px 10px 49px -14px rgba(0, 0, 0, 0.7);\r\n    box-shadow: 0px 10px 49px -14px rgba(0, 0, 0, 0.7);\r\n  }\r\n  .myLeftCtn .myInput:focus {\r\n    outline: none;\r\n  } \r\n.card-header {\r\nbackground-color: white;\r\n}\r\n.card-body h3{\r\ncolor: #cb2d3e;\r\n    font-size: 30px;\r\n    font-weight: 700;\r\n    margin-bottom: 20px;\r\n    text-align:center;\r\n}\r\n .myForm {\r\n    position: relative;\r\n    margin-top: 50px;\r\n  } \r\n#blood{\r\n    width:75%;\r\n    border:none;\r\n}\r\n\r\n.update_btn{\r\n\r\nwidth: 100px;\r\nmargin: 20px 40px;\r\nbackground: linear-gradient(45deg, #cb2d3e, #ef473a);\r\n    color: #fff;\r\n    border: none;\r\n}\r\n\r\n.update_btn:hover{\r\nbackground: linear-gradient(45deg, #ef473a, #ef473a);\r\n}\r\n\r\n.back_btn{\r\n    background: linear-gradient(45deg, #cb2d3e, #ef473a);\r\n    color: #fff;\r\n    border: none;\r\n    width: 100px;\r\n    margin: 20px 40px;\r\n}\r\n    \r\n.back_btn:hover{\r\nbackground: linear-gradient(45deg, #ef473a, #ef473a);\r\n}\r\n\r\n.ButtonGroup {\r\n    margin: auto;\r\n    justify-content: center;\r\n}\r\n.heading{\r\n    padding-top:5%;\r\n    padding-left:30%\r\n}`\r\n\r\n","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Admin\\AdminManageUsers.component.js",["155","156"],"import React, { useEffect, useContext, useState } from \"react\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../../context/userDetailContext';\r\nimport Axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n\r\nfunction RenderButtons(props) {\r\n    if (props.status === 'Active') {\r\n        return (\r\n            <td>\r\n                <button type=\"button\" class=\"btn btn-primary\" onClick={props.updateD}>Update</button>\r\n                <br />\r\n                <button type=\"button\" class=\"btn btn-danger\" onClick={props.deleteD}>Delete</button>\r\n            </td>\r\n        )\r\n    }\r\n    return (\r\n        <td>\r\n        </td>\r\n    )\r\n}\r\n\r\n\r\nfunction DonorRow(props) {\r\n\r\n    const history = useHistory();\r\n\r\n    const deleteDonor = async () => {\r\n        await Axios.delete(`http://localhost:5000/login/deleteBloodBank/${props.donor_id}`)\r\n        console.log(\"deleted\");\r\n        Swal.fire(\r\n            'Deleted',\r\n            'Awww! Sad to See You Go.',\r\n            'success'\r\n        )\r\n        props.update();\r\n    }\r\n\r\n    const updateDonor = (e) => {\r\n        e.preventDefault();\r\n        history.push('/Admin/Users/ProfileEdit/' + props.donor_id);\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <th scope=\"row\">{props.index}</th>\r\n            <td>{props.donor.name}</td>\r\n            <td>{props.donor.age} </td>\r\n            <td>{props.donor.bloodGroup}</td>\r\n            <td>{props.donor.address}</td>\r\n            <td>{props.donor.contact}</td>\r\n            <td>{props.donor.email}</td>\r\n            <td>{props.donor.bloodBank}</td>\r\n            <td>{props.donor.status}</td>\r\n            <RenderButtons status={props.donor.status} deleteD={deleteDonor} updateD={updateDonor} />\r\n        </tr>\r\n    )\r\n}\r\n\r\n\r\nfunction AdminDonor() {\r\n    //to prevent from loading if user is log out\r\n    const { userLoginData } = useContext(UserContext)\r\n    const history = useHistory();\r\n\r\n    const [isLoading, setLoading] = useState(true);  //for 1st loading data\r\n    const [data, setData] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userLoginData.userData)\r\n            history.push('/')\r\n        try {\r\n            if (userLoginData.userData.type !== \"Admin\")\r\n                history.push(`/${userLoginData.userData.type}`)\r\n\r\n            const getData = async () => {\r\n                const userResponse = await Axios.get(\"http://localhost:5000/bloodRequest/getAdminDonor\");\r\n\r\n                setData(userResponse.data)\r\n                setLoading(false);\r\n            }\r\n            getData();\r\n        }\r\n        catch {\r\n            history.push('/')\r\n        }\r\n\r\n    }, [userLoginData])\r\n\r\n    //after deleting data not updating thats why\r\n    const updateState = async () => {\r\n        const userResponse = await Axios.get(\"http://localhost:5000/bloodRequest/getAdminDonor\");\r\n        setData(userResponse.data)\r\n    }\r\n\r\n    const showDonors = () => {\r\n        return (\r\n            data.map((currentDonor, index) => {\r\n                //this is returning single donor row\r\n                return <DonorRow donor={currentDonor} donor_id={currentDonor._id} index={index + 1} update={updateState} />\r\n            })\r\n        )\r\n    }\r\n\r\n    const Donor = (e) => {\r\n        e.preventDefault();\r\n        history.push('/Admin/User');\r\n    }\r\n\r\n    const Recipient = (e) => {\r\n        e.preventDefault();\r\n        history.push('/Admin/Recipient');\r\n    }\r\n\r\n\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <BankContainer>\r\n                <div class=\"box\">\r\n                    <div class=\"loader\">\r\n                        <span class=\"back\">\r\n                            <span>L</span>\r\n                            <span>O</span>\r\n                            <span>A</span>\r\n                            <span>D</span>\r\n                            <span>I</span>\r\n                            <span>N</span>\r\n                            <span>G</span>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </BankContainer>\r\n\r\n        )\r\n    }\r\n\r\n    return (\r\n        <BankContainer>\r\n            <div class=\"body\">\r\n                <h1>Blood Donors</h1>\r\n                <div className=\"btn-group\">\r\n                    <button type=\"button\" className=\"btn btn-rounded btn-info dbtn\" onClick={Donor}>Donor</button>\r\n                    <button type=\"button\" className=\"btn btn-rounded btn-info dbtn\" onClick={Recipient}>Recipients</button>\r\n                </div>\r\n                <div className=\"table-responsive\">\r\n                    <table class=\"table table-striped\">\r\n                        <thead class=\"thead\">\r\n                            <tr>\r\n                                <th scope=\"col\">ID</th>\r\n                                <th scope=\"col\">DONOR NAME</th>\r\n                                <th scope=\"col\">AGE</th>\r\n                                <th scope=\"col\">BLOOD GROUP</th>\r\n                                <th scope=\"col\">ADDRESS</th>\r\n                                <th scope=\"col\">CONTACT NO</th>\r\n                                <th scope=\"col\">EMAIL</th>\r\n                                <th scope=\"col\">BLOOD BANK</th>\r\n                                <th scope=\"col\">STATUS</th>\r\n                                <th scope=\"col\">ACTION</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {showDonors()}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </BankContainer>\r\n    )\r\n}\r\n\r\nfunction AdminRecipient() {\r\n    //to prevent from loading if user is log out\r\n    const { userLoginData } = useContext(UserContext)\r\n    const history = useHistory();\r\n\r\n    const [isLoading, setLoading] = useState(true);  //for 1st loading data\r\n    const [data, setData] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userLoginData.userData)\r\n            history.push('/')\r\n        try {\r\n            if (userLoginData.userData.type !== \"Admin\")\r\n                history.push(`/${userLoginData.userData.type}`)\r\n\r\n            const getData = async () => {\r\n                const userResponse = await Axios.get(\"http://localhost:5000/bloodRequest/getAdminRecipient\");\r\n\r\n                setData(userResponse.data)\r\n                setLoading(false);\r\n            }\r\n            getData();\r\n        }\r\n        catch {\r\n            history.push('/')\r\n        }\r\n\r\n    }, [userLoginData])\r\n\r\n    //after deleting data not updating thats why\r\n    const updateState = async () => {\r\n        const userResponse = await Axios.get(\"http://localhost:5000/bloodRequest/getAdminRecipient\");\r\n        setData(userResponse.data)\r\n    }\r\n\r\n    const showRecipients = () => {\r\n        return (\r\n            data.map((currentRecipient, index) => {\r\n                //this is returning single donor row\r\n                return <DonorRow donor={currentRecipient} donor_id={currentRecipient._id} index={index + 1} update={updateState} />\r\n            })\r\n        )\r\n    }\r\n\r\n    const Donor = (e) => {\r\n        e.preventDefault();\r\n        history.push('/Admin/User');\r\n    }\r\n\r\n    const Recipient = (e) => {\r\n        e.preventDefault();\r\n        history.push('/Admin/Recipient');\r\n    }\r\n\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <BankContainer>\r\n                <div class=\"box\">\r\n                    <div class=\"loader\">\r\n                        <span class=\"back\">\r\n                            <span>L</span>\r\n                            <span>O</span>\r\n                            <span>A</span>\r\n                            <span>D</span>\r\n                            <span>I</span>\r\n                            <span>N</span>\r\n                            <span>G</span>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </BankContainer>\r\n\r\n        )\r\n    }\r\n\r\n    return (\r\n        <BankContainer>\r\n            <div class=\"body\">\r\n                <h1>Blood Recipient</h1>\r\n                <div className=\"btn-group\">\r\n                    <button type=\"button\" className=\"btn btn-rounded btn-info dbtn\" onClick={Donor}>Donor</button>\r\n                    <button type=\"button\" className=\"btn btn-rounded btn-info dbtn\" onClick={Recipient}>Recipients</button>\r\n                </div>\r\n                <div className=\"table-responsive\">\r\n                    <table class=\"table table-striped\">\r\n                        <thead class=\"thead\">\r\n                            <tr>\r\n                                <th scope=\"col\">ID</th>\r\n                                <th scope=\"col\">RECIPIENT NAME</th>\r\n                                <th scope=\"col\">AGE</th>\r\n                                <th scope=\"col\">BLOOD GROUP</th>\r\n                                <th scope=\"col\">ADDRESS</th>\r\n                                <th scope=\"col\">CONTACT NO</th>\r\n                                <th scope=\"col\">EMAIL</th>\r\n                                <th scope=\"col\">BLOOD BANK</th>\r\n                                <th scope=\"col\">STATUS</th>\r\n                                <th scope=\"col\">ACTION</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {showRecipients()}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </BankContainer>\r\n    )\r\n}\r\n\r\nexport { AdminDonor, AdminRecipient };\r\n\r\nconst BankContainer = styled.div`\r\n.table{\r\n  border-radius: 5px 5px 0 0;\r\n  overflow: hidden;\r\n  box-shadow: 0 0 40px rgba(0,0,0,0.15);\r\n}\r\n.thead{\r\n    background-color:Black;\r\n    color:white;\r\n    font-weight:bold;\r\n    font-size:15px;\r\n    width:50%;\r\n}\r\n.table table-striped{\r\n    width:50%;\r\n}\r\n.body{\r\n    padding-left:20%;\r\n    padding-right:10%;\r\n    padding-top:3%;\r\n}\r\ntbody tr:last-of-type{\r\n  border-bottom:2px solid black;\r\n}\r\n.btn-group {\r\n    float: right;\r\n}\r\n\r\n.btn-group button {\r\n    border: 1px solid black;\r\n    color: white; \r\n    padding: 10px 24px; \r\n    cursor: pointer; \r\n    float: right; \r\n  }\r\n\r\n  .btn-group .dbtn{\r\n    background: linear-gradient(45deg, #cb2d3e, #ef473a);\r\n    color: #fff;\r\n    border: none;\r\n}\r\n\r\n.btn-group .dbtn:hover {\r\n    background: linear-gradient(45deg, #ef473a, #ef473a);\r\n\r\n}\r\n\r\n.btn\r\n {\r\n    margin-top: 10px;\r\n    margin-bottom: 25px;\r\n    position: relative;\r\n}\r\n\r\n.btn-primary{\r\n    left: 0px;\r\n    margin-left: 100px;\r\n}\r\n.btn-danger {\r\n    left: 0px;\r\n    margin-top: -90px;\r\n}\r\n\r\n\r\n@import url(https://fonts.googleapis.com/css?family=Roboto:300);\r\n\r\n \r\n.box{\r\n    background: none;\r\n    margin-top: 200px;\r\n\tpadding-top:300px;\r\n}\r\n\r\n.loader{\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    -webkit-transform: translate(-50%, -50%);\r\n    transform: translate(-50%, -50%);\r\n}​\r\n\t.back {\r\n\t\tmargin:1em auto;\r\n\t}\r\n\t.back span {\r\n\t\tfont-size:3em;\r\n\t\tcolor:#F2C640;;\r\n\t\tbackground: #e02525;\r\n\t\tdisplay:table-cell;\r\n\t\tbox-shadow:inset 0 0 5px rgba(0,0,0,0.3), 0 5px 0 #ccc;\r\n\t\tpadding: 0 15px;\r\n\t\tline-height: 100px;\r\n\t\tanimation:jumb 2s infinite;\r\n\t}\r\n\t@keyframes jumb {\r\n\t\t0% {\r\n\t\t\ttransform:translateY(0px)\r\n\t\t}\r\n\t\t50% {\r\n\t\t\ttransform:translateY(-30px);\r\n\t\t\tbox-shadow:0 15px 0 #F2C640;\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform:translateY(0px)\t\r\n\t\t}\r\n\t}\r\n\t.back span:nth-child(1) {\r\n\t\tanimation-delay:0s;\r\n\t}\r\n\t.back span:nth-child(2) {\r\n\t\tanimation-delay:.1s;\t\r\n\t}\r\n\t.back span:nth-child(3) {\r\n\t\tanimation-delay:.2s;\r\n\t}\r\n\t.back span:nth-child(4) {\r\n\t\tanimation-delay:.3s;\t\r\n\t}\r\n\t.back span:nth-child(5) {\r\n\t\tanimation-delay:.4s;\r\n\t}\r\n\t.back span:nth-child(6) {\r\n\t\tanimation-delay:.5s;\t\r\n\t}\r\n\t.back span:nth-child(7) {\r\n\t\tanimation-delay:.6s;\r\n\t}\r\n\r\n\r\n`;","E:\\Study\\ReactLearn\\blood-bank-system\\src\\index.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\Header.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\OurVision.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\signup-form-bloodBank.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankDonor.component.js",["157"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankHome.component.js",["158"],"import React, { useEffect, useContext, useState } from \"react\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../../context/userDetailContext';\r\nimport Axios from 'axios';\r\nimport AlertNotice from '../../misc/AlertNotice';\r\n\r\nfunction BankHome() {\r\n\r\n  //to prevent from loading if user is log out\r\n  const { userLoginData } = useContext(UserContext)\r\n  const [isLoading, setLoading] = useState(true);\r\n  const history = useHistory();\r\n  const [data, setData] = useState([]);\r\n  const [alert, setAlert] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (!userLoginData.userData)\r\n      history.push('/')\r\n    try {\r\n      if (userLoginData.userData.type !== \"BloodBank\")  //to prevent accessing any other type\r\n        history.push(`/${userLoginData.userData.type}`)\r\n\r\n      const getData = async () => {\r\n        await Axios.get(`http://localhost:5000/bloodBag/getBags/${userLoginData.userData.user_id}`)\r\n          .then((response) => {\r\n            setData(response.data);\r\n            console.log(response.data);\r\n          })\r\n        await Axios.get(`http://localhost:5000/bloodBag/Alerts/${userLoginData.userData.user_id}`)\r\n          .then((response) => {\r\n            setAlert(response.data);\r\n\r\n            setLoading(false);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error)\r\n          })\r\n      }\r\n\r\n      getData();\r\n\r\n    }\r\n    catch {\r\n      history.push('/')\r\n    }\r\n  }, [userLoginData])\r\n\r\n\r\n  const alerts = () => {\r\n    return (\r\n      alert.map((item) => {\r\n        return (\r\n          <AlertNotice alert = {item} />\r\n        )\r\n      })\r\n    )\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <HomeContainer>\r\n        <div class=\"box\">\r\n          <div class=\"loader\">\r\n            <span class=\"back\">\r\n              <span>L</span>\r\n              <span>O</span>\r\n              <span>A</span>\r\n              <span>D</span>\r\n              <span>I</span>\r\n              <span>N</span>\r\n              <span>G</span>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </HomeContainer>\r\n\r\n    )\r\n  }\r\n  return (\r\n    <HomeContainer>\r\n      <div class=\"body\">\r\n        <h1>Alerts</h1>\r\n        {alerts()}\r\n         <h1>Expired Bags</h1>\r\n        <table class=\"table table-striped\">\r\n          <thead class=\"thead\">\r\n            <tr>\r\n              <th scope=\"col\">ID</th>\r\n              <th scope=\"col\">BLOOD GROUP</th>\r\n              <th scope=\"col\">DATE DONATED</th>\r\n              <th scope=\"col\">DATE EXPIRED</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.bag.map((result, index) => {\r\n              return (\r\n                <tr>\r\n                  <td>{index + 1}</td>\r\n                  <td>{result.bloodGroup}</td>\r\n                  <td>{(new Date(result.created_at).toLocaleString().split(',')[0])}</td>\r\n                  <td>{(new Date(result.expiry_date).toLocaleString().split(',')[0])}</td>\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </HomeContainer>\r\n  )\r\n}\r\nexport default BankHome;\r\n\r\nconst HomeContainer = styled.div`\r\n\r\n.table{\r\n  border-radius: 5px 5px 0 0;\r\n  overflow: hidden;\r\n  box-shadow: 0 0 20px rgba(0,0,0,0.15);\r\n}\r\n\r\n.thead{\r\n    background-color:black;\r\n    color:white;\r\n    font-weight:bold;\r\n    font-size:15px;\r\n    width:50%;\r\n}\r\n.table table-striped{\r\n    width:50%;\r\n}\r\n.body{\r\n    padding-left:20%;\r\n    padding-right:10%;\r\n    padding-top:3%;\r\n}\r\n\r\ntbody tr:last-of-type{\r\n  border-bottom:2px solid black;\r\n}\r\n\r\n\r\n@import url(https://fonts.googleapis.com/css?family=Roboto:300);\r\n\r\n\r\n.alerts{\r\n    font-size:18px;\r\n    font-style:italic;\r\n    color:red;\r\n    font-weight:bold;\r\n    margin-bottom: 15px;\r\n    padding:3px;\r\n\r\n}\r\n.box{\r\n    background: none;\r\n    margin-top: 200px;\r\n\tpadding-top:300px;\r\n}\r\n\r\n.loader{\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    -webkit-transform: translate(-50%, -50%);\r\n    transform: translate(-50%, -50%);\r\n}​\r\n\r\n\r\n\t.back {\r\n\t\tmargin:1em auto;\r\n\t}\r\n\t.back span {\r\n\t\tfont-size:3em;\r\n\t\tcolor:#F2C640;;\r\n\t\tbackground: #e02525;\r\n\t\tdisplay:table-cell;\r\n\t\tbox-shadow:inset 0 0 5px rgba(0,0,0,0.3), 0 5px 0 #ccc;\r\n\t\tpadding: 0 15px;\r\n\t\tline-height: 100px;\r\n\t\tanimation:jumb 2s infinite;\r\n\t}\r\n\t@keyframes jumb {\r\n\t\t0% {\r\n\t\t\ttransform:translateY(0px)\r\n\t\t}\r\n\t\t50% {\r\n\t\t\ttransform:translateY(-30px);\r\n\t\t\tbox-shadow:0 15px 0 #F2C640;\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform:translateY(0px)\t\r\n\t\t}\r\n\t}\r\n\t.back span:nth-child(1) {\r\n\t\tanimation-delay:0s;\r\n\t}\r\n\t.back span:nth-child(2) {\r\n\t\tanimation-delay:.1s;\t\r\n\t}\r\n\t.back span:nth-child(3) {\r\n\t\tanimation-delay:.2s;\r\n\t}\r\n\t.back span:nth-child(4) {\r\n\t\tanimation-delay:.3s;\t\r\n\t}\r\n\t.back span:nth-child(5) {\r\n\t\tanimation-delay:.4s;\r\n\t}\r\n\t.back span:nth-child(6) {\r\n\t\tanimation-delay:.5s;\t\r\n\t}\r\n\t.back span:nth-child(7) {\r\n\t\tanimation-delay:.6s;\r\n\t}\r\n\r\n\r\n`;","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankStock.component.js",["159","160","161"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Donor\\DonorRequests.component.js",["162","163"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Admin\\AdminAlerts.component.js",["164"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Admin\\AdminManageBloodBanks.component.js",["165"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\context\\BloodGroupsList.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\misc\\AlertNotice.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\SidebarDataAdmin.js",["166"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\SidebarDataBloodBank.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\login-form.component.js",["167"],"\r\nimport React, { useState, useContext } from 'react';\r\nimport { useHistory } from \"react-router-dom\";   //after login we need to change the page\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../context/userDetailContext';  //to save data after registering\r\nimport ErrorNotice from '../misc/ErrorNotice'\r\n\r\nimport Axios from \"axios\"\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import Background from \"../../img/watercolor.png\"\r\n\r\n// var sectionStyle = {\r\n//     backgroundImage: `url(${ Background })`\r\n//   }\r\n\r\nexport default function Login() {\r\n\r\n    const [username, setUserName] = useState();\r\n    const [password, setPassword] = useState();\r\n\r\n    //for error\r\n    const [error, setError] = useState();\r\n\r\n    const { userLoginData, setUserLoginData } = useContext(UserContext);  //to save user_id for later use\r\n    const history = useHistory();  //to store history\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const loggedUser = { username, password };\r\n            //to login\r\n            const loginRes = await Axios.post(\"http://localhost:5000/login/accountLogin\", loggedUser);\r\n\r\n            setUserLoginData({\r\n                token: loginRes.data.token,\r\n                userData: loginRes.data.user,\r\n            });\r\n\r\n            localStorage.setItem(\"auth-token\", loginRes.data.token);\r\n            const type = loginRes.data.user.type;\r\n            history.push(`/${type}`);\r\n        } catch (err) {\r\n\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n    };\r\n\r\n    //style={ sectionStyle }\r\n\r\n    return (\r\n        <UserLoginContainer>\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"myCard\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"myLeftCtn\">\r\n                                    <form className=\"myForm text-center\">\r\n                                        <header>Sign In</header>\r\n                                        {error && (\r\n                                            <ErrorNotice message={error} clearError={() => setError(undefined)} />\r\n                                        )}\r\n                                        <div className=\"form-group\">\r\n                                            <i className=\"fas fa-user icon\"></i>\r\n                                            <input type=\"text\" className=\"myInput\" placeholder=\"Username\" id=\"username\" onChange={(e) => { setUserName(e.target.value) }} required />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <i className=\"fas fa-lock icon\"></i>\r\n                                            <input type=\"password\" className=\"myInput\" placeholder=\"password\" id=\"password\" onChange={(e) => setPassword(e.target.value)} required />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <input type=\"submit\" value=\"Login\" className=\"butt\" onClick={submit} />\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group Signup\">\r\n                                            <div className=\"d-flex justify-content-center\">\r\n                                                Don't have an account?<a href=\"/signup\">Sign Up</a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"myRightCtn\">\r\n                                    <div class=\"box\">\r\n                                        <h3>“There is no exercise better for the heart than reaching down and lifting people up.” </h3>\r\n                                        <p class=\"name\">-John Holmes</p>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </UserLoginContainer>\r\n    )\r\n}\r\n\r\nconst UserLoginContainer = styled.div`\r\n\r\n@import url('https://fonts.googleapis.com/css2?family=Righteous&display=swap');\r\n\r\n.container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height:100vh;  \r\n    max-width: 800px;\r\n}\r\n\r\n.myRightCtn {\r\n    position: relative;\r\n    background-image: linear-gradient(45deg, #cb2d3e, #ef473a);\r\n    border-radius: 25px;\r\n    height: 100%;\r\n    padding: 25px;\r\n    color: rgb(255, 249, 249);\r\n    font-size: 12px; \r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  \r\n  \r\n  .myLeftCtn {\r\n    position: relative;\r\n    background: rgb(247, 236, 236);\r\n    border-radius: 25px;\r\n    height: 100%;\r\n    padding: 25px;\r\n    padding-left: 50px;\r\n  }\r\n  \r\n  \r\n  .myLeftCtn header {\r\n    color: #cb2d3e;\r\n    font-size: 24px;\r\n    font-weight: 700;\r\n    margin-bottom: 20px;\r\n  }\r\n  .row{\r\n    height: 100%;\r\n} \r\n\r\n.myCard {\r\n    \r\n    background: rgb(247, 236, 236);;\r\n    border-radius: 25px;\r\n    -webkit-box-shadow: 0px 10px 40px -10px rgba(0, 0, 0, 0.7);\r\n    -moz-box-shadow: 0px 10px 40px -10px rgba(0, 0, 0, 0.7);\r\n    box-shadow: 0px 10px 40px -10px rgba(0, 0, 0, 0.7);\r\n} \r\n\r\n.box {\r\nposition: relative;\r\nmargin: 20px;\r\n]  } \r\n\r\n.box .name {\r\n  text-align: right;\r\n  font-style: italic;\r\n}\r\n\r\n.myLeftCtn .myInput {\r\n    width: 230px;\r\n    border-radius: 25px;\r\n    padding: 10px;\r\n    padding-left: 50px;\r\n    border: none;\r\n    -webkit-box-shadow: 0px 10px 49px -14px rgba(0, 0, 0, 0.7);\r\n    -moz-box-shadow: 0px 10px 49px -14px rgba(0, 0, 0, 0.7);\r\n    box-shadow: 0px 10px 49px -14px rgba(0, 0, 0, 0.7);\r\n  }\r\n  .myLeftCtn .myInput:focus {\r\n    outline: none;\r\n  } \r\n  .myForm {\r\n    position: relative;\r\n    margin-top: 50px;\r\n  } \r\n  .myLeftCtn .butt {\r\n    background: linear-gradient(45deg, #cb2d3e, #ef473a);\r\n    color: #fff;\r\n    width: 100px;\r\n    border: none;\r\n    border-radius: 25px;\r\n    padding: 10px;\r\n    -webkit-box-shadow: 0px 10px 41px -11px rgba(0, 0, 0, 0.7);\r\n    -moz-box-shadow: 0px 10px 41px -11px rgba(0, 0, 0, 0.7);\r\n    box-shadow: 0px 10px 41px -11px rgba(0, 0, 0, 0.7);\r\n  } \r\n  .myLeftCtn .butt:hover {\r\n    background: linear-gradient(45deg, #ef473a, #ef473a);\r\n  }\r\n  .myLeftCtn .butt:focus {\r\n    outline: none;\r\n  } \r\n\r\n  .myLeftCtn .icon {\r\n    position: relative;\r\n    color: #ef473a;\r\n    left: 36px;\r\n  } \r\n \r\n.Signup {\r\n    margin-top: 12px;\r\n}\r\n  \r\n\r\n\r\n`","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\Footer.component.js",["168"],"import React, { Component } from \"react\";\r\nimport styled from 'styled-components';\r\nimport logo from '../../img/logosd.png';\r\n//<link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.7.0/css/all.css\" integrity=\"sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ\" crossorigin=\"anonymous\"></link>\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <FooterContainer>\r\n        <footer>\r\n          <div className=\"container-fluid padding\">\r\n            <div className=\"row text-center\">\r\n              <div className=\"col-md-4\">\r\n                <img src={logo}/>\r\n                <hr className=\"light\" />\r\n                <h5>About</h5>\r\n                <hr className=\"light\" />\r\n                <p> Blood Bank Management System enables different blood banks to manage their stocks\r\n\t\t\tand donor and recievers to donate and recieve blood.</p>\r\n\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <hr className=\"light\" />\r\n                <h5>Contact Us</h5>\r\n                <hr className=\"light\" />\r\n                <p>123-456789-09</p>\r\n                <p>555 555 555</p>\r\n                <p>27th Avenue , Lahore</p>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <hr className=\"light\" />\r\n                <h5>Connect</h5>\r\n                <hr className=\"light\" />\r\n                  <i className=\"fab fa-facebook\"></i>\r\n                  <i className=\"fab fa-twitter\"></i>\r\n                  <i className=\"fab fa-instagram\"></i>\r\n                  <i className=\"fab fa-youtube\"></i>\r\n              </div>\r\n              <div className=\"col-12\">\r\n                <hr className=\"light-100\" />\r\n                <h6>&copy;{new Date().getFullYear()} Blood Bank System | All Rights Reserved | Terms Of Service | Privacy</h6>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </FooterContainer >\r\n    )\r\n  }\r\n}\r\n\r\n//\r\n\r\n\r\n\r\nexport default Footer;\r\n// #A72509;\r\nconst FooterContainer = styled.div`\r\n\r\n.fa-facebook {\r\ncolor: #3b5998;\r\n}\r\n\r\n.fa-twitter {\r\ncolor: #00aced;\r\n}\r\n\r\n.fa-instagram {\r\ncolor: #517fa8;\r\n}\r\n.fa-youtube {\r\ncolor: #bb0000;\r\n}\r\n\r\n.fa-youtube:hover, \r\n.fa-instagram:hover ,\r\n.fa-twitter:hover, \r\n.fa-facebook:hover {\r\ncolor: #d5d5d5;\r\n}\r\n\r\nfooter {\r\nbackground-color:#e02525;\r\ncolor: #ffffff;\r\nbottom: 0;\r\nwidth:100%;\r\npadding-top: 2em;\r\nmargin-top:2%;\r\n}\r\n\r\nhr.light {\r\nborder-top: 1px solid #d5d5d5;\r\nwidth: 75%;\r\nmargin-top:  .8rem;\r\nmargin-bottom: 1rem;\r\n}\r\n\r\nfooter i {\r\npadding:.5rem;\r\ncolor: #d5d5d5;\r\n}\r\n\r\nhr.light-100{\r\nborder-top: 1px solid #d5d5d5;\r\nwidth: 100%;\r\nmargin-top:  .8rem;\r\nmargin-bottom: 1rem;\r\n}\r\n\r\n`;",{"ruleId":"169","severity":1,"message":"170","line":58,"column":8,"nodeType":"171","endLine":58,"endColumn":23,"suggestions":"172"},{"ruleId":"173","severity":1,"message":"174","line":105,"column":113,"nodeType":"175","endLine":105,"endColumn":137},{"ruleId":"173","severity":1,"message":"174","line":110,"column":104,"nodeType":"175","endLine":110,"endColumn":128},{"ruleId":"173","severity":1,"message":"174","line":120,"column":118,"nodeType":"175","endLine":120,"endColumn":142},{"ruleId":"173","severity":1,"message":"174","line":125,"column":102,"nodeType":"175","endLine":125,"endColumn":126},{"ruleId":"173","severity":1,"message":"174","line":130,"column":90,"nodeType":"175","endLine":130,"endColumn":114},{"ruleId":"173","severity":1,"message":"174","line":135,"column":100,"nodeType":"175","endLine":135,"endColumn":124},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":28,"column":10,"nodeType":"182","messageId":"183","endLine":28,"endColumn":21},{"ruleId":"169","severity":1,"message":"184","line":57,"column":8,"nodeType":"171","endLine":57,"endColumn":23,"suggestions":"185"},{"ruleId":"180","severity":1,"message":"186","line":83,"column":11,"nodeType":"182","messageId":"183","endLine":83,"endColumn":21},{"ruleId":"173","severity":1,"message":"174","line":147,"column":112,"nodeType":"175","endLine":147,"endColumn":136},{"ruleId":"173","severity":1,"message":"174","line":152,"column":120,"nodeType":"175","endLine":152,"endColumn":144},{"ruleId":"173","severity":1,"message":"174","line":157,"column":120,"nodeType":"175","endLine":157,"endColumn":144},{"ruleId":"173","severity":1,"message":"174","line":162,"column":122,"nodeType":"175","endLine":162,"endColumn":146},{"ruleId":"173","severity":1,"message":"174","line":167,"column":116,"nodeType":"175","endLine":167,"endColumn":140},{"ruleId":"173","severity":1,"message":"174","line":172,"column":108,"nodeType":"175","endLine":172,"endColumn":132},{"ruleId":"187","severity":1,"message":"188","line":375,"column":1,"nodeType":"189","messageId":"190","endLine":383,"endColumn":29},{"ruleId":"169","severity":1,"message":"184","line":62,"column":8,"nodeType":"171","endLine":62,"endColumn":23,"suggestions":"191"},{"ruleId":"173","severity":1,"message":"174","line":151,"column":112,"nodeType":"175","endLine":151,"endColumn":136},{"ruleId":"173","severity":1,"message":"174","line":156,"column":104,"nodeType":"175","endLine":156,"endColumn":128},{"ruleId":"173","severity":1,"message":"174","line":166,"column":118,"nodeType":"175","endLine":166,"endColumn":142},{"ruleId":"173","severity":1,"message":"174","line":171,"column":102,"nodeType":"175","endLine":171,"endColumn":126},{"ruleId":"173","severity":1,"message":"174","line":176,"column":89,"nodeType":"175","endLine":176,"endColumn":113},{"ruleId":"173","severity":1,"message":"174","line":181,"column":103,"nodeType":"175","endLine":181,"endColumn":127},{"ruleId":"173","severity":1,"message":"174","line":186,"column":100,"nodeType":"175","endLine":186,"endColumn":124},{"ruleId":"173","severity":1,"message":"174","line":191,"column":103,"nodeType":"175","endLine":191,"endColumn":127},{"ruleId":"173","severity":1,"message":"174","line":196,"column":107,"nodeType":"175","endLine":196,"endColumn":131},{"ruleId":"169","severity":1,"message":"184","line":62,"column":8,"nodeType":"171","endLine":62,"endColumn":23,"suggestions":"192"},{"ruleId":"173","severity":1,"message":"174","line":152,"column":112,"nodeType":"175","endLine":152,"endColumn":136},{"ruleId":"173","severity":1,"message":"174","line":157,"column":104,"nodeType":"175","endLine":157,"endColumn":128},{"ruleId":"173","severity":1,"message":"174","line":167,"column":118,"nodeType":"175","endLine":167,"endColumn":142},{"ruleId":"173","severity":1,"message":"174","line":172,"column":102,"nodeType":"175","endLine":172,"endColumn":126},{"ruleId":"173","severity":1,"message":"174","line":177,"column":88,"nodeType":"175","endLine":177,"endColumn":112},{"ruleId":"173","severity":1,"message":"174","line":182,"column":103,"nodeType":"175","endLine":182,"endColumn":127},{"ruleId":"173","severity":1,"message":"174","line":187,"column":100,"nodeType":"175","endLine":187,"endColumn":124},{"ruleId":"173","severity":1,"message":"174","line":192,"column":103,"nodeType":"175","endLine":192,"endColumn":127},{"ruleId":"173","severity":1,"message":"174","line":197,"column":107,"nodeType":"175","endLine":197,"endColumn":131},{"ruleId":"180","severity":1,"message":"193","line":17,"column":12,"nodeType":"182","messageId":"183","endLine":17,"endColumn":16},{"ruleId":"169","severity":1,"message":"170","line":49,"column":8,"nodeType":"171","endLine":49,"endColumn":23,"suggestions":"194"},{"ruleId":"173","severity":1,"message":"174","line":91,"column":113,"nodeType":"175","endLine":91,"endColumn":137},{"ruleId":"173","severity":1,"message":"174","line":96,"column":119,"nodeType":"175","endLine":96,"endColumn":143},{"ruleId":"173","severity":1,"message":"174","line":101,"column":103,"nodeType":"175","endLine":101,"endColumn":127},{"ruleId":"173","severity":1,"message":"174","line":106,"column":101,"nodeType":"175","endLine":106,"endColumn":125},{"ruleId":"169","severity":1,"message":"170","line":57,"column":8,"nodeType":"171","endLine":57,"endColumn":23,"suggestions":"195"},{"ruleId":"173","severity":1,"message":"174","line":103,"column":112,"nodeType":"175","endLine":103,"endColumn":136},{"ruleId":"173","severity":1,"message":"174","line":108,"column":104,"nodeType":"175","endLine":108,"endColumn":128},{"ruleId":"173","severity":1,"message":"174","line":118,"column":118,"nodeType":"175","endLine":118,"endColumn":142},{"ruleId":"173","severity":1,"message":"174","line":123,"column":102,"nodeType":"175","endLine":123,"endColumn":126},{"ruleId":"173","severity":1,"message":"174","line":128,"column":89,"nodeType":"175","endLine":128,"endColumn":113},{"ruleId":"173","severity":1,"message":"174","line":133,"column":99,"nodeType":"175","endLine":133,"endColumn":123},{"ruleId":"169","severity":1,"message":"184","line":92,"column":8,"nodeType":"171","endLine":92,"endColumn":23,"suggestions":"196"},{"ruleId":"169","severity":1,"message":"184","line":204,"column":8,"nodeType":"171","endLine":204,"endColumn":23,"suggestions":"197"},{"ruleId":"169","severity":1,"message":"184","line":92,"column":6,"nodeType":"171","endLine":92,"endColumn":21,"suggestions":"198"},{"ruleId":"169","severity":1,"message":"184","line":48,"column":6,"nodeType":"171","endLine":48,"endColumn":21,"suggestions":"199"},{"ruleId":"200","severity":1,"message":"201","line":26,"column":18,"nodeType":"202","messageId":"203","endLine":26,"endColumn":20},{"ruleId":"200","severity":1,"message":"201","line":29,"column":35,"nodeType":"202","messageId":"203","endLine":29,"endColumn":37},{"ruleId":"169","severity":1,"message":"184","line":52,"column":6,"nodeType":"171","endLine":52,"endColumn":21,"suggestions":"204"},{"ruleId":"180","severity":1,"message":"205","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":26},{"ruleId":"169","severity":1,"message":"184","line":33,"column":6,"nodeType":"171","endLine":33,"endColumn":21,"suggestions":"206"},{"ruleId":"169","severity":1,"message":"184","line":57,"column":6,"nodeType":"171","endLine":57,"endColumn":21,"suggestions":"207"},{"ruleId":"169","severity":1,"message":"184","line":74,"column":8,"nodeType":"171","endLine":74,"endColumn":23,"suggestions":"208"},{"ruleId":"180","severity":1,"message":"209","line":6,"column":10,"nodeType":"182","messageId":"183","endLine":6,"endColumn":23},{"ruleId":"180","severity":1,"message":"210","line":25,"column":13,"nodeType":"182","messageId":"183","endLine":25,"endColumn":26},{"ruleId":"211","severity":1,"message":"212","line":14,"column":17,"nodeType":"213","endLine":14,"endColumn":34},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'props.match.params.id'. Either include them or remove the dependency array.","ArrayExpression",["214"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-native-reassign",["215"],"no-negated-in-lhs",["216"],"no-unused-vars","'profileData' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["217"],"'unregister' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["218"],["219"],"'type' is assigned a value but never used.",["220"],["221"],["222"],["223"],["224"],["225"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["226"],"'Component' is defined but never used.",["227"],["228"],["229"],"'GrUserManager' is defined but never used.","'userLoginData' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"230","fix":"231"},"no-global-assign","no-unsafe-negation",{"desc":"232","fix":"233"},{"desc":"232","fix":"234"},{"desc":"232","fix":"235"},{"desc":"230","fix":"236"},{"desc":"230","fix":"237"},{"desc":"232","fix":"238"},{"desc":"232","fix":"239"},{"desc":"232","fix":"240"},{"desc":"232","fix":"241"},{"desc":"232","fix":"242"},{"desc":"232","fix":"243"},{"desc":"232","fix":"244"},{"desc":"232","fix":"245"},"Update the dependencies array to be: [history, props.match.params.id, userLoginData]",{"range":"246","text":"247"},"Update the dependencies array to be: [history, userLoginData]",{"range":"248","text":"249"},{"range":"250","text":"249"},{"range":"251","text":"249"},{"range":"252","text":"247"},{"range":"253","text":"247"},{"range":"254","text":"249"},{"range":"255","text":"249"},{"range":"256","text":"249"},{"range":"257","text":"249"},{"range":"258","text":"249"},{"range":"259","text":"249"},{"range":"260","text":"249"},{"range":"261","text":"249"},[1991,2006],"[history, props.match.params.id, userLoginData]",[1885,1900],"[history, userLoginData]",[2146,2161],[2155,2170],[1574,1589],[2039,2054],[2668,2683],[6495,6510],[2383,2398],[1487,1502],[1608,1623],[1048,1063],[1606,1621],[2032,2047]]