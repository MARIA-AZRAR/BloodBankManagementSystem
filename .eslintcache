[{"E:\\Study\\ReactLearn\\blood-bank-system\\src\\App.js":"1","E:\\Study\\ReactLearn\\blood-bank-system\\src\\context\\userDetailContext.js":"2","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\signup-form-bloodBank.component.js":"3","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\Header.component.js":"4","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\OurVision.component.js":"5","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankReciever.component.js":"6","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\updateProfile.js":"7","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Recipient\\SendRequest.component.js":"8","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Recipient\\ViewRequest.component.js":"9","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\authButtonOptions.js":"10","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\SidebarDataDonor.js":"11","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\SidebarDataBloodBank.js":"12","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\signup-form-Donor.component.js":"13","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\SidebarDataRecipient.js":"14","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankProfile.component.js":"15","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\Footer.component.js":"16","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankHome.component.js":"17","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\signup-form-Recipient.component.js":"18","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankDonor.component.js":"19","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Donor\\DonorDonations.component.js":"20","E:\\Study\\ReactLearn\\blood-bank-system\\src\\context\\BloodGroupsList.js":"21","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\misc\\ErrorNotice.js":"22","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\Sidebar.component.js":"23","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\login-form.component.js":"24","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankStock.component.js":"25","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Donor\\DonorRequests.component.js":"26","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Recipient\\SearchDonor.component.js":"27","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankRequest.component.js":"28"},{"size":5902,"mtime":1611401991116,"results":"29","hashOfConfig":"30"},{"size":204,"mtime":1609960937164,"results":"31","hashOfConfig":"30"},{"size":6967,"mtime":1610111934776,"results":"32","hashOfConfig":"30"},{"size":1900,"mtime":1610387672585,"results":"33","hashOfConfig":"30"},{"size":2196,"mtime":1610742548164,"results":"34","hashOfConfig":"30"},{"size":5968,"mtime":1611361653667,"results":"35","hashOfConfig":"30"},{"size":8036,"mtime":1611361902725,"results":"36","hashOfConfig":"30"},{"size":5419,"mtime":1611072141826,"results":"37","hashOfConfig":"30"},{"size":3001,"mtime":1611477052446,"results":"38","hashOfConfig":"30"},{"size":1177,"mtime":1610113393110,"results":"39","hashOfConfig":"30"},{"size":830,"mtime":1610387672742,"results":"40","hashOfConfig":"30"},{"size":1131,"mtime":1611401719738,"results":"41","hashOfConfig":"30"},{"size":9266,"mtime":1610827992642,"results":"42","hashOfConfig":"30"},{"size":965,"mtime":1611003723663,"results":"43","hashOfConfig":"30"},{"size":10797,"mtime":1611401719739,"results":"44","hashOfConfig":"30"},{"size":2613,"mtime":1610465721522,"results":"45","hashOfConfig":"30"},{"size":4742,"mtime":1611507852022,"results":"46","hashOfConfig":"30"},{"size":9291,"mtime":1610807280518,"results":"47","hashOfConfig":"30"},{"size":5852,"mtime":1611361301310,"results":"48","hashOfConfig":"30"},{"size":2951,"mtime":1610993247460,"results":"49","hashOfConfig":"30"},{"size":75,"mtime":1610656724647,"results":"50","hashOfConfig":"30"},{"size":894,"mtime":1610059042726,"results":"51","hashOfConfig":"30"},{"size":3317,"mtime":1610387672731,"results":"52","hashOfConfig":"30"},{"size":4086,"mtime":1610803640036,"results":"53","hashOfConfig":"30"},{"size":3254,"mtime":1610388867697,"results":"54","hashOfConfig":"30"},{"size":2951,"mtime":1610913946499,"results":"55","hashOfConfig":"30"},{"size":3912,"mtime":1611346728524,"results":"56","hashOfConfig":"30"},{"size":6019,"mtime":1611489808834,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},"1ngak6v",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"61"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"61"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},"E:\\Study\\ReactLearn\\blood-bank-system\\src\\App.js",["122"],"import React, { useState, useEffect } from 'react';  //useEffect will run exactly 1 time \n//when component loaded or each time component has been switched \n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Axios from 'axios';\n\n//Blood Bank\nimport BankHome from './Components/pages/BloodBank/BankHome.component';\nimport BankDonor from './Components/pages/BloodBank/BankDonor.component';\nimport BankReciever from './Components/pages/BloodBank/BankReciever.component';\nimport BankRequest from './Components/pages/BloodBank/BankRequest.component';\nimport BankStock from './Components/pages/BloodBank/BankStock.component';\nimport UpdateProfile from './Components/pages/BloodBank/updateProfile';\nimport BankProfile from './Components/pages/BloodBank/BankProfile.component';\n\n\nimport Login from './Components/auth/login-form.component';\nimport LoginAdmin from './Components/auth/login-form-admin.component';\nimport SignupBloodBank from './Components/auth/signup-form-bloodBank.component';\nimport {SignupDonor} from './Components/auth/signup-form-Donor.component';\nimport {SignupRecipinet} from './Components/auth/signup-form-Recipient.component';\n\n//import Navbar from './Components/navbar.component';\nimport Header from './Components/layout/Header.component';\nimport Footer from './Components/layout/Footer.component';\nimport Navbar from './Components/layout/Navbar'\nimport AboutUs from './Components/layout/OurVision.component';\n\n//extras\nimport UserContext from './context/userDetailContext';\n\n//Donor\n\nimport DonorDonations from './Components/pages/Donor/DonorDonations.component';\nimport DonorRequests from './Components/pages/Donor/DonorRequests.component';\nimport DonorMakeDonations from './Components/pages/Donor/DonorMakeDonations.component';\nimport DonorProfile from './Components/pages/Donor/DonorProfile.component';\n\n\n//Recipient\n\n\nimport RecipientSendRequest from './Components/pages/Recipient/SendRequest.component';\nimport SearchDonor  from './Components/pages/Recipient/SearchDonor.component';\nimport RecipientRequests from './Components/pages/Recipient/ViewRequest.component';\nimport RecipientProfile from './Components/pages/Recipient/RecipientProfile.component';\n\n\n\nfunction App() {\n\n  const [userLoginData, setUserLoginData] = useState({  //this state will store the user data needed in all app like id\n    token: undefined,\n    userData: undefined\n  });\n\n  //now we need to get the token from the session if any and check if its valid or not to login the user\n  useEffect(() => {  //useEffect needs arrow func which can't be async \n    const checkUserLogin = async () => {  //data is required to be accssed from backend so async thats why another fun is created in usecase arroe func\n      let sessionToken = localStorage.getItem(\"auth-token\"); //if no key with this name w'll get a null in session token\n         console.log(sessionToken);\n      if (sessionToken === null) {  //a null session token can erase error at the backend \n        localStorage.setItem(\"auth-token\", \"\")  //adding key in local storage & value will be given later\n        sessionToken = \"\"   //so assigning it the empty string\n      }\n      //now checkiing if user is logged in by giving a post request to if token is valid\n      const tokenResponse = await Axios.post(\n        \"http://localhost:5000/login/IsValidToken\",\n        null,\n        {\n          headers: { \"auth-token\": sessionToken }\n        });  //data is null but it has a header which will have a token\n\n      if (tokenResponse.data) {  //true if user logged in\n        const userResponse = await Axios.get(\"http://localhost:5000/login/\", {\n          headers: { \"auth-token\": sessionToken }\n        });\n\n        setUserLoginData({\n          token: sessionToken,\n          userData: userResponse.data\n        });\n      }\n    }\n    checkUserLogin();\n  }, []) \n\n  return (\n    <>\n      <Header />\n      <UserContext.Provider value={{ userLoginData, setUserLoginData }}>\n        <Router>\n          <Navbar />\n          <Route path=\"/\" exact component={AboutUs} />\n          <Route path=\"/signup\" exact component={SignupBloodBank} />\n\n          <Route path=\"/Admin\" exact component={LoginAdmin} />\n          <Route path=\"/signin\" exact component={Login} />\n          <Route path=\"/signup-donor\" exact component = {SignupDonor} />\n          <Route path=\"/signup-recipient\" exact component = {SignupRecipinet}/>\n          <Route path=\"/BloodBank\" exact component={BankHome} />\n          <Route path=\"/BloodBank/Donor\" exact component={BankDonor} />\n          <Route path=\"/BloodBank/ProfileEdit/:id\" exact component = {UpdateProfile} />\n          <Route path=\"/BloodBank/Reciever\" exact component={BankReciever} />\n          <Route path=\"/BloodBank/Request\" exact component={BankRequest} />\n          <Route path=\"/BloodBank/Stock\" exact component={BankStock} />\n          <Route path=\"/BloodBank/Profile\" exact component={BankProfile} />\n\n    \n          <Route path=\"/Donor\" exact component={DonorDonations} />\n          <Route path=\"/Donor/Requests\" exact component={DonorRequests} />\n          <Route path=\"/Donor/MakeDonations\" exact component={DonorMakeDonations} />\n          <Route path=\"/Donor/Profile\" exact component={DonorProfile} />\n\n          <Route path=\"/Recipient\" exact component={RecipientSendRequest} />\n          <Route path=\"/Recipient/SendRequest\" exact component={RecipientSendRequest} />\n          <Route path=\"/Recipient/Request\" exact component={RecipientRequests} />\n          <Route path=\"/Recipient/SearchDonor\" exact component={SearchDonor} />\n          <Route path=\"/Recipient/Profile\" exact component={RecipientProfile} />\n        </Router>\n        <Footer />\n      </UserContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n\n//        \n\n\n//import './App.css';\n\n\n\n/*\n <Navbar />\n      <SignupBloodBank />\n      <Login/>\n      <LoginAdmin />\n*/",["123","124"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\context\\userDetailContext.js",[],["125","126"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\signup-form-bloodBank.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\Header.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\OurVision.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankReciever.component.js",["127"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\updateProfile.js",["128"],"import React, { useEffect, useContext, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../../context/userDetailContext'\r\nimport Axios from 'axios'\r\nimport { bloodGroups } from '../../../context/BloodGroupsList';\r\nimport ErrorNotice from '../../misc/ErrorNotice';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n\r\nfunction UpdateProfile(props) {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const [contact, setContact] = useState(\"\");\r\n    const [age, setAge] = useState(\"\");\r\n    const [bloodGroup, setBloodGroup] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [type, setType] = useState(\"\")\r\n\r\n    //for error\r\n    const [error, setError] = useState();\r\n\r\n\r\n    const { userLoginData } = useContext(UserContext)\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (!userLoginData.userData)\r\n            history.push('/')\r\n        try {\r\n            if (userLoginData.userData.type !== \"BloodBank\")\r\n                history.push(`/${userLoginData.userData.type}`)\r\n\r\n            Axios.get('http://localhost:5000/user/' + props.match.params.id)\r\n                .then(response => {\r\n\r\n                    setName(response.data.name);\r\n                    setAddress(response.data.address);\r\n                    setEmail(response.data.email);\r\n                    setBloodGroup(response.data.bloodGroup);\r\n                    setAge(response.data.age);\r\n                    setContact(response.data.contact);\r\n                    setType(response.data.type)\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n        }\r\n        catch {\r\n            history.push('/')\r\n        }\r\n    }, [userLoginData])\r\n\r\n\r\n    const back = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if(type === \"Donor\")\r\n           history.push('/BloodBank/Donor')\r\n        else\r\n        history.push('/BloodBank/Reciever')\r\n    }\r\n\r\n    const update = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n\r\n            const updatedUser = { name, address, contact, age, bloodGroup, email };\r\n            await Axios.post(`http://localhost:5000/user/update/${props.match.params.id}`, updatedUser);  //user and its login data in diff tables\r\n\r\n            Swal.fire(\r\n                'Good job!',\r\n                'Profile Updated Successfully',\r\n                'success'\r\n            )\r\n\r\n        } catch (err) {\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <RecipientProfileContainer>\r\n            <div>\r\n                <h1 className=\"heading\">Update Profile:</h1>\r\n                <div className=\"container container-fluid\">\r\n                    <div className=\"d-flex justify-content-center h-100\">\r\n                        <div class=\"card signupCard\">\r\n                            <div className=\"card-body\">\r\n                                <h3>Profile</h3>\r\n                                {error && (\r\n                                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\r\n                                )}\r\n                                <form>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"bloodBankName\" >Name: </label>\r\n                                        <input id=\"bloodBankName\" type=\"text\" value={name} className=\"form-control\"\r\n                                            onChange={(e) => setName(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"bloodGroup\" >Blood Group: </label>\r\n                                        <select value={bloodGroup} id=\"bloodGroup\" className=\"form-control\" onChange={(e) => setBloodGroup(e.target.value)}>\r\n                                            {bloodGroups.map(item => {\r\n                                                return (\r\n                                                    <option value={item}> {item} </option>\r\n                                                )\r\n                                            })}\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankAddress\" >Address: </label>\r\n                                        <input id=\"BloodBankAddress\" value={address} type=\"text\" className=\"form-control\"\r\n                                            onChange={(e) => setAddress(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankContact\" >Contact No: </label>\r\n                                        <input id=\"BloodBankContact\" type=\"text\" className=\"form-control\"\r\n                                            value={contact} onChange={(e) => setContact(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"age\" >Age: </label>\r\n                                        <input id=\"age\" type=\"text\" className=\"form-control\"\r\n                                            value={age} onChange={(e) => setAge(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankEmail\" >Email: </label>\r\n                                        <input id=\"BloodBankEmail\" type=\"text\" className=\"form-control\"\r\n                                            value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"submit\" value=\"Back\" className=\"btn float-right back_btn\" onClick={back} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn float-right update_btn\" onClick={update} />\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </RecipientProfileContainer>\r\n    )\r\n\r\n}\r\n\r\nexport default UpdateProfile;\r\n\r\nconst RecipientProfileContainer = styled.div`\r\n\r\n@import url('https://fonts.googleapis.com/css2?family=Righteous&display=swap');\r\n\r\nhtml,body{\r\nheight: 100%;\r\n}\r\n\r\n.spinnerl{\r\n    padding-top:150px;\r\n    padding-bottom:150px;\r\n    \r\n}\r\n\r\nlabel {\r\npadding-right: 20px;\r\n}\r\n.container{\r\nheight: 100%;\r\nalign-content: center;\r\npadding-top: 50px;\r\nfont-family: 'Righteous', cursive;\r\n}\r\n\r\n.signupCard{\r\nheight: 650px;\r\nalign-content: center;\r\nmargin: auto;\r\nwidth: 500px;\r\nbackground-color: rgba(15, 74, 92, 0.473) ;\r\n}\r\n\r\n.card-header {\r\nbackground-color: white;\r\n}\r\n.card-body h3{\r\ncolor: white;\r\ntext-align:center;\r\npadding-bottom:5px;\r\n}\r\n#blood{\r\n    width:75%;\r\n    border:none;\r\n}\r\n\r\n.update_btn{\r\ncolor: black;\r\nbackground-color: #FFC312;\r\nwidth: 100px;\r\nmargin: 0 40px;\r\n}\r\n\r\n.update_btn:hover{\r\ncolor: black;\r\nbackground-color: white;\r\n}\r\n\r\n.back_btn{\r\n    color: white;\r\n    background-color: #e02525;\r\n    width: 100px;\r\n    margin: 0 40px;\r\n}\r\n    \r\n.back_btn:hover{\r\ncolor: black;\r\nbackground-color: white;\r\n}\r\n\r\n.ButtonGroup {\r\n    margin: auto;\r\n    justify-content: center;\r\n}\r\n.heading{\r\n    padding-top:5%;\r\n    padding-left:30%\r\n}\r\n`\r\n\r\n","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Recipient\\SendRequest.component.js",["129","130"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { bloodGroups } from '../../../context/BloodGroupsList';\r\nimport UserContext from '../../../context/userDetailContext'\r\nimport Axios from 'axios';\r\nimport ErrorNotice from '../../misc/ErrorNotice';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport default function RecipientSendRequest() {\r\n    const [date, setDate] = useState();\r\n    const [address, setAddress] = useState();\r\n    const [quantity, setQuantity] = useState();\r\n    const [bloodGroup, setBloodGroup] = useState();\r\n\r\n    const { userLoginData} = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    const [user_id , setUserId] = useState(userLoginData.userData.user_id)\r\n    const [error, setError] = useState();\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userLoginData.userData)\r\n            history.push('/')\r\n        try {\r\n            if (userLoginData.userData.type !== \"Recipient\")\r\n                history.push(`/${userLoginData.userData.type}`)\r\n\r\n        }\r\n        catch {\r\n            history.push('/')\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n\r\n            const newRequest = { date, address, quantity, bloodGroup , user_id };\r\n            await Axios.post(\"http://localhost:5000/bloodRequest/addBloodRequest\" , newRequest);  //user and its login data in diff tables\r\n\r\n            Swal.fire(\r\n                'Good job!',\r\n                'Your Request have been posted',\r\n                'success'\r\n            ) \r\n\r\n        } catch (err) {\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <RecipientRequestContainer>\r\n            <div>\r\n                <div className=\"container container-fluid\">\r\n                    <div className=\"d-flex justify-content-center h-100\">\r\n                        <div class=\"card signupCard\">\r\n\r\n                            <div className=\"card-body\">\r\n                                <h3>Request For Blood</h3>\r\n                                {error && (\r\n                                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\r\n                                )}\r\n                                <form>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"bloodBankName\" >Blood Group: </label>\r\n                                        <select id=\"blood\" name=\"bloodGroup\" onChange={(e) => { setBloodGroup(e.target.value) }}>\r\n                                            {bloodGroups.map(item => {\r\n                                                return (\r\n                                                    <option value={item}> {item} </option>\r\n                                                )\r\n                                            })}\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankAddress\" >Due Date: </label>\r\n                                        <input id=\"BloodBankAddress\" type=\"date\" className=\"form-control\" onChange={(e) => { setDate(e.target.value) }} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankContact\" >Address: </label>\r\n                                        <input id=\"BloodBankContact\" type=\"text\" className=\"form-control\" onChange={(e) => { setAddress(e.target.value) }} />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankUsername\" >Quantity: </label>\r\n                                        <input id=\"BloodBankUsername\" type=\"text\" className=\"form-control\" onChange={(e) => { setQuantity(e.target.value) }} />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"submit\" value=\"Request\" className=\"btn float-right login_btn\" onClick={submit} />\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </RecipientRequestContainer>\r\n    )\r\n}\r\n\r\nconst RecipientRequestContainer = styled.div`\r\n\r\n@import url('https://fonts.googleapis.com/css2?family=Righteous&display=swap');\r\n\r\nhtml,body{\r\nheight: 100%;\r\n}\r\n\r\nlabel {\r\npadding-right: 20px;\r\n}\r\n\r\n.container{\r\nheight: 100%;\r\nalign-content: center;\r\npadding-top: 40px;\r\nfont-family: 'Righteous', cursive;\r\n}\r\n\r\n.signupCard{\r\nheight: 370px;\r\nalign-content: center;\r\nmargin: auto;\r\nwidth: 500px;\r\nbackground-color: rgba(15, 74, 92, 0.473) ;\r\n}\r\n\r\n.card-body h3{\r\ncolor: white;\r\n}\r\n\r\n#blood{\r\n    width:75%;\r\n    border:none;\r\n}\r\n\r\n\r\n.login_btn{\r\ncolor: black;\r\nbackground-color: #FFC312;\r\nwidth: 100px;\r\n}\r\n\r\n.login_btn:hover{\r\ncolor: black;\r\nbackground-color: white;\r\n}\r\n\r\n.ButtonGroup {\r\n    margin: auto;\r\n    justify-content: center;\r\n}\r\n\r\n\r\n`","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Recipient\\ViewRequest.component.js",["131"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\authButtonOptions.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\SidebarDataDonor.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\SidebarDataBloodBank.js",[],["132","133"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\signup-form-Donor.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\SidebarDataRecipient.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankProfile.component.js",["134","135","136"],"import React, { useEffect, useContext, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../../context/userDetailContext'\r\nimport Axios from 'axios'\r\nimport ErrorNotice from '../../misc/ErrorNotice';\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\n\r\nfunction BankProfile() {\r\n\r\n    const [name, setName] = useState();\r\n    const [address, setAddress] = useState();\r\n    const [contact, setContact] = useState();\r\n    const [username, setUserName] = useState();\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n\r\n    //for error\r\n    const [error, setError] = useState();\r\n\r\n\r\n     const { userLoginData, setUserLoginData } = useContext(UserContext)\r\n     const history = useHistory();\r\n\r\n    const [isLoading, setLoading] = useState(true);  //for 1st loading data\r\n    let [profileData, setProfileData] = useState();\r\n\r\n     useEffect(() => {\r\n         if (!userLoginData.userData)\r\n            history.push('/')\r\n      try {\r\n           if (userLoginData.userData.type !== \"BloodBank\")\r\n                history.push(`/${userLoginData.userData.type}`)\r\n\r\n            const getData = async () => {\r\n                const userResponse = await Axios.get(\"http://localhost:5000/login/profile\", {\r\n                    headers: { \"auth-token\": userLoginData.token }\r\n                });\r\n                setProfileData(userResponse.data)\r\n                setName(userResponse.data.name);\r\n                setAddress(userResponse.data.address)\r\n                setContact(userResponse.data.contact)\r\n                setEmail(userResponse.data.email)\r\n                setUserName(userResponse.data.username)\r\n\r\n                setLoading(false);\r\n            }\r\n            getData();\r\n\r\n        }\r\n        catch {\r\n            history.push('/')\r\n        }\r\n\r\n    }, [userLoginData])\r\n\r\n\r\n    const update = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n\r\n            const updatedUser = { name, address, contact,email };\r\n            await Axios.post(`http://localhost:5000/user/update/${userLoginData.userData.user_id}`, updatedUser);  //user and its login data in diff tables\r\n            const UpdatedLogin = { username, password }\r\n            await Axios.post(`http://localhost:5000/login/update/${userLoginData.userData.id}`, UpdatedLogin);  //user and its login data in diff tables\r\n\r\n            Swal.fire(\r\n                'Good job!',\r\n                'Your Profile Updated Successfully',\r\n                'success'\r\n            ) //user and its login data in diff tables\r\n\r\n\r\n\r\n        } catch (err) {\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n    };\r\n\r\n\r\n    const unregister = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n                await Axios.delete(` http://localhost:5000/login/delete`,\r\n                {\r\n                    headers: { \"auth-token\": userLoginData.token }\r\n                });  //user and its login data in diff tables\r\n\r\n            Swal.fire(\r\n                'Deleted',\r\n                'Awww! Sad to See You Go.',\r\n                'success'\r\n            ) //user and its login data in diff tables\r\n\r\n            setUserLoginData({\r\n                token: undefined,\r\n                userData: undefined,\r\n            });\r\n            localStorage.setItem(\"auth-token\", \"\");\r\n            history.push(\"/\")\r\n\r\n        } catch (err) {\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <BankProfileContainer>\r\n                <div class=\"box\">\r\n                    <div class=\"loader\">\r\n                        <span class=\"back\">\r\n                            <span>L</span>\r\n                            <span>O</span>\r\n                            <span>A</span>\r\n                            <span>D</span>\r\n                            <span>I</span>\r\n                            <span>N</span>\r\n                            <span>G</span>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </BankProfileContainer>\r\n\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <BankProfileContainer>\r\n            <div>\r\n                <h1 className=\"heading\">Update Profile:</h1>\r\n                <div className=\"container container-fluid\">\r\n                    <div className=\"d-flex justify-content-center h-100\">\r\n                        <div class=\"card signupCard\">\r\n                            <div className=\"card-body\">\r\n                                <h3>Profile</h3>\r\n                                {error && (\r\n                                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\r\n                                )}\r\n                                <form>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"bloodBankName\" >Name: </label>\r\n                                        <input id=\"bloodBankName\" type=\"text\" value={name} className=\"form-control\"\r\n                                          onChange={(e) => setName(e.target.value)}    />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankAddress\" >Address: </label>\r\n                                        <input id=\"BloodBankAddress\"  value={address}  type=\"text\" className=\"form-control\"\r\n                                           onChange={(e) => setAddress(e.target.value)}  />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankContact\" >Contact No: </label>\r\n                                        <input id=\"BloodBankContact\"  value={contact}  type=\"text\" className=\"form-control\"\r\n                                          onChange={(e) => setContact(e.target.value)}   />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankUsername\" >Username: </label>\r\n                                        <input id=\"BloodBankUsername\"  value={username}  type=\"text\" className=\"form-control\"\r\n                                          onChange={(e) => setUserName(e.target.value)}  />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankEmail\" >Email: </label>\r\n                                        <input id=\"BloodBankEmail\"  value={email}  type=\"text\" className=\"form-control\"\r\n                                         onChange={(e) => setEmail(e.target.value)}    />\r\n                                    </div>\r\n                                    <div className=\"input-group form-group\">\r\n                                        <label for=\"BloodBankPassword\" >Password: </label>\r\n                                        <input id=\"BloodBankPassword\"  type=\"password\" className=\"form-control\"\r\n                                         onChange={(e) => setPassword(e.target.value)}   />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"submit\" value=\"Unregister\" className=\"btn float-right unregister_btn\" onClick={unregister} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn float-right update_btn\" onClick={update}  />\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </BankProfileContainer>\r\n    )\r\n\r\n}\r\n\r\nexport default BankProfile;\r\n\r\nconst BankProfileContainer = styled.div`\r\n\r\n@import url('https://fonts.googleapis.com/css2?family=Righteous&display=swap');\r\n\r\nhtml,body{\r\nheight: 100%;\r\n}\r\n\r\n.spinnerl{\r\n    padding-top:150px;\r\n    padding-bottom:150px;\r\n    \r\n}\r\n\r\nlabel {\r\npadding-right: 20px;\r\n}\r\n.container{\r\nheight: 100%;\r\nalign-content: center;\r\npadding-top: 50px;\r\nfont-family: 'Righteous', cursive;\r\n}\r\n\r\n.signupCard{\r\nheight: 500px;\r\nalign-content: center;\r\nmargin: auto;\r\nwidth: 500px;\r\nbackground-color: rgba(15, 74, 92, 0.473) ;\r\n}\r\n\r\n.card-header {\r\nbackground-color: white;\r\n}\r\n.card-body h3{\r\ncolor: white;\r\ntext-align:center;\r\npadding-bottom:5px;\r\n}\r\n#blood{\r\n    width:75%;\r\n    border:none;\r\n}\r\n\r\n.update_btn{\r\ncolor: black;\r\nbackground-color: #FFC312;\r\nwidth: 100px;\r\nmargin: 0 40px;\r\n}\r\n\r\n.update_btn:hover{\r\ncolor: black;\r\nbackground-color: white;\r\n}\r\n\r\n.unregister_btn{\r\n    color: white;\r\n    background-color: #e02525;\r\n    width: 100px;\r\n    margin: 0 40px;\r\n}\r\n    \r\n.unregister_btn:hover{\r\ncolor: black;\r\nbackground-color: white;\r\n}\r\n\r\n.ButtonGroup {\r\n    margin: auto;\r\n    justify-content: center;\r\n}\r\n.heading{\r\n    padding-top:5%;\r\n    padding-left:30%\r\n}\r\n\r\n@import url(https://fonts.googleapis.com/css?family=Roboto:300);\r\n\r\n \r\n.box{\r\n    background: none;\r\n    margin-top: 200px;\r\n\tpadding-top:300px;\r\n}\r\n\r\n.loader{\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    -webkit-transform: translate(-50%, -50%);\r\n    transform: translate(-50%, -50%);\r\n}​\r\n\t.back {\r\n\t\tmargin:1em auto;\r\n\t}\r\n\t.back span {\r\n\t\tfont-size:3em;\r\n\t\tcolor:#F2C640;;\r\n\t\tbackground: #e02525;\r\n\t\tdisplay:table-cell;\r\n\t\tbox-shadow:inset 0 0 5px rgba(0,0,0,0.3), 0 5px 0 #ccc;\r\n\t\tpadding: 0 15px;\r\n\t\tline-height: 100px;\r\n\t\tanimation:jumb 2s infinite;\r\n\t}\r\n\t@keyframes jumb {\r\n\t\t0% {\r\n\t\t\ttransform:translateY(0px)\r\n\t\t}\r\n\t\t50% {\r\n\t\t\ttransform:translateY(-30px);\r\n\t\t\tbox-shadow:0 15px 0 #F2C640;\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform:translateY(0px)\t\r\n\t\t}\r\n\t}\r\n\t.back span:nth-child(1) {\r\n\t\tanimation-delay:0s;\r\n\t}\r\n\t.back span:nth-child(2) {\r\n\t\tanimation-delay:.1s;\t\r\n\t}\r\n\t.back span:nth-child(3) {\r\n\t\tanimation-delay:.2s;\r\n\t}\r\n\t.back span:nth-child(4) {\r\n\t\tanimation-delay:.3s;\t\r\n\t}\r\n\t.back span:nth-child(5) {\r\n\t\tanimation-delay:.4s;\r\n\t}\r\n\t.back span:nth-child(6) {\r\n\t\tanimation-delay:.5s;\t\r\n\t}\r\n\t.back span:nth-child(7) {\r\n\t\tanimation-delay:.6s;\r\n\t}\r\n\r\n`\r\n\r\n{/* <DonorProfileContainer>\r\n<div class=\"d-flex justify-content-center\">\r\n    <div className=\"spinnerl\">\r\n        <div class=\"spinner-border text-danger\" role=\"status\" >\r\n            <span class=\"sr-only\">Loading...</span>\r\n        </div>\r\n    </div>\r\n</div>\r\n</DonorProfileContainer> */}\r\n\r\n","E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\Footer.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankHome.component.js",["137"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\signup-form-Recipient.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankDonor.component.js",["138"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Donor\\DonorDonations.component.js",["139","140"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\context\\BloodGroupsList.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\misc\\ErrorNotice.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\layout\\Sidebar.component.js",[],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\auth\\login-form.component.js",["141","142"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankStock.component.js",["143"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Donor\\DonorRequests.component.js",["144","145"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\Recipient\\SearchDonor.component.js",["146","147","148","149"],"E:\\Study\\ReactLearn\\blood-bank-system\\src\\Components\\pages\\BloodBank\\BankRequest.component.js",["150"],"import React, { useEffect, useContext, useState } from \"react\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport styled from 'styled-components';\r\nimport UserContext from '../../../context/userDetailContext';\r\nimport Axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport ErrorNotice from '../../misc/ErrorNotice';\r\n\r\n\r\n\r\nfunction RenderButtons(props) {\r\n  if (props.status === 'Active') {\r\n    return (\r\n      <td>\r\n        <button type=\"button\" class=\"btn btn-success\" onClick={props.Donate}>Donate</button>\r\n      </td>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <td>\r\n    </td>\r\n  )\r\n}\r\n\r\n\r\nfunction RequestRow(props) {\r\n  const { userLoginData } = useContext(UserContext);\r\n\r\n  const Donate = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await Axios.post(`http://localhost:5000/bloodBag/CompleteDonation/${userLoginData.userData.user_id}`, {\r\n        id: props.request_id,\r\n        bloodGroup: props.request.bloodGroup,\r\n        quantity: props.request.quantity\r\n      });\r\n      Swal.fire(\r\n        'Deleted',\r\n        'Awww! Sad to See You Go.',\r\n        'success'\r\n      )\r\n    } catch (err) {\r\n      err.response.data.msg && props.setError(err.response.data.msg);\r\n    }\r\n    props.update();\r\n  }\r\n\r\n  return (\r\n    <tr>\r\n      <th scope=\"row\">{props.index}</th>\r\n      <td>{props.request.recipient_name}</td>\r\n      <td>{props.request.age} </td>\r\n      <td>{props.request.bloodGroup}</td>\r\n      <td>{props.request.address}</td>\r\n      <td>{props.request.contact}</td>\r\n      <td>{props.request.quantity}</td>\r\n      <td>{props.request.status}</td>\r\n      <RenderButtons status={props.request.status} Donate={Donate} />\r\n    </tr>\r\n  )\r\n}\r\n\r\n\r\nfunction BankRequests() {\r\n  //to prevent from loading if user is log out\r\n  const { userLoginData } = useContext(UserContext)\r\n  const history = useHistory();\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const [error, setErr] = useState();\r\n\r\n\r\n  useEffect(() => {\r\n    if (!userLoginData.userData)\r\n      history.push('/')\r\n    try {\r\n      if (userLoginData.userData.type !== \"BloodBank\")  //to prevent accessing any other type\r\n        history.push(`/${userLoginData.userData.type}`)\r\n\r\n\r\n      //get data\r\n      const getData = async () => {\r\n        const requestResponse = await Axios.get(`http://localhost:5000/bloodRequest/getAllRequests/${userLoginData.userData.user_id}`);\r\n        setData(requestResponse.data);\r\n        setLoading(false);\r\n      }\r\n      getData();\r\n\r\n    }\r\n    catch {\r\n      history.push('/')\r\n    }\r\n\r\n\r\n  }, [userLoginData])\r\n\r\n\r\n  const setError = (err) => {\r\n    setErr(err);\r\n  }\r\n\r\n  //after deleting data not updating thats why\r\n  const updateState = async () => {\r\n    const requestResponse = await Axios.get(`http://localhost:5000/bloodRequest/getAllRequests/${userLoginData.userData.user_id}`);\r\n    setData(requestResponse.data)\r\n  }\r\n\r\n  const showRequests = () => {\r\n    return (\r\n      data.map((currentRequest, index) => {\r\n        //this is returning single donor row\r\n        return <RequestRow request={currentRequest} request_id={currentRequest._id} index={index + 1} update={updateState} setError={setError} />\r\n      })\r\n    )\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <BankContainer>\r\n        <div class=\"box\">\r\n          <div class=\"loader\">\r\n            <span class=\"back\">\r\n              <span>L</span>\r\n              <span>O</span>\r\n              <span>A</span>\r\n              <span>D</span>\r\n              <span>I</span>\r\n              <span>N</span>\r\n              <span>G</span>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </BankContainer>\r\n\r\n    )\r\n  }\r\n\r\n  return (\r\n    <BankContainer>\r\n      <div class=\"body\">\r\n        <h1>Patient Requests</h1>\r\n        {error && (\r\n          <ErrorNotice message={error} clearError={() => setError(undefined)} />\r\n        )}\r\n        <table class=\"table table-striped\">\r\n          <thead class=\"thead\">\r\n            <tr>\r\n              <th scope=\"col\">ID</th>\r\n              <th scope=\"col\">RECIPIENT NAME</th>\r\n              <th scope=\"col\">AGE</th>\r\n              <th scope=\"col\">BLOOD GROUP</th>\r\n              <th scope=\"col\">ADDRESS</th>\r\n              <th scope=\"col\">CONTACT NO</th>\r\n              <th scope=\"col\">QUANTITY</th>\r\n              <th scope=\"col\">STATUS</th>\r\n              <th scope=\"col\">ACTION</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {showRequests()}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </BankContainer>\r\n  )\r\n}\r\n\r\nexport default BankRequests;\r\n\r\nconst BankContainer = styled.div`\r\n.thead{\r\n    background-color:Black;\r\n    color:white;\r\n    font-weight:bold;\r\n    font-size:15px;\r\n    width:50%;\r\n}\r\n.table table-striped{\r\n    width:50%;\r\n}\r\n.body{\r\n    padding-left:20%;\r\n    padding-right:10%;\r\n    padding-top:3%;\r\n}\r\n\r\n\r\n\r\n@import url(https://fonts.googleapis.com/css?family=Roboto:300);\r\n\r\n \r\n.box{\r\n    background: none;\r\n    margin-top: 200px;\r\n\tpadding-top:300px;\r\n}\r\n\r\n.loader{\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    -webkit-transform: translate(-50%, -50%);\r\n    transform: translate(-50%, -50%);\r\n}​\r\n\t.back {\r\n\t\tmargin:1em auto;\r\n\t}\r\n\t.back span {\r\n\t\tfont-size:3em;\r\n\t\tcolor:#F2C640;;\r\n\t\tbackground: #e02525;\r\n\t\tdisplay:table-cell;\r\n\t\tbox-shadow:inset 0 0 5px rgba(0,0,0,0.3), 0 5px 0 #ccc;\r\n\t\tpadding: 0 15px;\r\n\t\tline-height: 100px;\r\n\t\tanimation:jumb 2s infinite;\r\n\t}\r\n\t@keyframes jumb {\r\n\t\t0% {\r\n\t\t\ttransform:translateY(0px)\r\n\t\t}\r\n\t\t50% {\r\n\t\t\ttransform:translateY(-30px);\r\n\t\t\tbox-shadow:0 15px 0 #F2C640;\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform:translateY(0px)\t\r\n\t\t}\r\n\t}\r\n\t.back span:nth-child(1) {\r\n\t\tanimation-delay:0s;\r\n\t}\r\n\t.back span:nth-child(2) {\r\n\t\tanimation-delay:.1s;\t\r\n\t}\r\n\t.back span:nth-child(3) {\r\n\t\tanimation-delay:.2s;\r\n\t}\r\n\t.back span:nth-child(4) {\r\n\t\tanimation-delay:.3s;\t\r\n\t}\r\n\t.back span:nth-child(5) {\r\n\t\tanimation-delay:.4s;\r\n\t}\r\n\t.back span:nth-child(6) {\r\n\t\tanimation-delay:.5s;\t\r\n\t}\r\n\t.back span:nth-child(7) {\r\n\t\tanimation-delay:.6s;\r\n\t}\r\n\r\n\r\n`;",{"ruleId":"151","severity":1,"message":"152","line":4,"column":35,"nodeType":"153","messageId":"154","endLine":4,"endColumn":41},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"155","replacedBy":"159"},{"ruleId":"157","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":92,"column":6,"nodeType":"163","endLine":92,"endColumn":21,"suggestions":"164"},{"ruleId":"161","severity":1,"message":"165","line":54,"column":8,"nodeType":"163","endLine":54,"endColumn":23,"suggestions":"166"},{"ruleId":"151","severity":1,"message":"167","line":19,"column":22,"nodeType":"153","messageId":"154","endLine":19,"endColumn":31},{"ruleId":"161","severity":1,"message":"168","line":35,"column":8,"nodeType":"163","endLine":35,"endColumn":10,"suggestions":"169"},{"ruleId":"161","severity":1,"message":"162","line":33,"column":5,"nodeType":"163","endLine":33,"endColumn":20,"suggestions":"170"},{"ruleId":"155","replacedBy":"171"},{"ruleId":"157","replacedBy":"172"},{"ruleId":"151","severity":1,"message":"173","line":28,"column":10,"nodeType":"153","messageId":"154","endLine":28,"endColumn":21},{"ruleId":"161","severity":1,"message":"162","line":57,"column":8,"nodeType":"163","endLine":57,"endColumn":23,"suggestions":"174"},{"ruleId":"175","severity":1,"message":"176","line":336,"column":1,"nodeType":"177","messageId":"178","endLine":344,"endColumn":29},{"ruleId":"161","severity":1,"message":"162","line":31,"column":6,"nodeType":"163","endLine":31,"endColumn":21,"suggestions":"179"},{"ruleId":"161","severity":1,"message":"162","line":92,"column":6,"nodeType":"163","endLine":92,"endColumn":21,"suggestions":"180"},{"ruleId":"151","severity":1,"message":"181","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":26},{"ruleId":"161","severity":1,"message":"162","line":42,"column":6,"nodeType":"163","endLine":42,"endColumn":21,"suggestions":"182"},{"ruleId":"151","severity":1,"message":"181","line":2,"column":17,"nodeType":"153","messageId":"154","endLine":2,"endColumn":26},{"ruleId":"151","severity":1,"message":"183","line":21,"column":13,"nodeType":"153","messageId":"154","endLine":21,"endColumn":26},{"ruleId":"161","severity":1,"message":"162","line":22,"column":6,"nodeType":"163","endLine":22,"endColumn":21,"suggestions":"184"},{"ruleId":"151","severity":1,"message":"181","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":26},{"ruleId":"161","severity":1,"message":"162","line":33,"column":6,"nodeType":"163","endLine":33,"endColumn":21,"suggestions":"185"},{"ruleId":"161","severity":1,"message":"162","line":35,"column":6,"nodeType":"163","endLine":35,"endColumn":21,"suggestions":"186"},{"ruleId":"187","severity":1,"message":"188","line":81,"column":38,"nodeType":"189","messageId":"190","endLine":81,"endColumn":40},{"ruleId":"191","severity":1,"message":"192","line":82,"column":26,"nodeType":"193","messageId":"194","endLine":82,"endColumn":28},{"ruleId":"191","severity":1,"message":"192","line":86,"column":36,"nodeType":"193","messageId":"194","endLine":86,"endColumn":38},{"ruleId":"161","severity":1,"message":"162","line":96,"column":6,"nodeType":"163","endLine":96,"endColumn":21,"suggestions":"195"},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","no-native-reassign",["196"],"no-negated-in-lhs",["197"],["196"],["197"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["198"],"React Hook useEffect has missing dependencies: 'history' and 'props.match.params.id'. Either include them or remove the dependency array.",["199"],"'setUserId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'userLoginData.userData'. Either include them or remove the dependency array.",["200"],["201"],["196"],["197"],"'profileData' is assigned a value but never used.",["202"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["203"],["204"],"'Component' is defined but never used.",["205"],"'userLoginData' is assigned a value but never used.",["206"],["207"],["208"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["209"],"no-global-assign","no-unsafe-negation",{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"210","fix":"216"},{"desc":"210","fix":"217"},{"desc":"210","fix":"218"},{"desc":"210","fix":"219"},{"desc":"210","fix":"220"},{"desc":"210","fix":"221"},{"desc":"210","fix":"222"},{"desc":"210","fix":"223"},{"desc":"210","fix":"224"},"Update the dependencies array to be: [history, userLoginData]",{"range":"225","text":"226"},"Update the dependencies array to be: [history, props.match.params.id, userLoginData]",{"range":"227","text":"228"},"Update the dependencies array to be: [history, userLoginData.userData]",{"range":"229","text":"230"},{"range":"231","text":"226"},{"range":"232","text":"226"},{"range":"233","text":"226"},{"range":"234","text":"226"},{"range":"235","text":"226"},{"range":"236","text":"226"},{"range":"237","text":"226"},{"range":"238","text":"226"},{"range":"239","text":"226"},[2457,2472],"[history, userLoginData]",[1842,1857],"[history, props.match.params.id, userLoginData]",[1167,1169],"[history, userLoginData.userData]",[991,1006],[1885,1900],[1057,1072],[2390,2405],[1253,1268],[669,684],[1004,1019],[1076,1091],[2560,2575]]